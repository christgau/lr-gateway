!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADAPTOR	oris_automationParser.c	110;"	d	file:
ADAPTOR	oris_automationParser.c	152;"	d	file:
AND	oris_automationLexer.h	463;"	d
AND	oris_automationParser.h	527;"	d
ANTLR3COLLECTIONS_H	/home/steffen/include/antlr3collections.h	2;"	d
ANTLR3REWRITESTREAM_H	/home/steffen/include/antlr3rewritestreams.h	2;"	d
ANTLR3TREEPARSER_H	/home/steffen/include/antlr3treeparser.h	2;"	d
ANTLR3_API	/home/steffen/include/antlr3defs.h	146;"	d
ANTLR3_API	/home/steffen/include/antlr3defs.h	355;"	d
ANTLR3_API	/home/steffen/include/antlr3defs.h	411;"	d
ANTLR3_ARBORETUM	/home/steffen/include/antlr3commontree.h	/^    ANTLR3_ARBORETUM;$/;"	t	typeref:struct:ANTLR3_ARBORETUM_struct
ANTLR3_ARBORETUM_struct	/home/steffen/include/antlr3commontree.h	/^typedef	struct ANTLR3_ARBORETUM_struct$/;"	s
ANTLR3_AVERAGE	/home/steffen/include/antlr3defs.h	39;"	d
ANTLR3_BASE_RECOGNIZER	/home/steffen/include/antlr3baserecognizer.h	/^    ANTLR3_BASE_RECOGNIZER;$/;"	t	typeref:struct:ANTLR3_BASE_RECOGNIZER_struct
ANTLR3_BASE_RECOGNIZER_struct	/home/steffen/include/antlr3baserecognizer.h	/^typedef	struct ANTLR3_BASE_RECOGNIZER_struct$/;"	s
ANTLR3_BASE_TREE	/home/steffen/include/antlr3basetree.h	/^    ANTLR3_BASE_TREE;$/;"	t	typeref:struct:ANTLR3_BASE_TREE_struct
ANTLR3_BASE_TREE_ADAPTOR_struct	/home/steffen/include/antlr3basetreeadaptor.h	/^typedef	struct ANTLR3_BASE_TREE_ADAPTOR_struct$/;"	s
ANTLR3_BASE_TREE_struct	/home/steffen/include/antlr3basetree.h	/^typedef	struct ANTLR3_BASE_TREE_struct$/;"	s
ANTLR3_BE	/home/steffen/include/antlr3defs.h	69;"	d
ANTLR3_BITSET	/home/steffen/include/antlr3bitset.h	/^    ANTLR3_BITSET;$/;"	t	typeref:struct:ANTLR3_BITSET_struct
ANTLR3_BITSET_BITS	/home/steffen/include/antlr3bitset.h	45;"	d
ANTLR3_BITSET_LIST	/home/steffen/include/antlr3bitset.h	/^	ANTLR3_BITSET_LIST;$/;"	t	typeref:struct:ANTLR3_BITSET_LIST_struct
ANTLR3_BITSET_LIST_struct	/home/steffen/include/antlr3bitset.h	/^typedef struct ANTLR3_BITSET_LIST_struct$/;"	s
ANTLR3_BITSET_LOG_BITS	/home/steffen/include/antlr3bitset.h	53;"	d
ANTLR3_BITSET_MOD_MASK	/home/steffen/include/antlr3bitset.h	63;"	d
ANTLR3_BITSET_NIBBLE	/home/steffen/include/antlr3bitset.h	49;"	d
ANTLR3_BITSET_struct	/home/steffen/include/antlr3bitset.h	/^typedef	struct ANTLR3_BITSET_struct$/;"	s
ANTLR3_BITWORD	/home/steffen/include/antlr3defs.h	/^typedef UINT64  ANTLR3_BITWORD, *pANTLR3_BITWORD;$/;"	t
ANTLR3_BITWORD	/home/steffen/include/antlr3defs.h	/^typedef uint64_t    ANTLR3_BITWORD, *pANTLR3_BITWORD;$/;"	t
ANTLR3_BOOLEAN	/home/steffen/include/antlr3defs.h	/^typedef	UINT8	ANTLR3_BOOLEAN, *pANTLR3_BOOLEAN;$/;"	t
ANTLR3_BOOLEAN	/home/steffen/include/antlr3defs.h	/^typedef	uint8_t	    ANTLR3_BOOLEAN, *pANTLR3_BOOLEAN;$/;"	t
ANTLR3_BOOLEAN	/home/steffen/include/antlr3defs.h	/^typedef uint32_t    ANTLR3_BOOLEAN, *pANTLR3_BOOLEAN;$/;"	t
ANTLR3_CALLOC	/home/steffen/include/antlr3defs.h	465;"	d
ANTLR3_CDECL	/home/steffen/include/antlr3defs.h	147;"	d
ANTLR3_CDECL	/home/steffen/include/antlr3defs.h	356;"	d
ANTLR3_CHAR	/home/steffen/include/antlr3defs.h	/^typedef	INT32	ANTLR3_CHAR,	*pANTLR3_CHAR;$/;"	t
ANTLR3_CHAR	/home/steffen/include/antlr3defs.h	/^typedef int32_t	    ANTLR3_CHAR,    *pANTLR3_CHAR;$/;"	t
ANTLR3_CHAR	/home/steffen/include/antlr3defs.h	/^typedef int32_t     ANTLR3_CHAR,    *pANTLR3_CHAR;$/;"	t
ANTLR3_CHARSTREAM	/home/steffen/include/antlr3intstream.h	70;"	d
ANTLR3_CHARSTREAM_EOF	/home/steffen/include/antlr3errors.h	40;"	d
ANTLR3_CLOSESOCKET	/home/steffen/include/antlr3defs.h	228;"	d
ANTLR3_CLOSESOCKET	/home/steffen/include/antlr3defs.h	386;"	d
ANTLR3_COMMONTREENODE	/home/steffen/include/antlr3intstream.h	82;"	d
ANTLR3_COMMON_TOKEN	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_COMMON_TOKEN;$/;"	t	typeref:struct:ANTLR3_COMMON_TOKEN_struct
ANTLR3_COMMON_TOKEN_STREAM	/home/steffen/include/antlr3tokenstream.h	/^    ANTLR3_COMMON_TOKEN_STREAM;$/;"	t	typeref:struct:ANTLR3_COMMON_TOKEN_STREAM_struct
ANTLR3_COMMON_TOKEN_STREAM_struct	/home/steffen/include/antlr3tokenstream.h	/^typedef	struct	ANTLR3_COMMON_TOKEN_STREAM_struct$/;"	s
ANTLR3_COMMON_TOKEN_struct	/home/steffen/include/antlr3commontoken.h	/^typedef	struct ANTLR3_COMMON_TOKEN_struct$/;"	s
ANTLR3_COMMON_TREE	/home/steffen/include/antlr3commontree.h	/^    ANTLR3_COMMON_TREE;$/;"	t	typeref:struct:ANTLR3_COMMON_TREE_struct
ANTLR3_COMMON_TREE_ADAPTOR	/home/steffen/include/antlr3commontreeadaptor.h	/^    ANTLR3_COMMON_TREE_ADAPTOR;$/;"	t	typeref:struct:ANTLR3_COMMON_TREE_ADAPTOR_struct
ANTLR3_COMMON_TREE_ADAPTOR_struct	/home/steffen/include/antlr3commontreeadaptor.h	/^typedef	struct ANTLR3_COMMON_TREE_ADAPTOR_struct$/;"	s
ANTLR3_COMMON_TREE_NODE_STREAM	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_COMMON_TREE_NODE_STREAM;$/;"	t	typeref:struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
ANTLR3_COMMON_TREE_NODE_STREAM_struct	/home/steffen/include/antlr3commontreenodestream.h	/^typedef	struct ANTLR3_COMMON_TREE_NODE_STREAM_struct$/;"	s
ANTLR3_COMMON_TREE_struct	/home/steffen/include/antlr3commontree.h	/^typedef struct ANTLR3_COMMON_TREE_struct$/;"	s
ANTLR3_CYCLICDFA_H	/home/steffen/include/antlr3cyclicdfa.h	7;"	d
ANTLR3_CYCLIC_DFA	/home/steffen/include/antlr3cyclicdfa.h	/^    ANTLR3_CYCLIC_DFA;$/;"	t	typeref:struct:ANTLR3_CYCLIC_DFA_struct
ANTLR3_CYCLIC_DFA_struct	/home/steffen/include/antlr3cyclicdfa.h	/^typedef struct ANTLR3_CYCLIC_DFA_struct$/;"	s
ANTLR3_DEBUG_EVENT_LISTENER	/home/steffen/include/antlr3debugeventlistener.h	/^	ANTLR3_DEBUG_EVENT_LISTENER;$/;"	t	typeref:struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
ANTLR3_DEBUG_EVENT_LISTENER_H	/home/steffen/include/antlr3debugeventlistener.h	16;"	d
ANTLR3_DEBUG_EVENT_LISTENER_struct	/home/steffen/include/antlr3debugeventlistener.h	/^typedef struct ANTLR3_DEBUG_EVENT_LISTENER_struct$/;"	s
ANTLR3_EARLY_EXIT_EXCEPTION	/home/steffen/include/antlr3exception.h	76;"	d
ANTLR3_EARLY_EXIT_NAME	/home/steffen/include/antlr3exception.h	80;"	d
ANTLR3_ENC_8BIT	/home/steffen/include/antlr3defs.h	77;"	d
ANTLR3_ENC_EBCDIC	/home/steffen/include/antlr3defs.h	97;"	d
ANTLR3_ENC_UTF16	/home/steffen/include/antlr3defs.h	85;"	d
ANTLR3_ENC_UTF16BE	/home/steffen/include/antlr3defs.h	86;"	d
ANTLR3_ENC_UTF16LE	/home/steffen/include/antlr3defs.h	87;"	d
ANTLR3_ENC_UTF32	/home/steffen/include/antlr3defs.h	91;"	d
ANTLR3_ENC_UTF32BE	/home/steffen/include/antlr3defs.h	92;"	d
ANTLR3_ENC_UTF32LE	/home/steffen/include/antlr3defs.h	93;"	d
ANTLR3_ENC_UTF8	/home/steffen/include/antlr3defs.h	81;"	d
ANTLR3_EOR_TOKEN_TYPE	/home/steffen/include/antlr3commontoken.h	56;"	d
ANTLR3_ERR_BASE	/home/steffen/include/antlr3errors.h	48;"	d
ANTLR3_ERR_HASHDUP	/home/steffen/include/antlr3errors.h	51;"	d
ANTLR3_ERR_NOFILE	/home/steffen/include/antlr3errors.h	50;"	d
ANTLR3_ERR_NOMEM	/home/steffen/include/antlr3errors.h	49;"	d
ANTLR3_EXCEPTION	/home/steffen/include/antlr3exception.h	/^    ANTLR3_EXCEPTION;$/;"	t	typeref:struct:ANTLR3_EXCEPTION_struct
ANTLR3_EXCEPTION_struct	/home/steffen/include/antlr3exception.h	/^typedef	struct ANTLR3_EXCEPTION_struct$/;"	s
ANTLR3_FACTORY_POOL_SIZE	/home/steffen/include/antlr3commontoken.h	47;"	d
ANTLR3_FACTORY_VPOOL_SIZE	/home/steffen/include/antlr3collections.h	279;"	d
ANTLR3_FAIL	/home/steffen/include/antlr3errors.h	34;"	d
ANTLR3_FAILED_PREDICATE_EXCEPTION	/home/steffen/include/antlr3exception.h	82;"	d
ANTLR3_FAILED_PREDICATE_NAME	/home/steffen/include/antlr3exception.h	83;"	d
ANTLR3_FALSE	/home/steffen/include/antlr3errors.h	37;"	d
ANTLR3_FASTCALL	/home/steffen/include/antlr3defs.h	148;"	d
ANTLR3_FASTCALL	/home/steffen/include/antlr3defs.h	357;"	d
ANTLR3_FDSC	/home/steffen/include/antlr3defs.h	/^typedef FILE *	    ANTLR3_FDSC;$/;"	t
ANTLR3_FPRINTF	/home/steffen/include/antlr3defs.h	524;"	d
ANTLR3_FREE	/home/steffen/include/antlr3defs.h	478;"	d
ANTLR3_FREE_FUNC	/home/steffen/include/antlr3defs.h	484;"	d
ANTLR3_FSTAT_STRUCT	/home/steffen/include/antlr3defs.h	/^typedef	struct stat ANTLR3_FSTAT_STRUCT;$/;"	t	typeref:struct:stat
ANTLR3_FUNC_PTR	/home/steffen/include/antlr3defs.h	204;"	d
ANTLR3_FUNC_PTR	/home/steffen/include/antlr3defs.h	210;"	d
ANTLR3_FUNC_PTR	/home/steffen/include/antlr3defs.h	417;"	d
ANTLR3_FUNC_PTR	/home/steffen/include/antlr3defs.h	423;"	d
ANTLR3_HASH_BUCKET	/home/steffen/include/antlr3collections.h	/^    ANTLR3_HASH_BUCKET;$/;"	t	typeref:struct:ANTLR3_HASH_BUCKET_struct
ANTLR3_HASH_BUCKET_struct	/home/steffen/include/antlr3collections.h	/^typedef struct	ANTLR3_HASH_BUCKET_struct$/;"	s
ANTLR3_HASH_ENTRY	/home/steffen/include/antlr3collections.h	/^    ANTLR3_HASH_ENTRY;$/;"	t	typeref:struct:ANTLR3_HASH_ENTRY_struct
ANTLR3_HASH_ENTRY_struct	/home/steffen/include/antlr3collections.h	/^typedef	struct	ANTLR3_HASH_ENTRY_struct$/;"	s
ANTLR3_HASH_ENUM	/home/steffen/include/antlr3collections.h	/^    ANTLR3_HASH_ENUM;$/;"	t	typeref:struct:ANTLR3_HASH_ENUM_struct
ANTLR3_HASH_ENUM_struct	/home/steffen/include/antlr3collections.h	/^typedef struct	ANTLR3_HASH_ENUM_struct$/;"	s
ANTLR3_HASH_KEY	/home/steffen/include/antlr3collections.h	/^} ANTLR3_HASH_KEY, *pANTLR3_HASH_KEY;$/;"	t	typeref:struct:ANTLR3_HASH_KEY_struct
ANTLR3_HASH_KEY_struct	/home/steffen/include/antlr3collections.h	/^typedef struct ANTLR3_HASH_KEY_struct$/;"	s
ANTLR3_HASH_TABLE	/home/steffen/include/antlr3collections.h	/^    ANTLR3_HASH_TABLE;$/;"	t	typeref:struct:ANTLR3_HASH_TABLE_struct
ANTLR3_HASH_TABLE_struct	/home/steffen/include/antlr3collections.h	/^typedef	struct	ANTLR3_HASH_TABLE_struct$/;"	s
ANTLR3_HASH_TYPE_INT	/home/steffen/include/antlr3collections.h	36;"	d
ANTLR3_HASH_TYPE_STR	/home/steffen/include/antlr3collections.h	37;"	d
ANTLR3_INLINE	/home/steffen/include/antlr3defs.h	198;"	d
ANTLR3_INLINE	/home/steffen/include/antlr3defs.h	410;"	d
ANTLR3_INPUT_MASK	/home/steffen/include/antlr3intstream.h	87;"	d
ANTLR3_INPUT_STREAM	/home/steffen/include/antlr3input.h	/^    ANTLR3_INPUT_STREAM;$/;"	t	typeref:struct:ANTLR3_INPUT_STREAM_struct
ANTLR3_INPUT_STREAM_struct	/home/steffen/include/antlr3input.h	/^typedef	struct	ANTLR3_INPUT_STREAM_struct$/;"	s
ANTLR3_INT16	/home/steffen/include/antlr3defs.h	/^typedef	INT16	ANTLR3_INT16,	*pANTLR3_INT16;$/;"	t
ANTLR3_INT16	/home/steffen/include/antlr3defs.h	/^typedef int16_t	    ANTLR3_INT16,   *pANTLR3_INT16;$/;"	t
ANTLR3_INT32	/home/steffen/include/antlr3defs.h	/^typedef	INT32	ANTLR3_INT32,	*pANTLR3_INT32;$/;"	t
ANTLR3_INT32	/home/steffen/include/antlr3defs.h	/^typedef int32_t	    ANTLR3_INT32,   *pANTLR3_INT32;$/;"	t
ANTLR3_INT64	/home/steffen/include/antlr3defs.h	/^typedef	INT64	ANTLR3_INT64,	*pANTLR3_INT64;$/;"	t
ANTLR3_INT64	/home/steffen/include/antlr3defs.h	/^typedef int64_t	    ANTLR3_INT64,   *pANTLR3_INT64;$/;"	t
ANTLR3_INT8	/home/steffen/include/antlr3defs.h	/^typedef	INT8	ANTLR3_INT8,	*pANTLR3_INT8;$/;"	t
ANTLR3_INT8	/home/steffen/include/antlr3defs.h	/^typedef int8_t	    ANTLR3_INT8,    *pANTLR3_INT8;$/;"	t
ANTLR3_INTKEY	/home/steffen/include/antlr3defs.h	/^typedef ANTLR3_UINT32		ANTLR3_INTKEY;$/;"	t
ANTLR3_INTKEY	/home/steffen/include/antlr3defs.h	/^typedef ANTLR3_UINT64		ANTLR3_INTKEY;$/;"	t
ANTLR3_INT_STREAM	/home/steffen/include/antlr3intstream.h	/^    ANTLR3_INT_STREAM;$/;"	t	typeref:struct:ANTLR3_INT_STREAM_struct
ANTLR3_INT_STREAM_struct	/home/steffen/include/antlr3intstream.h	/^typedef	struct ANTLR3_INT_STREAM_struct$/;"	s
ANTLR3_INT_TRIE	/home/steffen/include/antlr3collections.h	/^    ANTLR3_INT_TRIE;$/;"	t	typeref:struct:ANTLR3_INT_TRIE_struct
ANTLR3_INT_TRIE_NODE	/home/steffen/include/antlr3collections.h	/^    ANTLR3_INT_TRIE_NODE, * pANTLR3_INT_TRIE_NODE;$/;"	t	typeref:struct:ANTLR3_INT_TRIE_NODE_struct
ANTLR3_INT_TRIE_NODE_struct	/home/steffen/include/antlr3collections.h	/^typedef struct ANTLR3_INT_TRIE_NODE_struct$/;"	s
ANTLR3_INT_TRIE_struct	/home/steffen/include/antlr3collections.h	/^typedef struct ANTLR3_INT_TRIE_struct$/;"	s
ANTLR3_LE	/home/steffen/include/antlr3defs.h	73;"	d
ANTLR3_LEXER	/home/steffen/include/antlr3lexer.h	/^    ANTLR3_LEXER;$/;"	t	typeref:struct:ANTLR3_LEXER_struct
ANTLR3_LEXER_struct	/home/steffen/include/antlr3lexer.h	/^typedef	struct ANTLR3_LEXER_struct$/;"	s
ANTLR3_LEX_STATE	/home/steffen/include/antlr3input.h	/^    ANTLR3_LEX_STATE;$/;"	t	typeref:struct:ANTLR3_LEX_STATE_struct
ANTLR3_LEX_STATE_struct	/home/steffen/include/antlr3input.h	/^typedef	struct	ANTLR3_LEX_STATE_struct$/;"	s
ANTLR3_LIST	/home/steffen/include/antlr3collections.h	/^    ANTLR3_LIST;$/;"	t	typeref:struct:ANTLR3_LIST_struct
ANTLR3_LIST_SIZE_HINT	/home/steffen/include/antlr3defs.h	47;"	d
ANTLR3_LIST_SIZE_HINT	/home/steffen/include/antlr3defs.h	54;"	d
ANTLR3_LIST_SIZE_HINT	/home/steffen/include/antlr3defs.h	61;"	d
ANTLR3_LIST_struct	/home/steffen/include/antlr3collections.h	/^typedef	struct	ANTLR3_LIST_struct$/;"	s
ANTLR3_MALLOC	/home/steffen/include/antlr3defs.h	458;"	d
ANTLR3_MARKER	/home/steffen/include/antlr3defs.h	/^typedef	ANTLR3_INT32		ANTLR3_MARKER;$/;"	t
ANTLR3_MARKER	/home/steffen/include/antlr3defs.h	/^typedef ANTLR3_INT64		ANTLR3_MARKER;			$/;"	t
ANTLR3_MARKER	/home/steffen/include/antlr3defs.h	/^typedef ANTLR3_INT64		ANTLR3_MARKER;$/;"	t
ANTLR3_MEMCPY	/home/steffen/include/antlr3defs.h	496;"	d
ANTLR3_MEMMOVE	/home/steffen/include/antlr3defs.h	502;"	d
ANTLR3_MEMSET	/home/steffen/include/antlr3defs.h	508;"	d
ANTLR3_MIN_TOKEN_TYPE	/home/steffen/include/antlr3commontoken.h	69;"	d
ANTLR3_MISMATCHED_EX_NAME	/home/steffen/include/antlr3exception.h	55;"	d
ANTLR3_MISMATCHED_SET_EXCEPTION	/home/steffen/include/antlr3exception.h	67;"	d
ANTLR3_MISMATCHED_SET_NAME	/home/steffen/include/antlr3exception.h	71;"	d
ANTLR3_MISMATCHED_TOKEN_EXCEPTION	/home/steffen/include/antlr3exception.h	51;"	d
ANTLR3_MISMATCHED_TREE_NODE_EXCEPTION	/home/steffen/include/antlr3exception.h	85;"	d
ANTLR3_MISMATCHED_TREE_NODE_NAME	/home/steffen/include/antlr3exception.h	86;"	d
ANTLR3_MISSING_TOKEN_EXCEPTION	/home/steffen/include/antlr3exception.h	94;"	d
ANTLR3_MISSING_TOKEN_EXCEPTION_NAME	/home/steffen/include/antlr3exception.h	95;"	d
ANTLR3_NO_VIABLE_ALT_EXCEPTION	/home/steffen/include/antlr3exception.h	59;"	d
ANTLR3_NO_VIABLE_ALT_NAME	/home/steffen/include/antlr3exception.h	63;"	d
ANTLR3_PARSER	/home/steffen/include/antlr3parser.h	/^    ANTLR3_PARSER;$/;"	t	typeref:struct:ANTLR3_PARSER_struct
ANTLR3_PARSER_struct	/home/steffen/include/antlr3parser.h	/^typedef	struct ANTLR3_PARSER_struct$/;"	s
ANTLR3_PARSETREE_H	/home/steffen/include/antlr3parsetree.h	8;"	d
ANTLR3_PARSE_TREE	/home/steffen/include/antlr3parsetree.h	/^    ANTLR3_PARSE_TREE;$/;"	t	typeref:struct:ANTLR3_PARSE_TREE_struct
ANTLR3_PARSE_TREE_struct	/home/steffen/include/antlr3parsetree.h	/^typedef struct ANTLR3_PARSE_TREE_struct$/;"	s
ANTLR3_PRINTF	/home/steffen/include/antlr3defs.h	516;"	d
ANTLR3_REALLOC	/home/steffen/include/antlr3defs.h	472;"	d
ANTLR3_RECOGNITION_EXCEPTION	/home/steffen/include/antlr3exception.h	42;"	d
ANTLR3_RECOGNITION_EX_NAME	/home/steffen/include/antlr3exception.h	46;"	d
ANTLR3_RECOGNIZER_SHARED_STATE	/home/steffen/include/antlr3recognizersharedstate.h	/^	ANTLR3_RECOGNIZER_SHARED_STATE;$/;"	t	typeref:struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
ANTLR3_RECOGNIZER_SHARED_STATE_struct	/home/steffen/include/antlr3recognizersharedstate.h	/^typedef	struct ANTLR3_RECOGNIZER_SHARED_STATE_struct$/;"	s
ANTLR3_REWRITE_EARLY_EXCEPTION	/home/steffen/include/antlr3exception.h	88;"	d
ANTLR3_REWRITE_EARLY_EXCEPTION_NAME	/home/steffen/include/antlr3exception.h	89;"	d
ANTLR3_REWRITE_RULE_ELEMENT_STREAM	/home/steffen/include/antlr3rewritestreams.h	/^    ANTLR3_REWRITE_RULE_ELEMENT_STREAM;$/;"	t	typeref:struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct	/home/steffen/include/antlr3rewritestreams.h	/^typedef struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct$/;"	s
ANTLR3_REWRITE_RULE_NODE_STREAM	/home/steffen/include/antlr3rewritestreams.h	/^typedef struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct ANTLR3_REWRITE_RULE_NODE_STREAM;$/;"	t	typeref:struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
ANTLR3_REWRITE_RULE_SUBTREE_STREAM	/home/steffen/include/antlr3rewritestreams.h	/^typedef struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct ANTLR3_REWRITE_RULE_SUBTREE_STREAM;$/;"	t	typeref:struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
ANTLR3_REWRITE_RULE_TOKEN_STREAM	/home/steffen/include/antlr3rewritestreams.h	/^typedef struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct ANTLR3_REWRITE_RULE_TOKEN_STREAM;$/;"	t	typeref:struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
ANTLR3_SALENT	/home/steffen/include/antlr3defs.h	/^   typedef  size_t	ANTLR3_SALENT;$/;"	t
ANTLR3_SALENT	/home/steffen/include/antlr3defs.h	/^   typedef  socklen_t   ANTLR3_SALENT;$/;"	t
ANTLR3_SALENT	/home/steffen/include/antlr3defs.h	/^ typedef int		    ANTLR3_SALENT;$/;"	t
ANTLR3_SALENT	/home/steffen/include/antlr3defs.h	/^typedef	int			ANTLR3_SALENT;								\/\/ Type used for size of accept structure$/;"	t
ANTLR3_SIZE_HINT	/home/steffen/include/antlr3defs.h	44;"	d
ANTLR3_SIZE_HINT	/home/steffen/include/antlr3defs.h	53;"	d
ANTLR3_SIZE_HINT	/home/steffen/include/antlr3defs.h	60;"	d
ANTLR3_SOCKADDRC	/home/steffen/include/antlr3defs.h	/^typedef struct sockaddr		ANTLR3_SOCKADDRC, * pANTLR3_SOCKADDRC;	\/\/ Type used for cast on accept()$/;"	t	typeref:struct:sockaddr
ANTLR3_SOCKADDRT	/home/steffen/include/antlr3defs.h	/^   typedef struct sockaddr_in   ANTLR3_SOCKADDRT, * pANTLR3_SOCKADDRT;	\/\/ Type used for socket address declaration$/;"	t	typeref:struct:sockaddr_in
ANTLR3_SOCKADDRT	/home/steffen/include/antlr3defs.h	/^ typedef struct sockaddr_in ANTLR3_SOCKADDRT, * pANTLR3_SOCKADDRT;	\/\/ Type used for socket address declaration$/;"	t	typeref:struct:sockaddr_in
ANTLR3_SOCKADDRT	/home/steffen/include/antlr3defs.h	/^typedef struct sockaddr_in	ANTLR3_SOCKADDRT, * pANTLR3_SOCKADDRT;	\/\/ Type used for socket address declaration$/;"	t	typeref:struct:sockaddr_in
ANTLR3_STACK	/home/steffen/include/antlr3collections.h	/^    ANTLR3_STACK;$/;"	t	typeref:struct:ANTLR3_STACK_struct
ANTLR3_STACK_struct	/home/steffen/include/antlr3collections.h	/^typedef	struct	ANTLR3_STACK_struct$/;"	s
ANTLR3_STRDUP	/home/steffen/include/antlr3defs.h	490;"	d
ANTLR3_STRING	/home/steffen/include/antlr3string.h	/^    ANTLR3_STRING;$/;"	t	typeref:struct:ANTLR3_STRING_struct
ANTLR3_STRING_FACTORY	/home/steffen/include/antlr3string.h	/^    ANTLR3_STRING_FACTORY;$/;"	t	typeref:struct:ANTLR3_STRING_FACTORY_struct
ANTLR3_STRING_FACTORY_struct	/home/steffen/include/antlr3string.h	/^typedef struct	ANTLR3_STRING_FACTORY_struct$/;"	s
ANTLR3_STRING_TERMINATOR	/home/steffen/include/antlr3lexer.h	64;"	d
ANTLR3_STRING_struct	/home/steffen/include/antlr3string.h	/^typedef	struct ANTLR3_STRING_struct$/;"	s
ANTLR3_SUCCESS	/home/steffen/include/antlr3errors.h	33;"	d
ANTLR3_TEXT_CHARP	/home/steffen/include/antlr3commontoken.h	97;"	d
ANTLR3_TEXT_NONE	/home/steffen/include/antlr3commontoken.h	96;"	d
ANTLR3_TEXT_STRING	/home/steffen/include/antlr3commontoken.h	98;"	d
ANTLR3_TOKENSTREAM	/home/steffen/include/antlr3intstream.h	76;"	d
ANTLR3_TOKEN_DEFAULT_CHANNEL	/home/steffen/include/antlr3commontoken.h	77;"	d
ANTLR3_TOKEN_DOWN	/home/steffen/include/antlr3commontoken.h	60;"	d
ANTLR3_TOKEN_EOF	/home/steffen/include/antlr3commontoken.h	73;"	d
ANTLR3_TOKEN_FACTORY	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_TOKEN_FACTORY;$/;"	t	typeref:struct:ANTLR3_TOKEN_FACTORY_struct
ANTLR3_TOKEN_FACTORY_struct	/home/steffen/include/antlr3commontoken.h	/^typedef	struct ANTLR3_TOKEN_FACTORY_struct$/;"	s
ANTLR3_TOKEN_INVALID	/home/steffen/include/antlr3commontoken.h	54;"	d
ANTLR3_TOKEN_SOURCE	/home/steffen/include/antlr3tokenstream.h	/^    ANTLR3_TOKEN_SOURCE;$/;"	t	typeref:struct:ANTLR3_TOKEN_SOURCE_struct
ANTLR3_TOKEN_SOURCE_struct	/home/steffen/include/antlr3tokenstream.h	/^typedef struct ANTLR3_TOKEN_SOURCE_struct$/;"	s
ANTLR3_TOKEN_STREAM	/home/steffen/include/antlr3tokenstream.h	/^    ANTLR3_TOKEN_STREAM;$/;"	t	typeref:struct:ANTLR3_TOKEN_STREAM_struct
ANTLR3_TOKEN_STREAM_struct	/home/steffen/include/antlr3tokenstream.h	/^typedef	struct ANTLR3_TOKEN_STREAM_struct$/;"	s
ANTLR3_TOKEN_UP	/home/steffen/include/antlr3commontoken.h	64;"	d
ANTLR3_TOPO	/home/steffen/include/antlr3collections.h	/^    ANTLR3_TOPO;$/;"	t	typeref:struct:ANTLR3_TOPO_struct
ANTLR3_TOPO_struct	/home/steffen/include/antlr3collections.h	/^typedef struct ANTLR3_TOPO_struct$/;"	s
ANTLR3_TREE_ADAPTOR	/home/steffen/include/antlr3basetreeadaptor.h	/^    ANTLR3_TREE_ADAPTOR, *pANTLR3_TREE_ADAPTOR;$/;"	t	typeref:struct:ANTLR3_BASE_TREE_ADAPTOR_struct
ANTLR3_TREE_NODE_STREAM	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_TREE_NODE_STREAM;$/;"	t	typeref:struct:ANTLR3_TREE_NODE_STREAM_struct
ANTLR3_TREE_NODE_STREAM_struct	/home/steffen/include/antlr3commontreenodestream.h	/^typedef	struct ANTLR3_TREE_NODE_STREAM_struct$/;"	s
ANTLR3_TREE_PARSER	/home/steffen/include/antlr3treeparser.h	/^    ANTLR3_TREE_PARSER;$/;"	t	typeref:struct:ANTLR3_TREE_PARSER_struct
ANTLR3_TREE_PARSER_struct	/home/steffen/include/antlr3treeparser.h	/^typedef	struct	ANTLR3_TREE_PARSER_struct$/;"	s
ANTLR3_TREE_WALK_STATE	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_TREE_WALK_STATE;$/;"	t	typeref:struct:ANTLR3_TREE_WALK_STATE_struct
ANTLR3_TREE_WALK_STATE_struct	/home/steffen/include/antlr3commontreenodestream.h	/^typedef struct ANTLR3_TREE_WALK_STATE_struct$/;"	s
ANTLR3_TRIE_DEPTH	/home/steffen/include/antlr3defs.h	438;"	d
ANTLR3_TRIE_DEPTH	/home/steffen/include/antlr3defs.h	440;"	d
ANTLR3_TRIE_ENTRY	/home/steffen/include/antlr3collections.h	/^ANTLR3_TRIE_ENTRY, * pANTLR3_TRIE_ENTRY;$/;"	t	typeref:struct:ANTLR3_TRIE_ENTRY_struct
ANTLR3_TRIE_ENTRY_struct	/home/steffen/include/antlr3collections.h	/^typedef struct ANTLR3_TRIE_ENTRY_struct$/;"	s
ANTLR3_TRUE	/home/steffen/include/antlr3errors.h	36;"	d
ANTLR3_TYPE_LEXER	/home/steffen/include/antlr3baserecognizer.h	50;"	d
ANTLR3_TYPE_PARSER	/home/steffen/include/antlr3baserecognizer.h	54;"	d
ANTLR3_TYPE_TREE_PARSER	/home/steffen/include/antlr3baserecognizer.h	58;"	d
ANTLR3_UCHAR	/home/steffen/include/antlr3defs.h	/^typedef	UINT32	ANTLR3_UCHAR,	*pANTLR3_UCHAR;$/;"	t
ANTLR3_UCHAR	/home/steffen/include/antlr3defs.h	/^typedef uint32_t    ANTLR3_UCHAR,   *pANTLR3_UCHAR;$/;"	t
ANTLR3_UINT16	/home/steffen/include/antlr3defs.h	/^typedef	UINT16	ANTLR3_UINT16,	*pANTLR3_UINT16;$/;"	t
ANTLR3_UINT16	/home/steffen/include/antlr3defs.h	/^typedef uint16_t    ANTLR3_UINT16,  *pANTLR3_UINT16;$/;"	t
ANTLR3_UINT32	/home/steffen/include/antlr3defs.h	/^typedef	UINT32	ANTLR3_UINT32,	*pANTLR3_UINT32;$/;"	t
ANTLR3_UINT32	/home/steffen/include/antlr3defs.h	/^typedef uint32_t    ANTLR3_UINT32,  *pANTLR3_UINT32;$/;"	t
ANTLR3_UINT32_CAST	/home/steffen/include/antlr3defs.h	206;"	d
ANTLR3_UINT32_CAST	/home/steffen/include/antlr3defs.h	212;"	d
ANTLR3_UINT32_CAST	/home/steffen/include/antlr3defs.h	419;"	d
ANTLR3_UINT32_CAST	/home/steffen/include/antlr3defs.h	425;"	d
ANTLR3_UINT64	/home/steffen/include/antlr3defs.h	/^typedef	UINT64	ANTLR3_UINT64,	*pANTLR3_UINT64;$/;"	t
ANTLR3_UINT64	/home/steffen/include/antlr3defs.h	/^typedef uint64_t    ANTLR3_UINT64,  *pANTLR3_UINT64;$/;"	t
ANTLR3_UINT64_CAST	/home/steffen/include/antlr3defs.h	205;"	d
ANTLR3_UINT64_CAST	/home/steffen/include/antlr3defs.h	211;"	d
ANTLR3_UINT64_CAST	/home/steffen/include/antlr3defs.h	418;"	d
ANTLR3_UINT64_CAST	/home/steffen/include/antlr3defs.h	424;"	d
ANTLR3_UINT64_LIT	/home/steffen/include/antlr3defs.h	196;"	d
ANTLR3_UINT64_LIT	/home/steffen/include/antlr3defs.h	429;"	d
ANTLR3_UINT8	/home/steffen/include/antlr3defs.h	/^typedef	UINT8	ANTLR3_UINT8,	*pANTLR3_UINT8;$/;"	t
ANTLR3_UINT8	/home/steffen/include/antlr3defs.h	/^typedef uint8_t	    ANTLR3_UINT8,   *pANTLR3_UINT8;$/;"	t
ANTLR3_UNWANTED_TOKEN_EXCEPTION	/home/steffen/include/antlr3exception.h	91;"	d
ANTLR3_UNWANTED_TOKEN_EXCEPTION_NAME	/home/steffen/include/antlr3exception.h	92;"	d
ANTLR3_USE_64BIT	/home/steffen/include/antlr3config.h	8;"	d
ANTLR3_USE_64BIT	/home/steffen/include/antlr3defs.h	112;"	d
ANTLR3_VECTOR	/home/steffen/include/antlr3collections.h	/^    ANTLR3_VECTOR;$/;"	t	typeref:struct:ANTLR3_VECTOR_struct
ANTLR3_VECTOR_ELEMENT	/home/steffen/include/antlr3collections.h	/^    ANTLR3_VECTOR_ELEMENT, *pANTLR3_VECTOR_ELEMENT;$/;"	t	typeref:struct:ANTLR3_VECTOR_ELEMENT_struct
ANTLR3_VECTOR_ELEMENT_struct	/home/steffen/include/antlr3collections.h	/^typedef struct ANTLR3_VECTOR_ELEMENT_struct$/;"	s
ANTLR3_VECTOR_FACTORY	/home/steffen/include/antlr3collections.h	/^ANTLR3_VECTOR_FACTORY; $/;"	t	typeref:struct:ANTLR3_VECTOR_FACTORY_struct
ANTLR3_VECTOR_FACTORY_struct	/home/steffen/include/antlr3collections.h	/^typedef struct ANTLR3_VECTOR_FACTORY_struct$/;"	s
ANTLR3_VECTOR_INTERNAL_SIZE	/home/steffen/include/antlr3collections.h	227;"	d
ANTLR3_VECTOR_struct	/home/steffen/include/antlr3collections.h	/^typedef struct ANTLR3_VECTOR_struct$/;"	s
ANTLR3_WIN32	/home/steffen/include/antlr3defs.h	121;"	d
ANTLR3_WIN64	/home/steffen/include/antlr3defs.h	111;"	d
ANTLR3_WINDOWS	/home/steffen/include/antlr3defs.h	109;"	d
ANTLR3_WINDOWS	/home/steffen/include/antlr3defs.h	118;"	d
BACKTRACKING	oris_automationLexer.c	142;"	d	file:
BACKTRACKING	oris_automationLexer.c	170;"	d	file:
BACKTRACKING	oris_automationParser.c	149;"	d	file:
BRACKET_LEFT	oris_automationLexer.h	464;"	d
BRACKET_LEFT	oris_automationParser.h	528;"	d
BRACKET_RIGHT	oris_automationLexer.h	465;"	d
BRACKET_RIGHT	oris_automationParser.h	529;"	d
CDFA_SPECIAL_FUNC	/home/steffen/include/antlr3cyclicdfa.h	/^typedef ANTLR3_INT32		(*CDFA_SPECIAL_FUNC)   (void * , pANTLR3_BASE_RECOGNIZER , pANTLR3_INT_STREAM , struct ANTLR3_CYCLIC_DFA_struct * , ANTLR3_INT32);$/;"	t
CLOSED	oris_automationLexer.h	466;"	d
CLOSED	oris_automationParser.h	530;"	d
COLON	oris_automationLexer.h	467;"	d
COLON	oris_automationParser.h	531;"	d
COMMA	oris_automationLexer.h	468;"	d
COMMA	oris_automationParser.h	532;"	d
COMMAND	oris_automationLexer.h	469;"	d
COMMAND	oris_automationParser.h	533;"	d
CONNECTION	oris_automationLexer.h	470;"	d
CONNECTION	oris_automationParser.h	534;"	d
CONSTRUCTEX	oris_automationLexer.c	136;"	d	file:
CONSTRUCTEX	oris_automationLexer.c	180;"	d	file:
CONSTRUCTEX	oris_automationParser.c	140;"	d	file:
CONSTRUCTEX	oris_automationParser.c	99;"	d	file:
CONSUME	oris_automationLexer.c	137;"	d	file:
CONSUME	oris_automationLexer.c	222;"	d	file:
CONSUME	oris_automationLexer.c	241;"	d	file:
CONSUME	oris_automationParser.c	100;"	d	file:
CONSUME	oris_automationParser.c	141;"	d	file:
CREATE_stream_BRACKET_LEFT	oris_automationParser.c	3708;"	d	file:
CREATE_stream_BRACKET_RIGHT	oris_automationParser.c	3712;"	d	file:
CREATE_stream_COMMA	oris_automationParser.c	3706;"	d	file:
CREATE_stream_CURLY_LEFT	oris_automationParser.c	3326;"	d	file:
CREATE_stream_CURLY_RIGHT	oris_automationParser.c	3322;"	d	file:
CREATE_stream_DOT	oris_automationParser.c	3324;"	d	file:
CREATE_stream_IDENTIFIER	oris_automationParser.c	3328;"	d	file:
CREATE_stream_IDENTIFIER	oris_automationParser.c	3710;"	d	file:
CREATE_stream_INTEGER	oris_automationParser.c	3320;"	d	file:
CREATE_stream_expr	oris_automationParser.c	3714;"	d	file:
CTX	oris_automationLexer.c	101;"	d	file:
CTX	oris_automationParser.c	66;"	d	file:
CURLY_LEFT	oris_automationLexer.h	471;"	d
CURLY_LEFT	oris_automationParser.h	535;"	d
CURLY_RIGHT	oris_automationLexer.h	472;"	d
CURLY_RIGHT	oris_automationParser.h	536;"	d
CUSTOM	oris_automationLexer.c	194;"	d	file:
ConversionFlags	/home/steffen/include/antlr3convertutf.h	/^} ConversionFlags;$/;"	t	typeref:enum:__anon5
ConversionResult	/home/steffen/include/antlr3convertutf.h	/^} ConversionResult;$/;"	t	typeref:enum:__anon4
DATAP	oris_automationLexer.c	212;"	d	file:
DATAP	oris_automationLexer.c	217;"	d	file:
DBG	oris_automationLexer.c	196;"	d	file:
DBG	oris_automationParser.c	113;"	d	file:
DBG	oris_automationParser.c	154;"	d	file:
DEFAULT_DEBUGGER_PORT	/home/steffen/include/antlr3debugeventlistener.h	54;"	d
DEFAULT_INITIAL_BUFFER_SIZE	/home/steffen/include/antlr3commontreenodestream.h	46;"	d
DIGIT	oris_automationLexer.h	473;"	d
DIGIT	oris_automationParser.h	537;"	d
DIV	oris_automationLexer.h	474;"	d
DIV	oris_automationParser.h	538;"	d
DOT	oris_automationLexer.h	475;"	d
DOT	oris_automationParser.h	539;"	d
DOWN	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_COMMON_TREE			DOWN;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
DOWN	oris_automationLexer.c	255;"	d	file:
DOWN	oris_automationParser.c	166;"	d	file:
EMIT	oris_automationLexer.c	123;"	d	file:
EMIT	oris_automationLexer.c	162;"	d	file:
EMITNEW	oris_automationLexer.c	124;"	d	file:
EMITNEW	oris_automationLexer.c	163;"	d	file:
EOF	oris_automationLexer.h	448;"	d
EOF	oris_automationLexer.h	453;"	d
EOF	oris_automationLexer.h	507;"	d
EOF	oris_automationLexer.h	508;"	d
EOF	oris_automationParser.h	512;"	d
EOF	oris_automationParser.h	517;"	d
EOF	oris_automationParser.h	571;"	d
EOF	oris_automationParser.h	572;"	d
EOF_NODE	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_COMMON_TREE			EOF_NODE;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
EOF_TOKEN	oris_automationLexer.c	177;"	d	file:
EOR	oris_automationLexer.c	256;"	d	file:
EOR	oris_automationParser.c	167;"	d	file:
EQUAL	oris_automationLexer.h	476;"	d
EQUAL	oris_automationParser.h	540;"	d
ESTABLISHED	oris_automationLexer.h	477;"	d
ESTABLISHED	oris_automationParser.h	541;"	d
EXCEPTION	oris_automationLexer.c	135;"	d	file:
EXCEPTION	oris_automationLexer.c	179;"	d	file:
EXCEPTION	oris_automationParser.c	125;"	d	file:
EXCEPTION	oris_automationParser.c	89;"	d	file:
FAILEDFLAG	oris_automationLexer.c	130;"	d	file:
FAILEDFLAG	oris_automationLexer.c	171;"	d	file:
FAILEDFLAG	oris_automationParser.c	106;"	d	file:
FAILEDFLAG	oris_automationParser.c	147;"	d	file:
FOLLOWPOP	oris_automationParser.c	131;"	d	file:
FOLLOWPOP	oris_automationParser.c	134;"	d	file:
FOLLOWPOP	oris_automationParser.c	94;"	d	file:
FOLLOWPUSH	oris_automationParser.c	130;"	d	file:
FOLLOWPUSH	oris_automationParser.c	133;"	d	file:
FOLLOWPUSH	oris_automationParser.c	93;"	d	file:
FOLLOWSTACK	oris_automationParser.c	128;"	d	file:
FOLLOWSTACK	oris_automationParser.c	92;"	d	file:
FOLLOW_48_in_action349	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_48_in_action349	= { FOLLOW_48_in_action349_bits, 1	};$/;"	v	file:
FOLLOW_48_in_action349_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_48_in_action349_bits[]	= { ANTLR3_UINT64_LIT(0x0002000000000000) };$/;"	v	file:
FOLLOW_49_in_action351	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_49_in_action351	= { FOLLOW_49_in_action351_bits, 1	};$/;"	v	file:
FOLLOW_49_in_action351_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_49_in_action351_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_50_in_action347	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_50_in_action347	= { FOLLOW_50_in_action347_bits, 1	};$/;"	v	file:
FOLLOW_50_in_action347_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_50_in_action347_bits[]	= { ANTLR3_UINT64_LIT(0x0001000000000000) };$/;"	v	file:
FOLLOW_54_in_action325	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_54_in_action325	= { FOLLOW_54_in_action325_bits, 1	};$/;"	v	file:
FOLLOW_54_in_action325_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_54_in_action325_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_55_in_action321	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_55_in_action321	= { FOLLOW_55_in_action321_bits, 1	};$/;"	v	file:
FOLLOW_55_in_action321_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_55_in_action321_bits[]	= { ANTLR3_UINT64_LIT(0x0040100000000000) };$/;"	v	file:
FOLLOW_AND_in_term499	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_AND_in_term499	= { FOLLOW_AND_in_term499_bits, 1	};$/;"	v	file:
FOLLOW_AND_in_term499_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_AND_in_term499_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_BRACKET_LEFT_in_factor537	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_BRACKET_LEFT_in_factor537	= { FOLLOW_BRACKET_LEFT_in_factor537_bits, 1	};$/;"	v	file:
FOLLOW_BRACKET_LEFT_in_factor537_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_BRACKET_LEFT_in_factor537_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_BRACKET_LEFT_in_function638	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_BRACKET_LEFT_in_function638	= { FOLLOW_BRACKET_LEFT_in_function638_bits, 1	};$/;"	v	file:
FOLLOW_BRACKET_LEFT_in_function638_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_BRACKET_LEFT_in_function638_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000040) };$/;"	v	file:
FOLLOW_BRACKET_LEFT_in_function662	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_BRACKET_LEFT_in_function662	= { FOLLOW_BRACKET_LEFT_in_function662_bits, 1	};$/;"	v	file:
FOLLOW_BRACKET_LEFT_in_function662_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_BRACKET_LEFT_in_function662_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_BRACKET_RIGHT_in_factor542	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_BRACKET_RIGHT_in_factor542	= { FOLLOW_BRACKET_RIGHT_in_factor542_bits, 1	};$/;"	v	file:
FOLLOW_BRACKET_RIGHT_in_factor542_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_BRACKET_RIGHT_in_factor542_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_BRACKET_RIGHT_in_function640	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_BRACKET_RIGHT_in_function640	= { FOLLOW_BRACKET_RIGHT_in_function640_bits, 1	};$/;"	v	file:
FOLLOW_BRACKET_RIGHT_in_function640_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_BRACKET_RIGHT_in_function640_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_BRACKET_RIGHT_in_function673	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_BRACKET_RIGHT_in_function673	= { FOLLOW_BRACKET_RIGHT_in_function673_bits, 1	};$/;"	v	file:
FOLLOW_BRACKET_RIGHT_in_function673_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_BRACKET_RIGHT_in_function673_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_COLON_in_event206	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_COLON_in_event206	= { FOLLOW_COLON_in_event206_bits, 1	};$/;"	v	file:
FOLLOW_COLON_in_event206_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_COLON_in_event206_bits[]	= { ANTLR3_UINT64_LIT(0x0000008000400002) };$/;"	v	file:
FOLLOW_COLON_in_request_definition380	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_COLON_in_request_definition380	= { FOLLOW_COLON_in_request_definition380_bits, 1	};$/;"	v	file:
FOLLOW_COLON_in_request_definition380_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_COLON_in_request_definition380_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_COMMAND_in_command286	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_COMMAND_in_command286	= { FOLLOW_COMMAND_in_command286_bits, 1	};$/;"	v	file:
FOLLOW_COMMAND_in_command286_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_COMMAND_in_command286_bits[]	= { ANTLR3_UINT64_LIT(0x0000040000000000) };$/;"	v	file:
FOLLOW_COMMA_in_function667	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_COMMA_in_function667	= { FOLLOW_COMMA_in_function667_bits, 1	};$/;"	v	file:
FOLLOW_COMMA_in_function667_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_COMMA_in_function667_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_CONNECTION_in_connection243	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_CONNECTION_in_connection243	= { FOLLOW_CONNECTION_in_connection243_bits, 1	};$/;"	v	file:
FOLLOW_CONNECTION_in_connection243_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_CONNECTION_in_connection243_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000040080) };$/;"	v	file:
FOLLOW_CURLY_LEFT_in_record570	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_CURLY_LEFT_in_record570	= { FOLLOW_CURLY_LEFT_in_record570_bits, 1	};$/;"	v	file:
FOLLOW_CURLY_LEFT_in_record570_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_CURLY_LEFT_in_record570_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000800000) };$/;"	v	file:
FOLLOW_CURLY_LEFT_in_record599	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_CURLY_LEFT_in_record599	= { FOLLOW_CURLY_LEFT_in_record599_bits, 1	};$/;"	v	file:
FOLLOW_CURLY_LEFT_in_record599_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_CURLY_LEFT_in_record599_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000800000) };$/;"	v	file:
FOLLOW_CURLY_RIGHT_in_record582	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_CURLY_RIGHT_in_record582	= { FOLLOW_CURLY_RIGHT_in_record582_bits, 1	};$/;"	v	file:
FOLLOW_CURLY_RIGHT_in_record582_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_CURLY_RIGHT_in_record582_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_CURLY_RIGHT_in_record611	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_CURLY_RIGHT_in_record611	= { FOLLOW_CURLY_RIGHT_in_record611_bits, 1	};$/;"	v	file:
FOLLOW_CURLY_RIGHT_in_record611_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_CURLY_RIGHT_in_record611_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_DIV_in_term489	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_DIV_in_term489	= { FOLLOW_DIV_in_term489_bits, 1	};$/;"	v	file:
FOLLOW_DIV_in_term489_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_DIV_in_term489_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_DOT_in_record576	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_DOT_in_record576	= { FOLLOW_DOT_in_record576_bits, 1	};$/;"	v	file:
FOLLOW_DOT_in_record576_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_DOT_in_record576_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000800000) };$/;"	v	file:
FOLLOW_DOT_in_record605	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_DOT_in_record605	= { FOLLOW_DOT_in_record605_bits, 1	};$/;"	v	file:
FOLLOW_DOT_in_record605_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_DOT_in_record605_bits[]	= { ANTLR3_UINT64_LIT(0x0000000001000000) };$/;"	v	file:
FOLLOW_EQUAL_in_expr402	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_EQUAL_in_expr402	= { FOLLOW_EQUAL_in_expr402_bits, 1	};$/;"	v	file:
FOLLOW_EQUAL_in_expr402_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_EQUAL_in_expr402_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_GE_in_expr422	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_GE_in_expr422	= { FOLLOW_GE_in_expr422_bits, 1	};$/;"	v	file:
FOLLOW_GE_in_expr422_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_GE_in_expr422_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_GT_in_expr427	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_GT_in_expr427	= { FOLLOW_GT_in_expr427_bits, 1	};$/;"	v	file:
FOLLOW_GT_in_expr427_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_GT_in_expr427_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_HTTP_in_action299	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_HTTP_in_action299	= { FOLLOW_HTTP_in_action299_bits, 1	};$/;"	v	file:
FOLLOW_HTTP_in_action299_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_HTTP_in_action299_bits[]	= { ANTLR3_UINT64_LIT(0x0038800000000000) };$/;"	v	file:
FOLLOW_IDENTIFIER_in_action333	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_IDENTIFIER_in_action333	= { FOLLOW_IDENTIFIER_in_action333_bits, 1	};$/;"	v	file:
FOLLOW_IDENTIFIER_in_action333_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_IDENTIFIER_in_action333_bits[]	= { ANTLR3_UINT64_LIT(0x0000010000000000) };$/;"	v	file:
FOLLOW_IDENTIFIER_in_action344	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_IDENTIFIER_in_action344	= { FOLLOW_IDENTIFIER_in_action344_bits, 1	};$/;"	v	file:
FOLLOW_IDENTIFIER_in_action344_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_IDENTIFIER_in_action344_bits[]	= { ANTLR3_UINT64_LIT(0x0004000000000002) };$/;"	v	file:
FOLLOW_IDENTIFIER_in_function636	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_IDENTIFIER_in_function636	= { FOLLOW_IDENTIFIER_in_function636_bits, 1	};$/;"	v	file:
FOLLOW_IDENTIFIER_in_function636_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_IDENTIFIER_in_function636_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000020) };$/;"	v	file:
FOLLOW_IDENTIFIER_in_function660	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_IDENTIFIER_in_function660	= { FOLLOW_IDENTIFIER_in_function660_bits, 1	};$/;"	v	file:
FOLLOW_IDENTIFIER_in_function660_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_IDENTIFIER_in_function660_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000020) };$/;"	v	file:
FOLLOW_IDENTIFIER_in_record574	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_IDENTIFIER_in_record574	= { FOLLOW_IDENTIFIER_in_record574_bits, 1	};$/;"	v	file:
FOLLOW_IDENTIFIER_in_record574_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_IDENTIFIER_in_record574_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000010000) };$/;"	v	file:
FOLLOW_IDENTIFIER_in_record580	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_IDENTIFIER_in_record580	= { FOLLOW_IDENTIFIER_in_record580_bits, 1	};$/;"	v	file:
FOLLOW_IDENTIFIER_in_record580_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_IDENTIFIER_in_record580_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000002000) };$/;"	v	file:
FOLLOW_IDENTIFIER_in_record603	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_IDENTIFIER_in_record603	= { FOLLOW_IDENTIFIER_in_record603_bits, 1	};$/;"	v	file:
FOLLOW_IDENTIFIER_in_record603_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_IDENTIFIER_in_record603_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000010000) };$/;"	v	file:
FOLLOW_IDENTIFIER_in_request_definition378	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_IDENTIFIER_in_request_definition378	= { FOLLOW_IDENTIFIER_in_request_definition378_bits, 1	};$/;"	v	file:
FOLLOW_IDENTIFIER_in_request_definition378_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_IDENTIFIER_in_request_definition378_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000100) };$/;"	v	file:
FOLLOW_IDENTIFIER_in_table_ref275	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_IDENTIFIER_in_table_ref275	= { FOLLOW_IDENTIFIER_in_table_ref275_bits, 1	};$/;"	v	file:
FOLLOW_IDENTIFIER_in_table_ref275_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_IDENTIFIER_in_table_ref275_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_INTEGER_in_record609	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_INTEGER_in_record609	= { FOLLOW_INTEGER_in_record609_bits, 1	};$/;"	v	file:
FOLLOW_INTEGER_in_record609_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_INTEGER_in_record609_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000002000) };$/;"	v	file:
FOLLOW_LE_in_expr417	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_LE_in_expr417	= { FOLLOW_LE_in_expr417_bits, 1	};$/;"	v	file:
FOLLOW_LE_in_expr417_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_LE_in_expr417_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_LTH_in_expr412	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_LTH_in_expr412	= { FOLLOW_LTH_in_expr412_bits, 1	};$/;"	v	file:
FOLLOW_LTH_in_expr412_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_LTH_in_expr412_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_MINUS_in_signedFactor521	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_MINUS_in_signedFactor521	= { FOLLOW_MINUS_in_signedFactor521_bits, 1	};$/;"	v	file:
FOLLOW_MINUS_in_signedFactor521_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_MINUS_in_signedFactor521_bits[]	= { ANTLR3_UINT64_LIT(0x0000040001801020) };$/;"	v	file:
FOLLOW_MINUS_in_simpleExpr456	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_MINUS_in_simpleExpr456	= { FOLLOW_MINUS_in_simpleExpr456_bits, 1	};$/;"	v	file:
FOLLOW_MINUS_in_simpleExpr456_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_MINUS_in_simpleExpr456_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_MOD_in_term494	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_MOD_in_term494	= { FOLLOW_MOD_in_term494_bits, 1	};$/;"	v	file:
FOLLOW_MOD_in_term494_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_MOD_in_term494_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_MUL_in_term484	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_MUL_in_term484	= { FOLLOW_MUL_in_term484_bits, 1	};$/;"	v	file:
FOLLOW_MUL_in_term484_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_MUL_in_term484_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_NOT_EQUAL_in_expr407	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_NOT_EQUAL_in_expr407	= { FOLLOW_NOT_EQUAL_in_expr407_bits, 1	};$/;"	v	file:
FOLLOW_NOT_EQUAL_in_expr407_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_NOT_EQUAL_in_expr407_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_ON_in_event202	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_ON_in_event202	= { FOLLOW_ON_in_event202_bits, 1	};$/;"	v	file:
FOLLOW_ON_in_event202_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_ON_in_event202_bits[]	= { ANTLR3_UINT64_LIT(0x0000080000000C00) };$/;"	v	file:
FOLLOW_OR_in_simpleExpr461	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_OR_in_simpleExpr461	= { FOLLOW_OR_in_simpleExpr461_bits, 1	};$/;"	v	file:
FOLLOW_OR_in_simpleExpr461_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_OR_in_simpleExpr461_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_PLUS_in_signedFactor518	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_PLUS_in_signedFactor518	= { FOLLOW_PLUS_in_signedFactor518_bits, 1	};$/;"	v	file:
FOLLOW_PLUS_in_signedFactor518_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_PLUS_in_signedFactor518_bits[]	= { ANTLR3_UINT64_LIT(0x0000040001801020) };$/;"	v	file:
FOLLOW_PLUS_in_simpleExpr451	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_PLUS_in_simpleExpr451	= { FOLLOW_PLUS_in_simpleExpr451_bits, 1	};$/;"	v	file:
FOLLOW_PLUS_in_simpleExpr451_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_PLUS_in_simpleExpr451_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_REQUEST_in_action342	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_REQUEST_in_action342	= { FOLLOW_REQUEST_in_action342_bits, 1	};$/;"	v	file:
FOLLOW_REQUEST_in_action342_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_REQUEST_in_action342_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000800000) };$/;"	v	file:
FOLLOW_REQUEST_in_request_definition375	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_REQUEST_in_request_definition375	= { FOLLOW_REQUEST_in_request_definition375_bits, 1	};$/;"	v	file:
FOLLOW_REQUEST_in_request_definition375_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_REQUEST_in_request_definition375_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000800000) };$/;"	v	file:
FOLLOW_SEMICOLON_in_action337	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_SEMICOLON_in_action337	= { FOLLOW_SEMICOLON_in_action337_bits, 1	};$/;"	v	file:
FOLLOW_SEMICOLON_in_action337_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_SEMICOLON_in_action337_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_SEMICOLON_in_request_definition385	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_SEMICOLON_in_request_definition385	= { FOLLOW_SEMICOLON_in_request_definition385_bits, 1	};$/;"	v	file:
FOLLOW_SEMICOLON_in_request_definition385_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_SEMICOLON_in_request_definition385_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_STRING_in_command288	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_STRING_in_command288	= { FOLLOW_STRING_in_command288_bits, 1	};$/;"	v	file:
FOLLOW_STRING_in_command288_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_STRING_in_command288_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_TABLE_in_table_ref273	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_TABLE_in_table_ref273	= { FOLLOW_TABLE_in_table_ref273_bits, 1	};$/;"	v	file:
FOLLOW_TABLE_in_table_ref273_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_TABLE_in_table_ref273_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000800000) };$/;"	v	file:
FOLLOW_TEMPLATE_in_action331	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_TEMPLATE_in_action331	= { FOLLOW_TEMPLATE_in_action331_bits, 1	};$/;"	v	file:
FOLLOW_TEMPLATE_in_action331_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_TEMPLATE_in_action331_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000800000) };$/;"	v	file:
FOLLOW_action_in_event209	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_action_in_event209	= { FOLLOW_action_in_event209_bits, 1	};$/;"	v	file:
FOLLOW_action_in_event209_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_action_in_event209_bits[]	= { ANTLR3_UINT64_LIT(0x0000008000400002) };$/;"	v	file:
FOLLOW_command_in_object232	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_command_in_object232	= { FOLLOW_command_in_object232_bits, 1	};$/;"	v	file:
FOLLOW_command_in_object232_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_command_in_object232_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_connection_in_object222	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_connection_in_object222	= { FOLLOW_connection_in_object222_bits, 1	};$/;"	v	file:
FOLLOW_connection_in_object222_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_connection_in_object222_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_connection_state_in_connection245	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_connection_state_in_connection245	= { FOLLOW_connection_state_in_connection245_bits, 1	};$/;"	v	file:
FOLLOW_connection_state_in_connection245_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_connection_state_in_connection245_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_constant_in_factor559	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_constant_in_factor559	= { FOLLOW_constant_in_factor559_bits, 1	};$/;"	v	file:
FOLLOW_constant_in_factor559_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_constant_in_factor559_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_event_in_statement189	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_event_in_statement189	= { FOLLOW_event_in_statement189_bits, 1	};$/;"	v	file:
FOLLOW_event_in_statement189_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_event_in_statement189_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_expr_in_action319	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_expr_in_action319	= { FOLLOW_expr_in_action319_bits, 1	};$/;"	v	file:
FOLLOW_expr_in_action319_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_expr_in_action319_bits[]	= { ANTLR3_UINT64_LIT(0x0080000000000000) };$/;"	v	file:
FOLLOW_expr_in_action327	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_expr_in_action327	= { FOLLOW_expr_in_action327_bits, 1	};$/;"	v	file:
FOLLOW_expr_in_action327_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_expr_in_action327_bits[]	= { ANTLR3_UINT64_LIT(0x0000010000000000) };$/;"	v	file:
FOLLOW_expr_in_factor540	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_expr_in_factor540	= { FOLLOW_expr_in_factor540_bits, 1	};$/;"	v	file:
FOLLOW_expr_in_factor540_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_expr_in_factor540_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000040) };$/;"	v	file:
FOLLOW_expr_in_function664	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_expr_in_function664	= { FOLLOW_expr_in_function664_bits, 1	};$/;"	v	file:
FOLLOW_expr_in_function664_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_expr_in_function664_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000240) };$/;"	v	file:
FOLLOW_expr_in_function669	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_expr_in_function669	= { FOLLOW_expr_in_function669_bits, 1	};$/;"	v	file:
FOLLOW_expr_in_function669_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_expr_in_function669_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000240) };$/;"	v	file:
FOLLOW_expr_in_request_definition383	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_expr_in_request_definition383	= { FOLLOW_expr_in_request_definition383_bits, 1	};$/;"	v	file:
FOLLOW_expr_in_request_definition383_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_expr_in_request_definition383_bits[]	= { ANTLR3_UINT64_LIT(0x0000010000000000) };$/;"	v	file:
FOLLOW_factor_in_signedFactor526	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_factor_in_signedFactor526	= { FOLLOW_factor_in_signedFactor526_bits, 1	};$/;"	v	file:
FOLLOW_factor_in_signedFactor526_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_factor_in_signedFactor526_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_function_in_factor554	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_function_in_factor554	= { FOLLOW_function_in_factor554_bits, 1	};$/;"	v	file:
FOLLOW_function_in_factor554_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_function_in_factor554_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_object_in_event204	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_object_in_event204	= { FOLLOW_object_in_event204_bits, 1	};$/;"	v	file:
FOLLOW_object_in_event204_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_object_in_event204_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000100) };$/;"	v	file:
FOLLOW_record_in_factor549	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_record_in_factor549	= { FOLLOW_record_in_factor549_bits, 1	};$/;"	v	file:
FOLLOW_record_in_factor549_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_record_in_factor549_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_set_in_action301	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_set_in_action301	= { FOLLOW_set_in_action301_bits, 1	};$/;"	v	file:
FOLLOW_set_in_action301_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_set_in_action301_bits[]	= { ANTLR3_UINT64_LIT(0x0000042011801020) };$/;"	v	file:
FOLLOW_signedFactor_in_term479	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_signedFactor_in_term479	= { FOLLOW_signedFactor_in_term479_bits, 1	};$/;"	v	file:
FOLLOW_signedFactor_in_term479_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_signedFactor_in_term479_bits[]	= { ANTLR3_UINT64_LIT(0x00000000C0008012) };$/;"	v	file:
FOLLOW_signedFactor_in_term503	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_signedFactor_in_term503	= { FOLLOW_signedFactor_in_term503_bits, 1	};$/;"	v	file:
FOLLOW_signedFactor_in_term503_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_signedFactor_in_term503_bits[]	= { ANTLR3_UINT64_LIT(0x00000000C0008012) };$/;"	v	file:
FOLLOW_simpleExpr_in_expr397	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_simpleExpr_in_expr397	= { FOLLOW_simpleExpr_in_expr397_bits, 1	};$/;"	v	file:
FOLLOW_simpleExpr_in_expr397_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_simpleExpr_in_expr397_bits[]	= { ANTLR3_UINT64_LIT(0x000000020A320002) };$/;"	v	file:
FOLLOW_simpleExpr_in_expr432	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_simpleExpr_in_expr432	= { FOLLOW_simpleExpr_in_expr432_bits, 1	};$/;"	v	file:
FOLLOW_simpleExpr_in_expr432_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_simpleExpr_in_expr432_bits[]	= { ANTLR3_UINT64_LIT(0x000000020A320002) };$/;"	v	file:
FOLLOW_statement_in_configuration176	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_statement_in_configuration176	= { FOLLOW_statement_in_configuration176_bits, 1	};$/;"	v	file:
FOLLOW_statement_in_configuration176_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_statement_in_configuration176_bits[]	= { ANTLR3_UINT64_LIT(0x0000000400000002) };$/;"	v	file:
FOLLOW_table_ref_in_object227	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_table_ref_in_object227	= { FOLLOW_table_ref_in_object227_bits, 1	};$/;"	v	file:
FOLLOW_table_ref_in_object227_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_table_ref_in_object227_bits[]	= { ANTLR3_UINT64_LIT(0x0000000000000002) };$/;"	v	file:
FOLLOW_term_in_simpleExpr446	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_term_in_simpleExpr446	= { FOLLOW_term_in_simpleExpr446_bits, 1	};$/;"	v	file:
FOLLOW_term_in_simpleExpr446_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_term_in_simpleExpr446_bits[]	= { ANTLR3_UINT64_LIT(0x0000002810000002) };$/;"	v	file:
FOLLOW_term_in_simpleExpr465	oris_automationParser.c	/^static  ANTLR3_BITSET_LIST FOLLOW_term_in_simpleExpr465	= { FOLLOW_term_in_simpleExpr465_bits, 1	};$/;"	v	file:
FOLLOW_term_in_simpleExpr465_bits	oris_automationParser.c	/^static	ANTLR3_BITWORD FOLLOW_term_in_simpleExpr465_bits[]	= { ANTLR3_UINT64_LIT(0x0000002810000002) };$/;"	v	file:
FUNCTION	oris_automationLexer.h	478;"	d
FUNCTION	oris_automationParser.h	542;"	d
GE	oris_automationLexer.h	479;"	d
GE	oris_automationParser.h	543;"	d
GETCHARINDEX	oris_automationLexer.c	120;"	d	file:
GETCHARINDEX	oris_automationLexer.c	158;"	d	file:
GETCHARPOSITIONINLINE	oris_automationLexer.c	122;"	d	file:
GETCHARPOSITIONINLINE	oris_automationLexer.c	161;"	d	file:
GETLINE	oris_automationLexer.c	121;"	d	file:
GETLINE	oris_automationLexer.c	159;"	d	file:
GETTEXT	oris_automationLexer.c	146;"	d	file:
GETTEXT	oris_automationLexer.c	160;"	d	file:
GT	oris_automationLexer.h	480;"	d
GT	oris_automationParser.h	544;"	d
HASEXCEPTION	oris_automationLexer.c	134;"	d	file:
HASEXCEPTION	oris_automationLexer.c	178;"	d	file:
HASEXCEPTION	oris_automationParser.c	124;"	d	file:
HASEXCEPTION	oris_automationParser.c	88;"	d	file:
HASFAILED	oris_automationLexer.c	129;"	d	file:
HASFAILED	oris_automationLexer.c	169;"	d	file:
HASFAILED	oris_automationParser.c	105;"	d	file:
HASFAILED	oris_automationParser.c	148;"	d	file:
HAVEPARSEDRULE	oris_automationLexer.c	145;"	d	file:
HAVEPARSEDRULE	oris_automationLexer.c	186;"	d	file:
HAVEPARSEDRULE	oris_automationParser.c	118;"	d	file:
HAVEPARSEDRULE	oris_automationParser.c	84;"	d	file:
HAVE_ACCEPT	/home/steffen/include/antlr3config.h	11;"	d
HAVE_ARPA_NAMESER_H	/home/steffen/include/antlr3config.h	14;"	d
HAVE_CTYPE_H	/home/steffen/include/antlr3config.h	17;"	d
HAVE_DLFCN_H	/home/steffen/include/antlr3config.h	20;"	d
HAVE_INTPTR_T	/home/steffen/include/antlr3config.h	23;"	d
HAVE_INTTYPES_H	/home/steffen/include/antlr3config.h	26;"	d
HAVE_MALLOC_H	/home/steffen/include/antlr3config.h	29;"	d
HAVE_MEMMOVE	/home/steffen/include/antlr3config.h	32;"	d
HAVE_MEMORY_H	/home/steffen/include/antlr3config.h	35;"	d
HAVE_MEMSET	/home/steffen/include/antlr3config.h	38;"	d
HAVE_NETDB_H	/home/steffen/include/antlr3config.h	41;"	d
HAVE_NETINET_IN_H	/home/steffen/include/antlr3config.h	44;"	d
HAVE_NETINET_TCP_H	/home/steffen/include/antlr3config.h	47;"	d
HAVE_RESOLV_H	/home/steffen/include/antlr3config.h	50;"	d
HAVE_STDARG_H	/home/steffen/include/antlr3config.h	56;"	d
HAVE_STDINT_H	/home/steffen/include/antlr3config.h	59;"	d
HAVE_STDLIB_H	/home/steffen/include/antlr3config.h	62;"	d
HAVE_STRDUP	/home/steffen/include/antlr3config.h	65;"	d
HAVE_STRINGS_H	/home/steffen/include/antlr3config.h	68;"	d
HAVE_STRING_H	/home/steffen/include/antlr3config.h	71;"	d
HAVE_SYS_SOCKET_H	/home/steffen/include/antlr3config.h	77;"	d
HAVE_SYS_STAT_H	/home/steffen/include/antlr3config.h	80;"	d
HAVE_SYS_TYPES_H	/home/steffen/include/antlr3config.h	83;"	d
HAVE_UINTPTR_T	/home/steffen/include/antlr3config.h	86;"	d
HAVE_UNISTD_H	/home/steffen/include/antlr3config.h	89;"	d
HIDDEN	/home/steffen/include/antlr3commontoken.h	82;"	d
HTTP	oris_automationLexer.h	481;"	d
HTTP	oris_automationParser.h	545;"	d
IDENTIFIER	oris_automationLexer.h	482;"	d
IDENTIFIER	oris_automationParser.h	546;"	d
INDEX	oris_automationLexer.c	147;"	d	file:
INDEX	oris_automationLexer.c	175;"	d	file:
INDEX	oris_automationParser.c	109;"	d	file:
INDEX	oris_automationParser.c	123;"	d	file:
INITIAL_CALL_STACK_SIZE	/home/steffen/include/antlr3commontreenodestream.h	47;"	d
INPUT	oris_automationLexer.c	131;"	d	file:
INPUT	oris_automationLexer.c	172;"	d	file:
INPUT	oris_automationParser.c	120;"	d	file:
INPUT	oris_automationParser.c	86;"	d	file:
INTEGER	oris_automationLexer.h	483;"	d
INTEGER	oris_automationParser.h	547;"	d
INVALID	oris_automationLexer.c	257;"	d	file:
INVALID	oris_automationParser.c	168;"	d	file:
INVALID_NODE	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_COMMON_TREE			INVALID_NODE;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
INVALID_SOCKET	/home/steffen/include/antlr3defs.h	385;"	d
ISTREAM	oris_automationLexer.c	174;"	d	file:
ISTREAM	oris_automationParser.c	122;"	d	file:
LA	oris_automationLexer.c	133;"	d	file:
LA	oris_automationLexer.c	221;"	d	file:
LA	oris_automationLexer.c	242;"	d	file:
LA	oris_automationParser.c	138;"	d	file:
LA	oris_automationParser.c	97;"	d	file:
LE	oris_automationLexer.h	484;"	d
LE	oris_automationParser.h	548;"	d
LETTER	oris_automationLexer.h	485;"	d
LETTER	oris_automationParser.h	549;"	d
LEXER	oris_automationLexer.c	117;"	d	file:
LEXER	oris_automationLexer.c	154;"	d	file:
LEXSTATE	oris_automationLexer.c	156;"	d	file:
LRECOVER	oris_automationLexer.c	138;"	d	file:
LRECOVER	oris_automationLexer.c	181;"	d	file:
LT	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*LT)				(pANTLR3_DEBUG_EVENT_LISTENER delboy, int i, pANTLR3_COMMON_TOKEN t);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
LT	oris_automationParser.c	139;"	d	file:
LT	oris_automationParser.c	98;"	d	file:
LTH	oris_automationLexer.h	486;"	d
LTH	oris_automationParser.h	550;"	d
LTOKEN	oris_automationLexer.c	128;"	d	file:
LTOKEN	oris_automationLexer.c	168;"	d	file:
LTT	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*LTT)					(pANTLR3_DEBUG_EVENT_LISTENER delboy, int i, pANTLR3_BASE_TREE t);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
LT_OBJDIR	/home/steffen/include/antlr3config.h	93;"	d
MARK	oris_automationLexer.c	139;"	d	file:
MARK	oris_automationLexer.c	182;"	d	file:
MARK	oris_automationParser.c	101;"	d	file:
MARK	oris_automationParser.c	142;"	d	file:
MATCHANY	oris_automationLexer.c	143;"	d	file:
MATCHANY	oris_automationLexer.c	167;"	d	file:
MATCHANYT	oris_automationParser.c	127;"	d	file:
MATCHANYT	oris_automationParser.c	91;"	d	file:
MATCHC	oris_automationLexer.c	125;"	d	file:
MATCHC	oris_automationLexer.c	164;"	d	file:
MATCHRANGE	oris_automationLexer.c	127;"	d	file:
MATCHRANGE	oris_automationLexer.c	166;"	d	file:
MATCHS	oris_automationLexer.c	126;"	d	file:
MATCHS	oris_automationLexer.c	165;"	d	file:
MATCHT	oris_automationParser.c	126;"	d	file:
MATCHT	oris_automationParser.c	90;"	d	file:
MEMOIZE	oris_automationLexer.c	144;"	d	file:
MEMOIZE	oris_automationLexer.c	185;"	d	file:
MEMOIZE	oris_automationParser.c	119;"	d	file:
MEMOIZE	oris_automationParser.c	85;"	d	file:
MEMO_RULE_FAILED	/home/steffen/include/antlr3errors.h	44;"	d
MEMO_RULE_UNKNOWN	/home/steffen/include/antlr3errors.h	45;"	d
MINUS	oris_automationLexer.h	487;"	d
MINUS	oris_automationParser.h	551;"	d
ML_COMMENT	oris_automationLexer.h	488;"	d
ML_COMMENT	oris_automationParser.h	552;"	d
MOD	oris_automationLexer.h	489;"	d
MOD	oris_automationParser.h	553;"	d
MUL	oris_automationLexer.h	490;"	d
MUL	oris_automationParser.h	554;"	d
NEWLINE	oris_automationLexer.h	491;"	d
NEWLINE	oris_automationParser.h	555;"	d
NEXTCHAR	oris_automationLexer.c	211;"	d	file:
NEXTCHAR	oris_automationLexer.c	216;"	d	file:
NOT_EQUAL	oris_automationLexer.h	492;"	d
NOT_EQUAL	oris_automationParser.h	556;"	d
ON	oris_automationLexer.h	493;"	d
ON	oris_automationParser.h	557;"	d
OR	oris_automationLexer.h	494;"	d
OR	oris_automationParser.h	558;"	d
PACKAGE	/home/steffen/include/antlr3config.h	96;"	d
PACKAGE_BUGREPORT	/home/steffen/include/antlr3config.h	99;"	d
PACKAGE_NAME	/home/steffen/include/antlr3config.h	102;"	d
PACKAGE_STRING	/home/steffen/include/antlr3config.h	105;"	d
PACKAGE_TARNAME	/home/steffen/include/antlr3config.h	108;"	d
PACKAGE_URL	/home/steffen/include/antlr3config.h	111;"	d
PACKAGE_VERSION	/home/steffen/include/antlr3config.h	114;"	d
PARAMS	oris_automationLexer.h	495;"	d
PARAMS	oris_automationParser.h	559;"	d
PARSER	oris_automationParser.c	115;"	d	file:
PARSER	oris_automationParser.c	82;"	d	file:
PERRORRECOVERY	oris_automationParser.c	104;"	d	file:
PERRORRECOVERY	oris_automationParser.c	146;"	d	file:
PLUS	oris_automationLexer.h	496;"	d
PLUS	oris_automationParser.h	560;"	d
POPSTREAM	oris_automationLexer.c	150;"	d	file:
POPSTREAM	oris_automationLexer.c	188;"	d	file:
PRECOVER	oris_automationParser.c	136;"	d	file:
PRECOVER	oris_automationParser.c	95;"	d	file:
PREPORTERROR	oris_automationParser.c	137;"	d	file:
PREPORTERROR	oris_automationParser.c	96;"	d	file:
PROTOCOL_VERSION	/home/steffen/include/antlr3debugeventlistener.h	/^	int					PROTOCOL_VERSION;$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
PSRSTATE	oris_automationParser.c	117;"	d	file:
PUSHSTREAM	oris_automationLexer.c	149;"	d	file:
PUSHSTREAM	oris_automationLexer.c	187;"	d	file:
RECOGNIZER	oris_automationLexer.c	118;"	d	file:
RECOGNIZER	oris_automationLexer.c	155;"	d	file:
RECOGNIZER	oris_automationParser.c	116;"	d	file:
RECOGNIZER	oris_automationParser.c	83;"	d	file:
RECORD	oris_automationLexer.h	497;"	d
RECORD	oris_automationParser.h	561;"	d
RECOVERFROMMISMATCHEDELEMENT	oris_automationParser.c	108;"	d	file:
RECOVERFROMMISMATCHEDELEMENT	oris_automationParser.c	151;"	d	file:
RECOVERFROMMISMATCHEDSET	oris_automationParser.c	107;"	d	file:
RECOVERFROMMISMATCHEDSET	oris_automationParser.c	150;"	d	file:
REQUEST	oris_automationLexer.h	498;"	d
REQUEST	oris_automationParser.h	562;"	d
RETURN_TYPE_action6	oris_automationParser.c	912;"	d	file:
RETURN_TYPE_action6	oris_automationParser.c	913;"	d	file:
RETURN_TYPE_command9	oris_automationParser.c	1065;"	d	file:
RETURN_TYPE_command9	oris_automationParser.c	1066;"	d	file:
RETURN_TYPE_connection7	oris_automationParser.c	1057;"	d	file:
RETURN_TYPE_connection7	oris_automationParser.c	1058;"	d	file:
RETURN_TYPE_connection_state11	oris_automationParser.c	1224;"	d	file:
RETURN_TYPE_connection_state11	oris_automationParser.c	1225;"	d	file:
RETURN_TYPE_constant63	oris_automationParser.c	3067;"	d	file:
RETURN_TYPE_constant63	oris_automationParser.c	3068;"	d	file:
RETURN_TYPE_event2	oris_automationParser.c	832;"	d	file:
RETURN_TYPE_event2	oris_automationParser.c	833;"	d	file:
RETURN_TYPE_expr19	oris_automationParser.c	1581;"	d	file:
RETURN_TYPE_expr19	oris_automationParser.c	1582;"	d	file:
RETURN_TYPE_expr22	oris_automationParser.c	1585;"	d	file:
RETURN_TYPE_expr22	oris_automationParser.c	1586;"	d	file:
RETURN_TYPE_expr34	oris_automationParser.c	2006;"	d	file:
RETURN_TYPE_expr34	oris_automationParser.c	2007;"	d	file:
RETURN_TYPE_expr59	oris_automationParser.c	3055;"	d	file:
RETURN_TYPE_expr59	oris_automationParser.c	3056;"	d	file:
RETURN_TYPE_expr73	oris_automationParser.c	3663;"	d	file:
RETURN_TYPE_expr73	oris_automationParser.c	3664;"	d	file:
RETURN_TYPE_expr75	oris_automationParser.c	3667;"	d	file:
RETURN_TYPE_expr75	oris_automationParser.c	3668;"	d	file:
RETURN_TYPE_factor57	oris_automationParser.c	2916;"	d	file:
RETURN_TYPE_factor57	oris_automationParser.c	2917;"	d	file:
RETURN_TYPE_function62	oris_automationParser.c	3063;"	d	file:
RETURN_TYPE_function62	oris_automationParser.c	3064;"	d	file:
RETURN_TYPE_object4	oris_automationParser.c	908;"	d	file:
RETURN_TYPE_object4	oris_automationParser.c	909;"	d	file:
RETURN_TYPE_record61	oris_automationParser.c	3059;"	d	file:
RETURN_TYPE_record61	oris_automationParser.c	3060;"	d	file:
RETURN_TYPE_signedFactor49	oris_automationParser.c	2665;"	d	file:
RETURN_TYPE_signedFactor49	oris_automationParser.c	2666;"	d	file:
RETURN_TYPE_signedFactor54	oris_automationParser.c	2669;"	d	file:
RETURN_TYPE_signedFactor54	oris_automationParser.c	2670;"	d	file:
RETURN_TYPE_simpleExpr36	oris_automationParser.c	2134;"	d	file:
RETURN_TYPE_simpleExpr36	oris_automationParser.c	2135;"	d	file:
RETURN_TYPE_simpleExpr43	oris_automationParser.c	2138;"	d	file:
RETURN_TYPE_simpleExpr43	oris_automationParser.c	2139;"	d	file:
RETURN_TYPE_statement1	oris_automationParser.c	727;"	d	file:
RETURN_TYPE_statement1	oris_automationParser.c	728;"	d	file:
RETURN_TYPE_table_ref8	oris_automationParser.c	1061;"	d	file:
RETURN_TYPE_table_ref8	oris_automationParser.c	1062;"	d	file:
RETURN_TYPE_term44	oris_automationParser.c	2438;"	d	file:
RETURN_TYPE_term44	oris_automationParser.c	2439;"	d	file:
RETURN_TYPE_term48	oris_automationParser.c	2442;"	d	file:
RETURN_TYPE_term48	oris_automationParser.c	2443;"	d	file:
REWIND	oris_automationLexer.c	140;"	d	file:
REWIND	oris_automationLexer.c	183;"	d	file:
REWIND	oris_automationParser.c	102;"	d	file:
REWIND	oris_automationParser.c	143;"	d	file:
REWINDLAST	oris_automationLexer.c	141;"	d	file:
REWINDLAST	oris_automationLexer.c	184;"	d	file:
REWINDLAST	oris_automationParser.c	103;"	d	file:
REWINDLAST	oris_automationParser.c	144;"	d	file:
RULEMEMO	oris_automationLexer.c	119;"	d	file:
RULEMEMO	oris_automationLexer.c	195;"	d	file:
RULEMEMO	oris_automationParser.c	112;"	d	file:
RULEMEMO	oris_automationParser.c	153;"	d	file:
SCOPE_INSTANCE	oris_automationLexer.c	112;"	d	file:
SCOPE_INSTANCE	oris_automationParser.c	77;"	d	file:
SCOPE_SIZE	oris_automationLexer.c	111;"	d	file:
SCOPE_SIZE	oris_automationParser.c	76;"	d	file:
SCOPE_STACK	oris_automationLexer.c	106;"	d	file:
SCOPE_STACK	oris_automationLexer.c	109;"	d	file:
SCOPE_STACK	oris_automationParser.c	71;"	d	file:
SCOPE_STACK	oris_automationParser.c	74;"	d	file:
SCOPE_TOP	oris_automationLexer.c	107;"	d	file:
SCOPE_TOP	oris_automationLexer.c	110;"	d	file:
SCOPE_TOP	oris_automationParser.c	72;"	d	file:
SCOPE_TOP	oris_automationParser.c	75;"	d	file:
SCOPE_TYPE	oris_automationLexer.c	105;"	d	file:
SCOPE_TYPE	oris_automationLexer.c	108;"	d	file:
SCOPE_TYPE	oris_automationParser.c	70;"	d	file:
SCOPE_TYPE	oris_automationParser.c	73;"	d	file:
SEEK	oris_automationLexer.c	148;"	d	file:
SEEK	oris_automationLexer.c	176;"	d	file:
SEEK	oris_automationParser.c	111;"	d	file:
SEEK	oris_automationParser.c	145;"	d	file:
SEMICOLON	oris_automationLexer.h	499;"	d
SEMICOLON	oris_automationParser.h	563;"	d
SETTEXT	oris_automationLexer.c	151;"	d	file:
SETTEXT	oris_automationLexer.c	189;"	d	file:
SETTEXT8	oris_automationLexer.c	152;"	d	file:
SKIP	oris_automationLexer.c	190;"	d	file:
SL_COMMENT	oris_automationLexer.h	500;"	d
SL_COMMENT	oris_automationParser.h	564;"	d
SOCKET	/home/steffen/include/antlr3defs.h	/^typedef	int	SOCKET;$/;"	t
STDC_HEADERS	/home/steffen/include/antlr3config.h	117;"	d
STRING	oris_automationLexer.h	501;"	d
STRING	oris_automationParser.h	565;"	d
STRSTREAM	oris_automationLexer.c	132;"	d	file:
STRSTREAM	oris_automationLexer.c	173;"	d	file:
STRSTREAM	oris_automationParser.c	121;"	d	file:
STRSTREAM	oris_automationParser.c	87;"	d	file:
SetNewLineChar	/home/steffen/include/antlr3input.h	/^    void		(*SetNewLineChar)	    (struct ANTLR3_INPUT_STREAM_struct * input, ANTLR3_UINT32 newlineChar);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
TABLE	oris_automationLexer.h	502;"	d
TABLE	oris_automationParser.h	566;"	d
TEMPLATE	oris_automationLexer.h	503;"	d
TEMPLATE	oris_automationParser.h	567;"	d
TOKENSOURCE	oris_automationLexer.h	512;"	d
TOKENSOURCE	oris_automationParser.h	576;"	d
TOKSOURCE	oris_automationLexer.c	157;"	d	file:
TOKTEXT	oris_automationLexer.c	246;"	d	file:
TOKTEXT	oris_automationParser.c	157;"	d	file:
T__47	oris_automationLexer.h	454;"	d
T__47	oris_automationParser.h	518;"	d
T__48	oris_automationLexer.h	455;"	d
T__48	oris_automationParser.h	519;"	d
T__49	oris_automationLexer.h	456;"	d
T__49	oris_automationParser.h	520;"	d
T__50	oris_automationLexer.h	457;"	d
T__50	oris_automationParser.h	521;"	d
T__51	oris_automationLexer.h	458;"	d
T__51	oris_automationParser.h	522;"	d
T__52	oris_automationLexer.h	459;"	d
T__52	oris_automationParser.h	523;"	d
T__53	oris_automationLexer.h	460;"	d
T__53	oris_automationParser.h	524;"	d
T__54	oris_automationLexer.h	461;"	d
T__54	oris_automationParser.h	525;"	d
T__55	oris_automationLexer.h	462;"	d
T__55	oris_automationParser.h	526;"	d
Tokens	oris_automationLexer.h	451;"	d
Tokens	oris_automationParser.h	515;"	d
UNDERSCORE	oris_automationLexer.h	504;"	d
UNDERSCORE	oris_automationParser.h	568;"	d
UNI_MAX_BMP	/home/steffen/include/antlr3convertutf.h	112;"	d
UNI_MAX_LEGAL_UTF32	/home/steffen/include/antlr3convertutf.h	115;"	d
UNI_MAX_UTF16	/home/steffen/include/antlr3convertutf.h	113;"	d
UNI_MAX_UTF32	/home/steffen/include/antlr3convertutf.h	114;"	d
UNI_REPLACEMENT_CHAR	/home/steffen/include/antlr3convertutf.h	111;"	d
UNI_SUR_HIGH_END	/home/steffen/include/antlr3convertutf.h	118;"	d
UNI_SUR_HIGH_START	/home/steffen/include/antlr3convertutf.h	117;"	d
UNI_SUR_LOW_END	/home/steffen/include/antlr3convertutf.h	120;"	d
UNI_SUR_LOW_START	/home/steffen/include/antlr3convertutf.h	119;"	d
UP	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_COMMON_TREE			UP;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
UP	oris_automationLexer.c	254;"	d	file:
UP	oris_automationParser.c	165;"	d	file:
USER1	oris_automationLexer.c	191;"	d	file:
USER2	oris_automationLexer.c	192;"	d	file:
USER3	oris_automationLexer.c	193;"	d	file:
UTF16	/home/steffen/include/antlr3convertutf.h	/^typedef ANTLR3_UINT16	UTF16;	\/* at least 16 bits *\/$/;"	t
UTF32	/home/steffen/include/antlr3convertutf.h	/^typedef ANTLR3_UINT32	UTF32;	\/* at least 32 bits *\/$/;"	t
UTF8	/home/steffen/include/antlr3convertutf.h	/^typedef ANTLR3_UINT8	UTF8;	\/* typically 8 bits *\/$/;"	t
VERSION	/home/steffen/include/antlr3config.h	120;"	d
WIN32_LEAN_AND_MEAN	/home/steffen/include/antlr3defs.h	129;"	d
WS	oris_automationLexer.h	505;"	d
WS	oris_automationParser.h	569;"	d
_ANTLR3DEFS_H	/home/steffen/include/antlr3defs.h	5;"	d
_ANTLR3ERRORS_H	/home/steffen/include/antlr3errors.h	2;"	d
_ANTLR3MEMORY_H	/home/steffen/include/antlr3memory.h	2;"	d
_ANTLR3_BASERECOGNIZER_H	/home/steffen/include/antlr3baserecognizer.h	8;"	d
_ANTLR3_BASE_TREE_ADAPTOR_H	/home/steffen/include/antlr3basetreeadaptor.h	6;"	d
_ANTLR3_BASE_TREE_H	/home/steffen/include/antlr3basetree.h	6;"	d
_ANTLR3_BITSET_H	/home/steffen/include/antlr3bitset.h	9;"	d
_ANTLR3_COMMON_TOKEN_H	/home/steffen/include/antlr3commontoken.h	12;"	d
_ANTLR3_COMMON_TREE_ADAPTOR_H	/home/steffen/include/antlr3commontreeadaptor.h	6;"	d
_ANTLR3_COMMON_TREE_H	/home/steffen/include/antlr3commontree.h	6;"	d
_ANTLR3_COMMON_TREE_NODE_STREAM__H	/home/steffen/include/antlr3commontreenodestream.h	6;"	d
_ANTLR3_CONVERTUTF_H	/home/steffen/include/antlr3convertutf.h	102;"	d
_ANTLR3_ENCODINGS_H	/home/steffen/include/antlr3encodings.h	2;"	d
_ANTLR3_EXCEPTION_H	/home/steffen/include/antlr3exception.h	6;"	d
_ANTLR3_FILESTREAM_H	/home/steffen/include/antlr3filestream.h	2;"	d
_ANTLR3_H	/home/steffen/include/antlr3.h	2;"	d
_ANTLR3_INPUT_H	/home/steffen/include/antlr3input.h	9;"	d
_ANTLR3_INTERFACES_H	/home/steffen/include/antlr3interfaces.h	8;"	d
_ANTLR3_INTSTREAM_H	/home/steffen/include/antlr3intstream.h	32;"	d
_ANTLR3_LEXER	/home/steffen/include/antlr3lexer.h	31;"	d
_ANTLR3_PARSER_H	/home/steffen/include/antlr3parser.h	7;"	d
_ANTLR3_RECOGNIZER_SHARED_STATE_H	/home/steffen/include/antlr3recognizersharedstate.h	15;"	d
_ANTLR3_STRING_H	/home/steffen/include/antlr3string.h	8;"	d
_ANTLR3_TOKENSTREAM_H	/home/steffen/include/antlr3tokenstream.h	7;"	d
_CRT_SECURE_NO_DEPRECATE	/home/steffen/include/antlr3defs.h	135;"	d
_LA	/home/steffen/include/antlr3intstream.h	/^    ANTLR3_UINT32	    (*_LA)	    (struct ANTLR3_INT_STREAM_struct * intStream, ANTLR3_INT32 i);$/;"	m	struct:ANTLR3_INT_STREAM_struct
_LT	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE			(*_LT)							(struct ANTLR3_TREE_NODE_STREAM_struct * tns, ANTLR3_INT32 k);$/;"	m	struct:ANTLR3_TREE_NODE_STREAM_struct
_LT	/home/steffen/include/antlr3input.h	/^    void *		(*_LT)		(struct	ANTLR3_INPUT_STREAM_struct * input, ANTLR3_INT32 lt);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
_LT	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_COMMON_TOKEN    (*_LT)		(struct ANTLR3_TOKEN_STREAM_struct * tokenStream, ANTLR3_INT32 k);$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
_next	/home/steffen/include/antlr3rewritestreams.h	/^    void *					(*_next)				(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream);$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
_oris_automationLexer_H	oris_automationLexer.h	218;"	d
_oris_automationParser_H	oris_automationParser.h	122;"	d
_stat	/home/steffen/include/antlr3defs.h	349;"	d
absoluteNodeIndex	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_MARKER				absoluteNodeIndex;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
absoluteNodeIndex	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_MARKER			  absoluteNodeIndex;$/;"	m	struct:ANTLR3_TREE_WALK_STATE_struct
accept	/home/steffen/include/antlr3cyclicdfa.h	/^    const ANTLR3_INT32		    * const accept;$/;"	m	struct:ANTLR3_CYCLIC_DFA_struct
ack	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*ack)					(pANTLR3_DEBUG_EVENT_LISTENER delboy);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
action	oris_automationParser.c	/^action(poris_automationParser ctx)$/;"	f	file:
action	oris_automationParser.h	/^     (*action)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
adaptor	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE_ADAPTOR	adaptor;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
adaptor	/home/steffen/include/antlr3debugeventlistener.h	/^	pANTLR3_BASE_TREE_ADAPTOR	adaptor;$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
adaptor	/home/steffen/include/antlr3rewritestreams.h	/^    pANTLR3_BASE_TREE_ADAPTOR	  adaptor;$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
adaptor	oris_automationParser.h	/^pANTLR3_BASE_TREE_ADAPTOR	adaptor;$/;"	m	struct:oris_automationParser_Ctx_struct
add	/home/steffen/include/antlr3bitset.h	/^    void							(*add)			(struct ANTLR3_BITSET_struct  * bitset, ANTLR3_INT32 bit);$/;"	m	struct:ANTLR3_BITSET_struct
add	/home/steffen/include/antlr3collections.h	/^    ANTLR3_BOOLEAN		(*add)	(struct ANTLR3_INT_TRIE_struct * trie, ANTLR3_INTKEY key, ANTLR3_UINT32 type, ANTLR3_INTKEY intVal, void * data, void (ANTLR3_CDECL *freeptr)(void *));$/;"	m	struct:ANTLR3_INT_TRIE_struct
add	/home/steffen/include/antlr3collections.h	/^    ANTLR3_INT32    (*add)		(struct ANTLR3_LIST_struct * list, void * element, void (ANTLR3_CDECL *freeptr)(void *));$/;"	m	struct:ANTLR3_LIST_struct
add	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32   (*add)					(struct ANTLR3_VECTOR_struct * vector, void * element, void (ANTLR3_CDECL *freeptr)(void *));$/;"	m	struct:ANTLR3_VECTOR_struct
add	/home/steffen/include/antlr3rewritestreams.h	/^    void		(*add)					(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream, void *el, void (ANTLR3_CDECL *freePtr)(void *));$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
addChild	/home/steffen/include/antlr3basetree.h	/^    void				(*addChild)			(struct ANTLR3_BASE_TREE_struct * tree, void * child);$/;"	m	struct:ANTLR3_BASE_TREE_struct
addChild	/home/steffen/include/antlr3basetreeadaptor.h	/^    void					(*addChild)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t, void * child);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
addChild	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*addChild)				(pANTLR3_DEBUG_EVENT_LISTENER delboy, pANTLR3_BASE_TREE root, pANTLR3_BASE_TREE child);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
addChildToken	/home/steffen/include/antlr3basetreeadaptor.h	/^    void					(*addChildToken)		(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t, pANTLR3_COMMON_TOKEN child);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
addChildren	/home/steffen/include/antlr3basetree.h	/^    void				(*addChildren)			(struct ANTLR3_BASE_TREE_struct * tree, pANTLR3_LIST kids);$/;"	m	struct:ANTLR3_BASE_TREE_struct
addEdge	/home/steffen/include/antlr3collections.h	/^    void            (*addEdge)          (struct ANTLR3_TOPO_struct * topo, ANTLR3_UINT32 edge, ANTLR3_UINT32 dependency);$/;"	m	struct:ANTLR3_TOPO_struct
addLookahead	/home/steffen/include/antlr3commontreenodestream.h	/^    void				(*addLookahead)				(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns, pANTLR3_BASE_TREE node);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
addNavigationNode	/home/steffen/include/antlr3commontreenodestream.h	/^    void				(*addNavigationNode)		(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns, ANTLR3_UINT32 ttype);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
addc	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8   (*addc)	(struct ANTLR3_STRING_struct * string, ANTLR3_UINT32 c);$/;"	m	struct:ANTLR3_STRING_struct
addi	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8   (*addi)	(struct ANTLR3_STRING_struct * string, ANTLR3_INT32 i);$/;"	m	struct:ANTLR3_STRING_struct
allowDups	/home/steffen/include/antlr3collections.h	/^    ANTLR3_BOOLEAN			allowDups;		\/* Whether this trie accepts duplicate keys			*\/$/;"	m	struct:ANTLR3_INT_TRIE_struct
allowDups	/home/steffen/include/antlr3collections.h	/^    int					allowDups;$/;"	m	struct:ANTLR3_HASH_TABLE_struct
alreadyParsedRule	/home/steffen/include/antlr3baserecognizer.h	/^    ANTLR3_BOOLEAN	(*alreadyParsedRule)		(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer,$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
append	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8   (*append)	(struct ANTLR3_STRING_struct * string, const char * newbit);$/;"	m	struct:ANTLR3_STRING_struct
append8	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8   (*append8)	(struct ANTLR3_STRING_struct * string, const char * newbit);$/;"	m	struct:ANTLR3_STRING_struct
appendS	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8   (*appendS)	(struct ANTLR3_STRING_struct * string, struct ANTLR3_STRING_struct * newbit);$/;"	m	struct:ANTLR3_STRING_struct
arboretum	/home/steffen/include/antlr3commontreeadaptor.h	/^    pANTLR3_ARBORETUM	arboretum;$/;"	m	struct:ANTLR3_COMMON_TREE_ADAPTOR_struct
backtracking	/home/steffen/include/antlr3recognizersharedstate.h	/^    ANTLR3_INT32	backtracking;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
baseAdaptor	/home/steffen/include/antlr3commontreeadaptor.h	/^    ANTLR3_TREE_ADAPTOR	baseAdaptor;$/;"	m	struct:ANTLR3_COMMON_TREE_ADAPTOR_struct
baseTree	/home/steffen/include/antlr3commontree.h	/^    ANTLR3_BASE_TREE	    baseTree;$/;"	m	struct:ANTLR3_COMMON_TREE_struct
baseTree	/home/steffen/include/antlr3parsetree.h	/^    ANTLR3_BASE_TREE	    baseTree;$/;"	m	struct:ANTLR3_PARSE_TREE_struct
becomeRoot	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *	    			(*becomeRoot)			(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * newRoot, void * oldRoot);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
becomeRoot	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*becomeRoot)			(pANTLR3_DEBUG_EVENT_LISTENER delboy, pANTLR3_BASE_TREE newRoot, pANTLR3_BASE_TREE oldRoot);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
becomeRootToken	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *	   			 	(*becomeRootToken)		(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * newRoot, void * oldRoot);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
beginBacktrack	/home/steffen/include/antlr3baserecognizer.h	/^    void		(*beginBacktrack)		(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer, ANTLR3_UINT32 level);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
beginBacktrack	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*beginBacktrack)	(pANTLR3_DEBUG_EVENT_LISTENER delboy, int level);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
beginResync	/home/steffen/include/antlr3baserecognizer.h	/^    void		(*beginResync)		    (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
beginResync	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*beginResync)			(pANTLR3_DEBUG_EVENT_LISTENER delboy);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
bitNum	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32							  bitNum;	\/**< This is the left\/right bit index for traversal along the nodes				*\/$/;"	m	struct:ANTLR3_INT_TRIE_NODE_struct
bits	/home/steffen/include/antlr3bitset.h	/^    pANTLR3_BITWORD   bits;$/;"	m	struct:ANTLR3_BITSET_LIST_struct
blist	/home/steffen/include/antlr3bitset.h	/^	ANTLR3_BITSET_LIST				blist;$/;"	m	struct:ANTLR3_BITSET_struct
bor	/home/steffen/include/antlr3bitset.h	/^    pANTLR3_BITSET					(*bor)			(struct ANTLR3_BITSET_struct  * bitset1, struct ANTLR3_BITSET_struct * bitset2);$/;"	m	struct:ANTLR3_BITSET_struct
borInPlace	/home/steffen/include/antlr3bitset.h	/^    void							(*borInPlace)   (struct ANTLR3_BITSET_struct  * bitset,  struct ANTLR3_BITSET_struct * bitset2);$/;"	m	struct:ANTLR3_BITSET_struct
bucket	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32	bucket;$/;"	m	struct:ANTLR3_HASH_ENUM_struct
buckets	/home/steffen/include/antlr3collections.h	/^    pANTLR3_HASH_BUCKET	buckets;$/;"	m	struct:ANTLR3_HASH_TABLE_struct
buckets	/home/steffen/include/antlr3collections.h	/^    pANTLR3_TRIE_ENTRY						  buckets;	\/**< This is the data bucket(s) that the key indexes, which may be NULL			*\/$/;"	m	struct:ANTLR3_INT_TRIE_NODE_struct
c	/home/steffen/include/antlr3exception.h	/^    ANTLR3_UCHAR   c;$/;"	m	struct:ANTLR3_EXCEPTION_struct
cachedSize	/home/steffen/include/antlr3intstream.h	/^    ANTLR3_UINT32	    cachedSize;$/;"	m	struct:ANTLR3_INT_STREAM_struct
channel	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_UINT32   channel;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
channel	/home/steffen/include/antlr3recognizersharedstate.h	/^    ANTLR3_UINT32		channel;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
channel	/home/steffen/include/antlr3tokenstream.h	/^    ANTLR3_UINT32	    channel;$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
channelOverrides	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_LIST	    channelOverrides;$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
charAt	/home/steffen/include/antlr3string.h	/^    ANTLR3_UCHAR    (*charAt)	(struct ANTLR3_STRING_struct * string, ANTLR3_UINT32 offset);$/;"	m	struct:ANTLR3_STRING_struct
charByteSize	/home/steffen/include/antlr3input.h	/^    ANTLR3_UINT8	charByteSize;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
charPosition	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_INT32    charPosition;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
charPositionInLine	/home/steffen/include/antlr3exception.h	/^    ANTLR3_INT32   charPositionInLine;$/;"	m	struct:ANTLR3_EXCEPTION_struct
charPositionInLine	/home/steffen/include/antlr3input.h	/^    ANTLR3_INT32	charPositionInLine;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
charPositionInLine	/home/steffen/include/antlr3input.h	/^    ANTLR3_INT32	charPositionInLine;$/;"	m	struct:ANTLR3_LEX_STATE_struct
chars	/home/steffen/include/antlr3commontoken.h	/^		pANTLR3_UCHAR	chars;$/;"	m	union:ANTLR3_COMMON_TOKEN_struct::__anon3
chars	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8		chars;$/;"	m	struct:ANTLR3_STRING_struct
childIndex	/home/steffen/include/antlr3commontree.h	/^	ANTLR3_INT32			  childIndex;$/;"	m	struct:ANTLR3_COMMON_TREE_struct
children	/home/steffen/include/antlr3basetree.h	/^    pANTLR3_VECTOR  children;$/;"	m	struct:ANTLR3_BASE_TREE_struct
clear	/home/steffen/include/antlr3collections.h	/^    void			(*clear)				(struct ANTLR3_VECTOR_struct * vector);$/;"	m	struct:ANTLR3_VECTOR_struct
clone	/home/steffen/include/antlr3bitset.h	/^    pANTLR3_BITSET					(*clone)	    (struct ANTLR3_BITSET_struct  * inSet);$/;"	m	struct:ANTLR3_BITSET_struct
close	/home/steffen/include/antlr3collections.h	/^	void                (*close)	    (struct ANTLR3_VECTOR_FACTORY_struct * factory);$/;"	m	struct:ANTLR3_VECTOR_FACTORY_struct
close	/home/steffen/include/antlr3commontoken.h	/^    void		    (*close)	    (struct ANTLR3_TOKEN_FACTORY_struct * factory);$/;"	m	struct:ANTLR3_TOKEN_FACTORY_struct
close	/home/steffen/include/antlr3commontree.h	/^    void		    (*close)	    (struct ANTLR3_ARBORETUM_struct * factory);$/;"	m	struct:ANTLR3_ARBORETUM_struct
close	/home/steffen/include/antlr3input.h	/^    void		(*close)	(struct	ANTLR3_INPUT_STREAM_struct * input);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
close	/home/steffen/include/antlr3string.h	/^    void	    (*close)	(struct ANTLR3_STRING_FACTORY_struct * factory);$/;"	m	struct:ANTLR3_STRING_FACTORY_struct
combineFollows	/home/steffen/include/antlr3baserecognizer.h	/^    pANTLR3_BITSET	(*combineFollows)	    (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer, $/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
command	oris_automationParser.c	/^command(poris_automationParser ctx)$/;"	f	file:
command	oris_automationParser.h	/^     (*command)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
commence	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*commence)				(pANTLR3_DEBUG_EVENT_LISTENER delboy);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
compare	/home/steffen/include/antlr3string.h	/^    ANTLR3_UINT32   (*compare)	(struct ANTLR3_STRING_struct * string, const char * compStr);$/;"	m	struct:ANTLR3_STRING_struct
compare8	/home/steffen/include/antlr3string.h	/^    ANTLR3_UINT32   (*compare8)	(struct ANTLR3_STRING_struct * string, const char * compStr);$/;"	m	struct:ANTLR3_STRING_struct
compareS	/home/steffen/include/antlr3string.h	/^    ANTLR3_UINT32   (*compareS)	(struct ANTLR3_STRING_struct * string, struct ANTLR3_STRING_struct * compStr);$/;"	m	struct:ANTLR3_STRING_struct
computeCSRuleFollow	/home/steffen/include/antlr3baserecognizer.h	/^    pANTLR3_BITSET	(*computeCSRuleFollow)	    (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
computeErrorRecoverySet	/home/steffen/include/antlr3baserecognizer.h	/^    pANTLR3_BITSET	(*computeErrorRecoverySet)  (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
configuration	oris_automationParser.c	/^configuration(poris_automationParser ctx)$/;"	f	file:
configuration	oris_automationParser.h	/^     (*configuration)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
connection	oris_automationParser.c	/^connection(poris_automationParser ctx)$/;"	f	file:
connection	oris_automationParser.h	/^     (*connection)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
connection_state	oris_automationParser.c	/^connection_state(poris_automationParser ctx)$/;"	f	file:
connection_state	oris_automationParser.h	/^     (*connection_state)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
constant	oris_automationParser.c	/^constant(poris_automationParser ctx)$/;"	f	file:
constant	oris_automationParser.h	/^     (*constant)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
consume	/home/steffen/include/antlr3intstream.h	/^    void		    (*consume)	    (struct ANTLR3_INT_STREAM_struct * intStream);$/;"	m	struct:ANTLR3_INT_STREAM_struct
consumeHiddenToken	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*consumeHiddenToken)	(pANTLR3_DEBUG_EVENT_LISTENER delboy, pANTLR3_COMMON_TOKEN t);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
consumeNode	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*consumeNode)			(pANTLR3_DEBUG_EVENT_LISTENER delboy, pANTLR3_BASE_TREE t);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
consumeToken	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*consumeToken)		(pANTLR3_DEBUG_EVENT_LISTENER delboy, pANTLR3_COMMON_TOKEN t);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
consumeUntil	/home/steffen/include/antlr3baserecognizer.h	/^    void		(*consumeUntil)		    (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer,$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
consumeUntilSet	/home/steffen/include/antlr3baserecognizer.h	/^    void		(*consumeUntilSet)	    (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer,$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
conversionOK	/home/steffen/include/antlr3convertutf.h	/^	conversionOK, 		\/* conversion successful *\/$/;"	e	enum:__anon4
count	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32			count;			\/* Current entry count								*\/$/;"	m	struct:ANTLR3_INT_TRIE_struct
count	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32		count;$/;"	m	struct:ANTLR3_HASH_TABLE_struct
count	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32   count;$/;"	m	struct:ANTLR3_VECTOR_struct
create	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *	   		 		(*create)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, pANTLR3_COMMON_TOKEN payload);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
createChildrenList	/home/steffen/include/antlr3basetree.h	/^    void    				(*createChildrenList)		(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
createNode	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*createNode)			(pANTLR3_DEBUG_EVENT_LISTENER delboy, pANTLR3_BASE_TREE t);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
createNodeTok	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*createNodeTok)		(pANTLR3_DEBUG_EVENT_LISTENER delboy, pANTLR3_BASE_TREE node, pANTLR3_COMMON_TOKEN token);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
createToken	/home/steffen/include/antlr3basetreeadaptor.h	/^    pANTLR3_COMMON_TOKEN    (*createToken)			(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, ANTLR3_UINT32 tokenType, pANTLR3_UINT8 text);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
createTokenFromToken	/home/steffen/include/antlr3basetreeadaptor.h	/^    pANTLR3_COMMON_TOKEN    (*createTokenFromToken)	(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, pANTLR3_COMMON_TOKEN fromToken);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
createTypeText	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *	    			(*createTypeText)		(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, ANTLR3_UINT32 tokenType, pANTLR3_UINT8 text);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
createTypeToken	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *	   		 		(*createTypeToken)		(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, ANTLR3_UINT32 tokenType, pANTLR3_COMMON_TOKEN fromToken);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
createTypeTokenText	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *	   				(*createTypeTokenText)	(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, ANTLR3_UINT32 tokenType, pANTLR3_COMMON_TOKEN fromToken, pANTLR3_UINT8 text);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
ctns	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_COMMON_TREE_NODE_STREAM	ctns;$/;"	m	struct:ANTLR3_TREE_NODE_STREAM_struct
ctnstream	/home/steffen/include/antlr3treeparser.h	/^    pANTLR3_COMMON_TREE_NODE_STREAM	ctnstream;$/;"	m	struct:ANTLR3_TREE_PARSER_struct
ctx	/home/steffen/include/antlr3lexer.h	/^    void	* ctx;$/;"	m	struct:ANTLR3_LEXER_struct
current	/home/steffen/include/antlr3collections.h	/^    pANTLR3_INT_TRIE_NODE   current;		\/* Used to traverse the TRIE with the next() method	*\/$/;"	m	struct:ANTLR3_INT_TRIE_struct
currentChildIndex	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_INT32				currentChildIndex;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
currentChildIndex	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_UINT32			  currentChildIndex;$/;"	m	struct:ANTLR3_TREE_WALK_STATE_struct
currentLine	/home/steffen/include/antlr3input.h	/^    void	      * currentLine;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
currentLine	/home/steffen/include/antlr3input.h	/^    void	      * currentLine;$/;"	m	struct:ANTLR3_LEX_STATE_struct
currentNode	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE			currentNode;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
currentNode	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE		  currentNode;$/;"	m	struct:ANTLR3_TREE_WALK_STATE_struct
cursor	/home/steffen/include/antlr3rewritestreams.h	/^    ANTLR3_UINT32		  cursor;$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
custom	/home/steffen/include/antlr3commontoken.h	/^    void    * custom;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
custom	/home/steffen/include/antlr3exception.h	/^    void    *	    custom;$/;"	m	struct:ANTLR3_EXCEPTION_struct
custom	/home/steffen/include/antlr3recognizersharedstate.h	/^	void				* custom;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
cycle	/home/steffen/include/antlr3collections.h	/^    pANTLR3_UINT32    cycle;$/;"	m	struct:ANTLR3_TOPO_struct
cycleMark	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32     cycleMark;$/;"	m	struct:ANTLR3_TOPO_struct
data	/home/steffen/include/antlr3collections.h	/^	} data;$/;"	m	struct:ANTLR3_TRIE_ENTRY_struct	typeref:union:ANTLR3_TRIE_ENTRY_struct::__anon2
data	/home/steffen/include/antlr3collections.h	/^    void	    * data;$/;"	m	struct:ANTLR3_HASH_ENTRY_struct
data	/home/steffen/include/antlr3input.h	/^    void	      *	data;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
debugger	/home/steffen/include/antlr3baserecognizer.h	/^	pANTLR3_DEBUG_EVENT_LISTENER	debugger;$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
debugger	/home/steffen/include/antlr3basetreeadaptor.h	/^	pANTLR3_DEBUG_EVENT_LISTENER	debugger;$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
debugger	/home/steffen/include/antlr3tokenstream.h	/^	pANTLR3_DEBUG_EVENT_LISTENER		debugger;$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
decisionNum	/home/steffen/include/antlr3exception.h	/^    ANTLR3_UINT32   decisionNum;$/;"	m	struct:ANTLR3_EXCEPTION_struct
decisionNumber	/home/steffen/include/antlr3cyclicdfa.h	/^    const ANTLR3_INT32		decisionNumber;$/;"	m	struct:ANTLR3_CYCLIC_DFA_struct
del	/home/steffen/include/antlr3collections.h	/^    ANTLR3_BOOLEAN		(*del)	(struct ANTLR3_INT_TRIE_struct * trie, ANTLR3_INTKEY key);$/;"	m	struct:ANTLR3_INT_TRIE_struct
del	/home/steffen/include/antlr3collections.h	/^    void				(*del)	    (struct ANTLR3_HASH_TABLE_struct * table, void * key);$/;"	m	struct:ANTLR3_HASH_TABLE_struct
del	/home/steffen/include/antlr3collections.h	/^    void			(*del)					(struct ANTLR3_VECTOR_struct * vector, ANTLR3_UINT32 entry);$/;"	m	struct:ANTLR3_VECTOR_struct
del	/home/steffen/include/antlr3collections.h	/^    void			(*del)		(struct ANTLR3_LIST_struct * list, ANTLR3_INTKEY key);$/;"	m	struct:ANTLR3_LIST_struct
delI	/home/steffen/include/antlr3collections.h	/^    void				(*delI)	    (struct ANTLR3_HASH_TABLE_struct * table, ANTLR3_INTKEY key);$/;"	m	struct:ANTLR3_HASH_TABLE_struct
deleteChild	/home/steffen/include/antlr3basetree.h	/^    void    *				(*deleteChild)			(struct ANTLR3_BASE_TREE_struct * tree, ANTLR3_UINT32 i);$/;"	m	struct:ANTLR3_BASE_TREE_struct
deleteChild	/home/steffen/include/antlr3basetreeadaptor.h	/^    void					(*deleteChild)			(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t, ANTLR3_UINT32 i);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
description	/home/steffen/include/antlr3cyclicdfa.h	/^    const pANTLR3_UCHAR		description;$/;"	m	struct:ANTLR3_CYCLIC_DFA_struct
destroy	/home/steffen/include/antlr3string.h	/^    void	    (*destroy)	(struct ANTLR3_STRING_FACTORY_struct * factory, pANTLR3_STRING string);$/;"	m	struct:ANTLR3_STRING_FACTORY_struct
dirty	/home/steffen/include/antlr3rewritestreams.h	/^	ANTLR3_BOOLEAN				dirty;$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
discardOffChannel	/home/steffen/include/antlr3tokenstream.h	/^    ANTLR3_BOOLEAN	    discardOffChannel;$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
discardOffChannelToks	/home/steffen/include/antlr3tokenstream.h	/^    void		    (*discardOffChannelToks)(struct ANTLR3_COMMON_TOKEN_STREAM_struct * tokenStream, ANTLR3_BOOLEAN discard);$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
discardSet	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_LIST	    discardSet;$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
discardTokenType	/home/steffen/include/antlr3tokenstream.h	/^    void		    (*discardTokenType)	    (struct ANTLR3_COMMON_TOKEN_STREAM_struct * tokenStream, ANTLR3_INT32 ttype);$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
displayRecognitionError	/home/steffen/include/antlr3baserecognizer.h	/^    void		(*displayRecognitionError)  (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer, pANTLR3_UINT8 * tokenNames);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
doStrdup	/home/steffen/include/antlr3collections.h	/^    ANTLR3_BOOLEAN              doStrdup;$/;"	m	struct:ANTLR3_HASH_TABLE_struct
dup	/home/steffen/include/antlr3rewritestreams.h	/^    void *		(*dup)					(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream, void * el);$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
dupNode	/home/steffen/include/antlr3basetree.h	/^    void    *				(*dupNode)			(struct ANTLR3_BASE_TREE_struct * dupNode);$/;"	m	struct:ANTLR3_BASE_TREE_struct
dupNode	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *	    			(*dupNode)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * treeNode);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
dupNode	/home/steffen/include/antlr3parsetree.h	/^    pANTLR3_BASE_TREE	    (*dupNode)	(struct ANTLR3_PARSE_TREE_struct * tree);$/;"	m	struct:ANTLR3_PARSE_TREE_struct
dupTree	/home/steffen/include/antlr3basetree.h	/^    void    *				(*dupTree)			(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
dupTree	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *	   		 		(*dupTree)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * tree);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
dupTreeTT	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *	   		 		(*dupTreeTT)			(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t, void * tree);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
edges	/home/steffen/include/antlr3collections.h	/^    pANTLR3_BITSET  * edges;$/;"	m	struct:ANTLR3_TOPO_struct
element	/home/steffen/include/antlr3collections.h	/^    void    * element;$/;"	m	struct:ANTLR3_VECTOR_ELEMENT_struct
elementDescription	/home/steffen/include/antlr3rewritestreams.h	/^    void				* elementDescription;$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
elements	/home/steffen/include/antlr3collections.h	/^    pANTLR3_VECTOR_ELEMENT  elements;$/;"	m	struct:ANTLR3_VECTOR_struct
elements	/home/steffen/include/antlr3rewritestreams.h	/^    pANTLR3_VECTOR		  elements;$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
elementsSize	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32   elementsSize;$/;"	m	struct:ANTLR3_VECTOR_struct
emit	/home/steffen/include/antlr3lexer.h	/^    pANTLR3_COMMON_TOKEN	(*emit)		    (struct ANTLR3_LEXER_struct * lexer);$/;"	m	struct:ANTLR3_LEXER_struct
emitNew	/home/steffen/include/antlr3lexer.h	/^    void			(*emitNew)	    (struct ANTLR3_LEXER_struct * lexer, pANTLR3_COMMON_TOKEN token);$/;"	m	struct:ANTLR3_LEXER_struct
encoding	/home/steffen/include/antlr3input.h	/^    ANTLR3_UINT32       encoding;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
encoding	/home/steffen/include/antlr3string.h	/^    ANTLR3_UINT8		encoding;$/;"	m	struct:ANTLR3_STRING_struct
endBacktrack	/home/steffen/include/antlr3baserecognizer.h	/^    void		(*endBacktrack)		    (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer, ANTLR3_UINT32 level, ANTLR3_BOOLEAN successful);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
endBacktrack	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*endBacktrack)		(pANTLR3_DEBUG_EVENT_LISTENER delboy, int level, ANTLR3_BOOLEAN successful);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
endResync	/home/steffen/include/antlr3baserecognizer.h	/^    void		(*endResync)		    (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
endResync	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*endResync)			(pANTLR3_DEBUG_EVENT_LISTENER delboy);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
enterAlt	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*enterAlt)			(pANTLR3_DEBUG_EVENT_LISTENER delboy, int alt);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
enterDecision	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*enterDecision)	(pANTLR3_DEBUG_EVENT_LISTENER delboy, int decisionNumber);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
enterRule	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*enterRule)		(pANTLR3_DEBUG_EVENT_LISTENER delboy, const char * grammarFileName, const char * ruleName);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
enterSubRule	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*enterSubRule)		(pANTLR3_DEBUG_EVENT_LISTENER delboy, int decisionNumber);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
entries	/home/steffen/include/antlr3collections.h	/^    pANTLR3_HASH_ENTRY	entries;$/;"	m	struct:ANTLR3_HASH_BUCKET_struct
entry	/home/steffen/include/antlr3collections.h	/^    pANTLR3_HASH_ENTRY	entry;$/;"	m	struct:ANTLR3_HASH_ENUM_struct
eof	/home/steffen/include/antlr3cyclicdfa.h	/^    const ANTLR3_INT32		    * const eof;$/;"	m	struct:ANTLR3_CYCLIC_DFA_struct
eofToken	/home/steffen/include/antlr3tokenstream.h	/^    ANTLR3_COMMON_TOKEN	    eofToken;$/;"	m	struct:ANTLR3_TOKEN_SOURCE_struct
eot	/home/steffen/include/antlr3cyclicdfa.h	/^    const ANTLR3_INT32		    * const eot;$/;"	m	struct:ANTLR3_CYCLIC_DFA_struct
equals	/home/steffen/include/antlr3bitset.h	/^    ANTLR3_BOOLEAN					(*equals)	    (struct ANTLR3_BITSET_struct  * bitset1, struct ANTLR3_BITSET_struct * bitset2);$/;"	m	struct:ANTLR3_BITSET_struct
error	/home/steffen/include/antlr3recognizersharedstate.h	/^    ANTLR3_BOOLEAN	    error;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
errorCount	/home/steffen/include/antlr3recognizersharedstate.h	/^    ANTLR3_UINT32	errorCount;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
errorNode	/home/steffen/include/antlr3basetreeadaptor.h	/^	void *					(*errorNode)			(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, pANTLR3_TOKEN_STREAM tnstream, pANTLR3_COMMON_TOKEN startToken, pANTLR3_COMMON_TOKEN stopToken, pANTLR3_EXCEPTION e);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
errorNode	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*errorNode)			(pANTLR3_DEBUG_EVENT_LISTENER delboy, pANTLR3_BASE_TREE t);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
errorRecovery	/home/steffen/include/antlr3recognizersharedstate.h	/^    ANTLR3_BOOLEAN	errorRecovery;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
event	oris_automationParser.c	/^event(poris_automationParser ctx)$/;"	f	file:
event	oris_automationParser.h	/^     (*event)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
exConstruct	/home/steffen/include/antlr3baserecognizer.h	/^    void		    (*exConstruct)		(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
exception	/home/steffen/include/antlr3recognizersharedstate.h	/^    pANTLR3_EXCEPTION	    exception;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
exitDecision	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*exitDecision)		(pANTLR3_DEBUG_EVENT_LISTENER delboy, int decisionNumber);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
exitRule	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*exitRule)			(pANTLR3_DEBUG_EVENT_LISTENER delboy, const char * grammarFileName, const char * ruleName);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
exitSubRule	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*exitSubRule)		(pANTLR3_DEBUG_EVENT_LISTENER delboy, int decisionNumber);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
expecting	/home/steffen/include/antlr3exception.h	/^    ANTLR3_UINT32   expecting;$/;"	m	struct:ANTLR3_EXCEPTION_struct
expectingSet	/home/steffen/include/antlr3exception.h	/^    pANTLR3_BITSET_LIST  expectingSet;$/;"	m	struct:ANTLR3_EXCEPTION_struct
expr	oris_automationParser.c	/^expr(poris_automationParser ctx)$/;"	f	file:
expr	oris_automationParser.h	/^     (*expr)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
factor	oris_automationParser.c	/^factor(poris_automationParser ctx)$/;"	f	file:
factor	oris_automationParser.h	/^     (*factor)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
factory	/home/steffen/include/antlr3commontree.h	/^	pANTLR3_ARBORETUM	factory;$/;"	m	struct:ANTLR3_COMMON_TREE_struct
factory	/home/steffen/include/antlr3string.h	/^    pANTLR3_STRING_FACTORY	factory;$/;"	m	struct:ANTLR3_STRING_struct
factoryMade	/home/steffen/include/antlr3collections.h	/^    ANTLR3_BOOLEAN  factoryMade;$/;"	m	struct:ANTLR3_VECTOR_struct
factoryMade	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_BOOLEAN  factoryMade;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
failed	/home/steffen/include/antlr3recognizersharedstate.h	/^    ANTLR3_BOOLEAN	failed;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
false	/home/steffen/include/antlr3convertutf.h	121;"	d
fileName	/home/steffen/include/antlr3input.h	/^    pANTLR3_STRING	fileName;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
fileName	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_STRING	    fileName;$/;"	m	struct:ANTLR3_TOKEN_SOURCE_struct
fileName	oris_automationLexer.c	/^static const char fileName[] = "oris_automation.g";$/;"	v	file:
fileName	oris_automationParser.c	/^static const char fileName[] = "oris_automation.g";$/;"	v	file:
fileNo	/home/steffen/include/antlr3input.h	/^    ANTLR3_UINT32	fileNo;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
fill	/home/steffen/include/antlr3commontreenodestream.h	/^    void				(*fill)						(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns, ANTLR3_INT32 k);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
following	/home/steffen/include/antlr3recognizersharedstate.h	/^    pANTLR3_STACK	following;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
free	/home/steffen/include/antlr3baserecognizer.h	/^    void			(*free)				(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
free	/home/steffen/include/antlr3basetree.h	/^    void    				(*free)				(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
free	/home/steffen/include/antlr3basetreeadaptor.h	/^    void					(*free)					(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
free	/home/steffen/include/antlr3bitset.h	/^    void							(*free)			(struct ANTLR3_BITSET_struct  * bitset);$/;"	m	struct:ANTLR3_BITSET_struct
free	/home/steffen/include/antlr3collections.h	/^    void				(*free)	    (struct ANTLR3_HASH_TABLE_struct * table);$/;"	m	struct:ANTLR3_HASH_TABLE_struct
free	/home/steffen/include/antlr3collections.h	/^    void				(*free)	(struct ANTLR3_INT_TRIE_struct * trie);$/;"	m	struct:ANTLR3_INT_TRIE_struct
free	/home/steffen/include/antlr3collections.h	/^    void			(*free)		(struct ANTLR3_LIST_struct * list);$/;"	m	struct:ANTLR3_LIST_struct
free	/home/steffen/include/antlr3collections.h	/^    void			(*free)	(struct ANTLR3_STACK_struct * stack);$/;"	m	struct:ANTLR3_STACK_struct
free	/home/steffen/include/antlr3collections.h	/^    void			(ANTLR3_CDECL *free)	(struct ANTLR3_VECTOR_struct * vector);$/;"	m	struct:ANTLR3_VECTOR_struct
free	/home/steffen/include/antlr3collections.h	/^    void	    (ANTLR3_CDECL *free)(void * data);$/;"	m	struct:ANTLR3_HASH_ENTRY_struct
free	/home/steffen/include/antlr3collections.h	/^    void	(*free)	    (struct ANTLR3_HASH_ENUM_struct * table);$/;"	m	struct:ANTLR3_HASH_ENUM_struct
free	/home/steffen/include/antlr3collections.h	/^    void            (*free)             (struct ANTLR3_TOPO_struct * topo);$/;"	m	struct:ANTLR3_TOPO_struct
free	/home/steffen/include/antlr3commontreenodestream.h	/^    void						(*free)							(struct ANTLR3_TREE_NODE_STREAM_struct * tns);$/;"	m	struct:ANTLR3_TREE_NODE_STREAM_struct
free	/home/steffen/include/antlr3commontreenodestream.h	/^    void				(*free)						(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
free	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*free)					(pANTLR3_DEBUG_EVENT_LISTENER delboy);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
free	/home/steffen/include/antlr3input.h	/^    void		(*free)		(struct	ANTLR3_INPUT_STREAM_struct * input);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
free	/home/steffen/include/antlr3intstream.h	/^    void		    (*free)	    (struct ANTLR3_INT_STREAM_struct * stream);$/;"	m	struct:ANTLR3_INT_STREAM_struct
free	/home/steffen/include/antlr3lexer.h	/^    void		(*free)		    (struct ANTLR3_LEXER_struct * lexer);$/;"	m	struct:ANTLR3_LEXER_struct
free	/home/steffen/include/antlr3parser.h	/^    void			(*free)			(struct ANTLR3_PARSER_struct	* parser);$/;"	m	struct:ANTLR3_PARSER_struct
free	/home/steffen/include/antlr3parsetree.h	/^    void		    (*free)	(struct ANTLR3_PARSE_TREE_struct * tree);$/;"	m	struct:ANTLR3_PARSE_TREE_struct
free	/home/steffen/include/antlr3rewritestreams.h	/^    void		(*free)					(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream);$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
free	/home/steffen/include/antlr3tokenstream.h	/^    void		    (*free)		    (struct ANTLR3_COMMON_TOKEN_STREAM_struct * tokenStream);$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
free	/home/steffen/include/antlr3tokenstream.h	/^    void		    (*free)		(struct ANTLR3_TOKEN_STREAM_struct * tokenStream);$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
free	/home/steffen/include/antlr3treeparser.h	/^    void			    (*free)		    (struct ANTLR3_TREE_PARSER_struct * parser);$/;"	m	struct:ANTLR3_TREE_PARSER_struct
free	oris_automationLexer.h	/^    void	    (*free)   (struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
free	oris_automationParser.h	/^    void	    (*free)   (struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
freeCustom	/home/steffen/include/antlr3commontoken.h	/^    void    (*freeCustom)(void * custom);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
freeCustom	/home/steffen/include/antlr3exception.h	/^    void	    (*freeCustom)   (void * custom);$/;"	m	struct:ANTLR3_EXCEPTION_struct
freeElements	/home/steffen/include/antlr3rewritestreams.h	/^    ANTLR3_BOOLEAN		  freeElements;$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
freeEx	/home/steffen/include/antlr3exception.h	/^    void	    (*freeEx)	    (struct ANTLR3_EXCEPTION_struct * ex);$/;"	m	struct:ANTLR3_EXCEPTION_struct
freeMessage	/home/steffen/include/antlr3exception.h	/^    ANTLR3_BOOLEAN  freeMessage;$/;"	m	struct:ANTLR3_EXCEPTION_struct
freeScope	oris_automationParser.c	/^static	void ANTLR3_CDECL freeScope(void * scope)$/;"	f	file:
freeStack	/home/steffen/include/antlr3collections.h	/^		pANTLR3_STACK		 freeStack;$/;"	m	struct:ANTLR3_VECTOR_FACTORY_struct
freeptr	/home/steffen/include/antlr3collections.h	/^	void (ANTLR3_CDECL *freeptr)(void *);$/;"	m	struct:ANTLR3_TRIE_ENTRY_struct
freeptr	/home/steffen/include/antlr3collections.h	/^    void (ANTLR3_CDECL *freeptr)(void *);$/;"	m	struct:ANTLR3_VECTOR_ELEMENT_struct
freshenPACIndexes	/home/steffen/include/antlr3basetree.h	/^    void				(*freshenPACIndexes)		(struct ANTLR3_BASE_TREE_struct * tree, ANTLR3_UINT32 offset);$/;"	m	struct:ANTLR3_BASE_TREE_struct
freshenPACIndexesAll	/home/steffen/include/antlr3basetree.h	/^    void				(*freshenPACIndexesAll)		(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
function	oris_automationParser.c	/^function(poris_automationParser ctx)$/;"	f	file:
function	oris_automationParser.h	/^     (*function)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
get	/home/steffen/include/antlr3collections.h	/^    pANTLR3_TRIE_ENTRY	(*get)	(struct ANTLR3_INT_TRIE_struct * trie, ANTLR3_INTKEY key);$/;"	m	struct:ANTLR3_INT_TRIE_struct
get	/home/steffen/include/antlr3collections.h	/^    void *				(*get)	    (struct ANTLR3_HASH_TABLE_struct * table, void * key);$/;"	m	struct:ANTLR3_HASH_TABLE_struct
get	/home/steffen/include/antlr3collections.h	/^    void *			(*get)					(struct ANTLR3_VECTOR_struct * vector, ANTLR3_UINT32 entry);$/;"	m	struct:ANTLR3_VECTOR_struct
get	/home/steffen/include/antlr3collections.h	/^    void *			(*get)		(struct ANTLR3_LIST_struct * list, ANTLR3_INTKEY key);$/;"	m	struct:ANTLR3_LIST_struct
get	/home/steffen/include/antlr3collections.h	/^    void *			(*get)	(struct ANTLR3_STACK_struct * stack, ANTLR3_INTKEY key);$/;"	m	struct:ANTLR3_STACK_struct
get	/home/steffen/include/antlr3commontreenodestream.h	/^	pANTLR3_BASE_TREE			(*get)							(struct ANTLR3_TREE_NODE_STREAM_struct * tns, ANTLR3_INT32 i);$/;"	m	struct:ANTLR3_TREE_NODE_STREAM_struct
get	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_COMMON_TOKEN    (*get)		(struct ANTLR3_TOKEN_STREAM_struct * tokenStream, ANTLR3_UINT32 i);$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
getChannel	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_UINT32   (*getChannel)	(struct ANTLR3_COMMON_TOKEN_struct * token);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
getCharIndex	/home/steffen/include/antlr3lexer.h	/^    ANTLR3_MARKER	(*getCharIndex)		(struct ANTLR3_LEXER_struct * lexer);$/;"	m	struct:ANTLR3_LEXER_struct
getCharPositionInLine	/home/steffen/include/antlr3basetree.h	/^    ANTLR3_UINT32			(*getCharPositionInLine)	(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
getCharPositionInLine	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_INT32    (*getCharPositionInLine)	(struct ANTLR3_COMMON_TOKEN_struct * token);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
getCharPositionInLine	/home/steffen/include/antlr3input.h	/^    ANTLR3_UINT32	(*getCharPositionInLine)  (struct ANTLR3_INPUT_STREAM_struct * input);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
getCharPositionInLine	/home/steffen/include/antlr3lexer.h	/^    ANTLR3_UINT32	(*getCharPositionInLine)(struct ANTLR3_LEXER_struct * lexer);$/;"	m	struct:ANTLR3_LEXER_struct
getChild	/home/steffen/include/antlr3basetree.h	/^    void    *				(*getChild)			(struct ANTLR3_BASE_TREE_struct * tree, ANTLR3_UINT32 i);$/;"	m	struct:ANTLR3_BASE_TREE_struct
getChild	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *	    			(*getChild)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t, ANTLR3_UINT32 i);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
getChildCount	/home/steffen/include/antlr3basetree.h	/^    ANTLR3_UINT32			(*getChildCount)		(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
getChildCount	/home/steffen/include/antlr3basetreeadaptor.h	/^    ANTLR3_UINT32			(*getChildCount)		(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void *);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
getChildIndex	/home/steffen/include/antlr3basetree.h	/^    ANTLR3_INT32			(*getChildIndex)		(struct ANTLR3_BASE_TREE_struct * tree );$/;"	m	struct:ANTLR3_BASE_TREE_struct
getChildIndex	/home/steffen/include/antlr3basetreeadaptor.h	/^    ANTLR3_INT32		    (*getChildIndex)		(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
getCurrentInputSymbol	/home/steffen/include/antlr3baserecognizer.h	/^	void *		(*getCurrentInputSymbol)	(	struct ANTLR3_BASE_RECOGNIZER_struct * recognizer, $/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
getDescription	/home/steffen/include/antlr3rewritestreams.h	/^    void *			(*getDescription)	(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream);$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
getFirstChildWithType	/home/steffen/include/antlr3basetree.h	/^    void    *				(*getFirstChildWithType)	(struct ANTLR3_BASE_TREE_struct * tree, ANTLR3_UINT32 type);$/;"	m	struct:ANTLR3_BASE_TREE_struct
getGrammarFileName	oris_automationLexer.c	/^static const char * getGrammarFileName()$/;"	f	file:
getGrammarFileName	oris_automationLexer.h	/^    const char * (*getGrammarFileName)();$/;"	m	struct:oris_automationLexer_Ctx_struct
getGrammarFileName	oris_automationParser.c	/^static const char * getGrammarFileName()$/;"	f	file:
getGrammarFileName	oris_automationParser.h	/^    const char * (*getGrammarFileName)();$/;"	m	struct:oris_automationParser_Ctx_struct
getI	/home/steffen/include/antlr3collections.h	/^    void *				(*getI)	    (struct ANTLR3_HASH_TABLE_struct * table, ANTLR3_INTKEY key);$/;"	m	struct:ANTLR3_HASH_TABLE_struct
getLine	/home/steffen/include/antlr3basetree.h	/^    ANTLR3_UINT32			(*getLine)			(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
getLine	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_UINT32   (*getLine)(struct ANTLR3_COMMON_TOKEN_struct * token);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
getLine	/home/steffen/include/antlr3input.h	/^    ANTLR3_UINT32	(*getLine)	(struct ANTLR3_INPUT_STREAM_struct * input);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
getLine	/home/steffen/include/antlr3lexer.h	/^    ANTLR3_UINT32	(*getLine)		(struct ANTLR3_LEXER_struct * lexer);$/;"	m	struct:ANTLR3_LEXER_struct
getLineBuf	/home/steffen/include/antlr3input.h	/^    void	  *	(*getLineBuf)	(struct ANTLR3_INPUT_STREAM_struct * input);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
getLookaheadSize	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_UINT32	    (*getLookaheadSize)			(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
getMissingSymbol	/home/steffen/include/antlr3baserecognizer.h	/^	void *		(*getMissingSymbol)			(	struct ANTLR3_BASE_RECOGNIZER_struct * recognizer,$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
getNumberOfSyntaxErrors	/home/steffen/include/antlr3baserecognizer.h	/^				(*getNumberOfSyntaxErrors)	(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
getParent	/home/steffen/include/antlr3basetree.h	/^    struct ANTLR3_BASE_TREE_struct *    (*getParent)			(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct	typeref:struct:ANTLR3_BASE_TREE_struct::getParent
getParent	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *					(*getParent)			(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * child);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
getRuleInvocationStack	/home/steffen/include/antlr3baserecognizer.h	/^    pANTLR3_STACK	(*getRuleInvocationStack)	(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
getRuleInvocationStackNamed	/home/steffen/include/antlr3baserecognizer.h	/^    pANTLR3_STACK	(*getRuleInvocationStackNamed)  (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer,$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
getRuleMemoization	/home/steffen/include/antlr3baserecognizer.h	/^    ANTLR3_MARKER	(*getRuleMemoization)		(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer,$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
getSourceName	/home/steffen/include/antlr3intstream.h	/^	pANTLR3_STRING		(*getSourceName)	(struct ANTLR3_INT_STREAM_struct * intStream);$/;"	m	struct:ANTLR3_INT_STREAM_struct
getStartIndex	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_MARKER   (*getStartIndex)	(struct ANTLR3_COMMON_TOKEN_struct * token);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
getStopIndex	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_MARKER   (*getStopIndex)	(struct ANTLR3_COMMON_TOKEN_struct * token);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
getText	/home/steffen/include/antlr3basetree.h	/^    pANTLR3_STRING			(*getText)			(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
getText	/home/steffen/include/antlr3basetreeadaptor.h	/^    pANTLR3_STRING			(*getText)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
getText	/home/steffen/include/antlr3commontoken.h	/^    pANTLR3_STRING  (*getText)(struct ANTLR3_COMMON_TOKEN_struct * token);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
getText	/home/steffen/include/antlr3lexer.h	/^    pANTLR3_STRING	(*getText)	    (struct ANTLR3_LEXER_struct * lexer);$/;"	m	struct:ANTLR3_LEXER_struct
getToken	/home/steffen/include/antlr3basetree.h	/^    pANTLR3_COMMON_TOKEN                (*getToken)			(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
getToken	/home/steffen/include/antlr3basetreeadaptor.h	/^    pANTLR3_COMMON_TOKEN    (*getToken)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t);  $/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
getTokenIndex	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_MARKER   (*getTokenIndex)	(struct ANTLR3_COMMON_TOKEN_struct * token);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
getTokenNames	oris_automationParser.c	/^static pANTLR3_UINT8    *getTokenNames()$/;"	f	file:
getTokenRange	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_LIST	    (*getTokenRange)	    (struct ANTLR3_COMMON_TOKEN_STREAM_struct * tokenStream, ANTLR3_UINT32 start, ANTLR3_UINT32 stop);$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
getTokenSource	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_TOKEN_SOURCE    (*getTokenSource)	(struct ANTLR3_TOKEN_STREAM_struct * tokenStream);$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
getTokenStartIndex	/home/steffen/include/antlr3basetreeadaptor.h	/^    ANTLR3_MARKER			(*getTokenStartIndex)	(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
getTokenStopIndex	/home/steffen/include/antlr3basetreeadaptor.h	/^    ANTLR3_MARKER			(*getTokenStopIndex)	(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
getTokenStream	/home/steffen/include/antlr3parser.h	/^    pANTLR3_TOKEN_STREAM	(*getTokenStream)	(struct ANTLR3_PARSER_struct	* parser);$/;"	m	struct:ANTLR3_PARSER_struct
getTokens	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_VECTOR	    (*getTokens)	    (struct ANTLR3_COMMON_TOKEN_STREAM_struct * tokenStream);$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
getTokensList	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_LIST	    (*getTokensList)	    (struct ANTLR3_COMMON_TOKEN_STREAM_struct * tokenStream, $/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
getTokensSet	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_LIST	    (*getTokensSet)	    (struct ANTLR3_COMMON_TOKEN_STREAM_struct * tokenStream, $/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
getTokensType	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_LIST	    (*getTokensType)	    (struct ANTLR3_COMMON_TOKEN_STREAM_struct * tokenStream, $/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
getTreeAdaptor	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE_ADAPTOR	(*getTreeAdaptor)				(struct ANTLR3_TREE_NODE_STREAM_struct * tns);$/;"	m	struct:ANTLR3_TREE_NODE_STREAM_struct
getTreeNodeStream	/home/steffen/include/antlr3treeparser.h	/^    pANTLR3_COMMON_TREE_NODE_STREAM (*getTreeNodeStream)    (struct ANTLR3_TREE_PARSER_struct * parser);$/;"	m	struct:ANTLR3_TREE_PARSER_struct
getTreeSource	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE			(*getTreeSource)				(struct ANTLR3_TREE_NODE_STREAM_struct * tns);$/;"	m	struct:ANTLR3_TREE_NODE_STREAM_struct
getType	/home/steffen/include/antlr3basetree.h	/^    ANTLR3_UINT32			(*getType)			(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
getType	/home/steffen/include/antlr3basetreeadaptor.h	/^    ANTLR3_UINT32			(*getType)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
getType	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_UINT32   (*getType)(struct ANTLR3_COMMON_TOKEN_struct * token);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
getType	/home/steffen/include/antlr3parsetree.h	/^    ANTLR3_UINT32	    (*getType)	(struct ANTLR3_PARSE_TREE_struct * tree);$/;"	m	struct:ANTLR3_PARSE_TREE_struct
getUniqueID	/home/steffen/include/antlr3basetreeadaptor.h	/^    ANTLR3_UINT32			(*getUniqueID)			(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void *);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
grammarFileName	/home/steffen/include/antlr3debugeventlistener.h	/^	pANTLR3_STRING		grammarFileName;$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
grow	/home/steffen/include/antlr3bitset.h	/^    void							(*grow)			(struct ANTLR3_BITSET_struct  * bitset, ANTLR3_INT32 newSize);$/;"	m	struct:ANTLR3_BITSET_struct
halfBase	/home/steffen/include/antlr3convertutf.h	124;"	d
halfMask	/home/steffen/include/antlr3convertutf.h	125;"	d
halfShift	/home/steffen/include/antlr3convertutf.h	123;"	d
handleRootnode	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE	(*handleRootnode)			(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
handshake	/home/steffen/include/antlr3debugeventlistener.h	/^	ANTLR3_BOOLEAN	(*handshake)		(pANTLR3_DEBUG_EVENT_LISTENER delboy);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
hasCycle	/home/steffen/include/antlr3collections.h	/^    ANTLR3_BOOLEAN    hasCycle;$/;"	m	struct:ANTLR3_TOPO_struct
hasNext	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_BOOLEAN	    (*hasNext)					(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
hasNext	/home/steffen/include/antlr3rewritestreams.h	/^    ANTLR3_BOOLEAN	(*hasNext)			(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream);$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
hasUniqueNavigationNodes	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_BOOLEAN	    (*hasUniqueNavigationNodes)	(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
head	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_UINT32				head;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
head	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_UINT32			  head;$/;"	m	struct:ANTLR3_TREE_WALK_STATE_struct
iKey	/home/steffen/include/antlr3collections.h	/^		ANTLR3_INTKEY   iKey;	\/**< used if type is ANTLR3_HASH_TYPE_INT			*\/$/;"	m	union:ANTLR3_HASH_KEY_struct::__anon1
index	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_MARKER   index;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
index	/home/steffen/include/antlr3defs.h	346;"	d
index	/home/steffen/include/antlr3exception.h	/^    ANTLR3_MARKER  index;$/;"	m	struct:ANTLR3_EXCEPTION_struct
index	/home/steffen/include/antlr3intstream.h	/^    ANTLR3_MARKER	    (*index)	    (struct ANTLR3_INT_STREAM_struct * intStream);$/;"	m	struct:ANTLR3_INT_STREAM_struct
index	/home/steffen/include/antlr3string.h	/^    ANTLR3_UINT32		index;$/;"	m	struct:ANTLR3_STRING_struct
index	/home/steffen/include/antlr3string.h	/^    ANTLR3_UINT32   index;$/;"	m	struct:ANTLR3_STRING_FACTORY_struct
initialStreamState	/home/steffen/include/antlr3tokenstream.h	/^	ANTLR3_BOOLEAN			initialStreamState;$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
initialized	/home/steffen/include/antlr3debugeventlistener.h	/^	ANTLR3_BOOLEAN		initialized;$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
input	/home/steffen/include/antlr3commontoken.h	/^    pANTLR3_INPUT_STREAM    input;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
input	/home/steffen/include/antlr3commontoken.h	/^    pANTLR3_INPUT_STREAM    input;$/;"	m	struct:ANTLR3_TOKEN_FACTORY_struct
input	/home/steffen/include/antlr3exception.h	/^    pANTLR3_INT_STREAM    input;$/;"	m	struct:ANTLR3_EXCEPTION_struct
input	/home/steffen/include/antlr3lexer.h	/^    pANTLR3_INPUT_STREAM	input;$/;"	m	struct:ANTLR3_LEXER_struct
insert	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8   (*insert)	(struct ANTLR3_STRING_struct * string, ANTLR3_UINT32 point, const char * newbit);$/;"	m	struct:ANTLR3_STRING_struct
insert8	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8   (*insert8)	(struct ANTLR3_STRING_struct * string, ANTLR3_UINT32 point, const char * newbit);$/;"	m	struct:ANTLR3_STRING_struct
insertS	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8   (*insertS)	(struct ANTLR3_STRING_struct * string, ANTLR3_UINT32 point, struct ANTLR3_STRING_struct * newbit);$/;"	m	struct:ANTLR3_STRING_struct
inserti	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8   (*inserti)	(struct ANTLR3_STRING_struct * string, ANTLR3_UINT32 point, ANTLR3_INT32 i);$/;"	m	struct:ANTLR3_STRING_struct
intVal	/home/steffen/include/antlr3collections.h	/^		ANTLR3_INTKEY     intVal;$/;"	m	union:ANTLR3_TRIE_ENTRY_struct::__anon2
internal	/home/steffen/include/antlr3collections.h	/^    ANTLR3_VECTOR_ELEMENT   internal[ANTLR3_VECTOR_INTERNAL_SIZE];$/;"	m	struct:ANTLR3_VECTOR_struct
isAllocated	/home/steffen/include/antlr3input.h	/^    int			isAllocated;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
isMember	/home/steffen/include/antlr3bitset.h	/^    ANTLR3_BOOLEAN					(*isMember)	    (struct ANTLR3_BITSET_struct  * bitset, ANTLR3_UINT32 bit);$/;"	m	struct:ANTLR3_BITSET_struct
isNilNode	/home/steffen/include/antlr3basetree.h	/^    ANTLR3_BOOLEAN			(*isNilNode)			(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
isNilNode	/home/steffen/include/antlr3basetreeadaptor.h	/^	ANTLR3_BOOLEAN			(*isNilNode)			(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
isNilNode	/home/steffen/include/antlr3bitset.h	/^    ANTLR3_BOOLEAN					(*isNilNode)	    (struct ANTLR3_BITSET_struct  * bitset);$/;"	m	struct:ANTLR3_BITSET_struct
isRewriter	/home/steffen/include/antlr3commontreenodestream.h	/^	ANTLR3_BOOLEAN				isRewriter;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
istream	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_INT_STREAM			istream;$/;"	m	struct:ANTLR3_TREE_NODE_STREAM_struct
istream	/home/steffen/include/antlr3input.h	/^    pANTLR3_INT_STREAM	istream;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
istream	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_INT_STREAM	    istream;$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
key	/home/steffen/include/antlr3collections.h	/^	key;$/;"	m	struct:ANTLR3_HASH_KEY_struct	typeref:union:ANTLR3_HASH_KEY_struct::__anon1
key	/home/steffen/include/antlr3collections.h	/^    ANTLR3_INTKEY							  key;		\/**< This is the actual key that the entry represents if it is a terminal node  *\/$/;"	m	struct:ANTLR3_INT_TRIE_NODE_struct
keybase	/home/steffen/include/antlr3collections.h	/^    ANTLR3_HASH_KEY 	keybase;$/;"	m	struct:ANTLR3_HASH_ENTRY_struct
lastErrorIndex	/home/steffen/include/antlr3recognizersharedstate.h	/^    ANTLR3_MARKER	lastErrorIndex;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
lastMarker	/home/steffen/include/antlr3intstream.h	/^    ANTLR3_MARKER	    lastMarker;$/;"	m	struct:ANTLR3_INT_STREAM_struct
leftN	/home/steffen/include/antlr3collections.h	/^    struct ANTLR3_INT_TRIE_NODE_struct	    * leftN;	\/**< Pointer to the left node from here when sKey & bitNum = 0					*\/$/;"	m	struct:ANTLR3_INT_TRIE_NODE_struct	typeref:struct:ANTLR3_INT_TRIE_NODE_struct::ANTLR3_INT_TRIE_NODE_struct
len	/home/steffen/include/antlr3string.h	/^    ANTLR3_UINT32		len;$/;"	m	struct:ANTLR3_STRING_struct
length	/home/steffen/include/antlr3bitset.h	/^    ANTLR3_UINT32    length;$/;"	m	struct:ANTLR3_BITSET_LIST_struct
lenientConversion	/home/steffen/include/antlr3convertutf.h	/^	lenientConversion$/;"	e	enum:__anon5
limit	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32     limit;$/;"	m	struct:ANTLR3_TOPO_struct
line	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_UINT32   line;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
line	/home/steffen/include/antlr3exception.h	/^    ANTLR3_UINT32   line;$/;"	m	struct:ANTLR3_EXCEPTION_struct
line	/home/steffen/include/antlr3input.h	/^    ANTLR3_UINT32	line;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
line	/home/steffen/include/antlr3input.h	/^    ANTLR3_UINT32	line;$/;"	m	struct:ANTLR3_LEX_STATE_struct
lineStart	/home/steffen/include/antlr3commontoken.h	/^    void	    * lineStart;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
lit_1	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_1[]  = { 0x61, 0x6E, 0x64,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_10	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_10[]  = { 0x74, 0x61, 0x62, 0x6C, 0x65,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_11	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_11[]  = { 0x74, 0x65, 0x6D, 0x70, 0x6C, 0x61, 0x74, 0x65,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_12	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_12[]  = { 0x64, 0x65, 0x6C, 0x65, 0x74, 0x65,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_13	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_13[]  = { 0x65, 0x61, 0x63, 0x68,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_14	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_14[]  = { 0x65, 0x6E, 0x74, 0x72, 0x79,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_15	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_15[]  = { 0x66, 0x6F, 0x72,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_16	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_16[]  = { 0x67, 0x65, 0x74,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_17	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_17[]  = { 0x70, 0x6F, 0x73, 0x74,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_18	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_18[]  = { 0x70, 0x75, 0x74,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_19	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_19[]  = { 0x76, 0x61, 0x6C, 0x75, 0x65,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_2	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_2[]  = { 0x63, 0x6C, 0x6F, 0x73, 0x65, 0x64,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_20	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_20[]  = { 0x77, 0x69, 0x74, 0x68,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_21	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_21[]  = { 0x2F, 0x2A,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_22	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_22[]  = { 0x2A, 0x2F,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_23	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_23[]  = { 0x3D, 0x3D,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_24	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_24[]  = { 0x3C, 0x3E,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_25	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_25[]  = { 0x21, 0x3D,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_26	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_26[]  = { 0x3C, 0x3D,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_27	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_27[]  = { 0x3E, 0x3D,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_3	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_3[]  = { 0x63, 0x6F, 0x6D, 0x6D, 0x61, 0x6E, 0x64,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_4	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_4[]  = { 0x63, 0x6F, 0x6E, 0x6E, 0x65, 0x63, 0x74, 0x69, 0x6F, 0x6E,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_5	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_5[]  = { 0x65, 0x73, 0x74, 0x61, 0x62, 0x6C, 0x69, 0x73, 0x68, 0x65, 0x64,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_6	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_6[]  = { 0x68, 0x74, 0x74, 0x70,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_7	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_7[]  = { 0x6F, 0x6E,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_8	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_8[]  = { 0x6F, 0x72,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
lit_9	oris_automationLexer.c	/^static ANTLR3_UCHAR	lit_9[]  = { 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,  ANTLR3_STRING_TERMINATOR};$/;"	v	file:
location	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*location)			(pANTLR3_DEBUG_EVENT_LISTENER delboy, int line, int pos);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
lookAhead	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE	      * lookAhead;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
lookAhead	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE	    * lookAhead;$/;"	m	struct:ANTLR3_TREE_WALK_STATE_struct
lookAheadLength	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_UINT32				lookAheadLength;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
lookAheadLength	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_UINT32			  lookAheadLength;$/;"	m	struct:ANTLR3_TREE_WALK_STATE_struct
mAND	oris_automationLexer.c	/^void mAND(poris_automationLexer ctx)$/;"	f	file:
mAND	oris_automationLexer.h	/^     (*mAND)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mBRACKET_LEFT	oris_automationLexer.c	/^void mBRACKET_LEFT(poris_automationLexer ctx)$/;"	f	file:
mBRACKET_LEFT	oris_automationLexer.h	/^     (*mBRACKET_LEFT)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mBRACKET_RIGHT	oris_automationLexer.c	/^void mBRACKET_RIGHT(poris_automationLexer ctx)$/;"	f	file:
mBRACKET_RIGHT	oris_automationLexer.h	/^     (*mBRACKET_RIGHT)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mCLOSED	oris_automationLexer.c	/^void mCLOSED(poris_automationLexer ctx)$/;"	f	file:
mCLOSED	oris_automationLexer.h	/^     (*mCLOSED)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mCOLON	oris_automationLexer.c	/^void mCOLON(poris_automationLexer ctx)$/;"	f	file:
mCOLON	oris_automationLexer.h	/^     (*mCOLON)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mCOMMA	oris_automationLexer.c	/^void mCOMMA(poris_automationLexer ctx)$/;"	f	file:
mCOMMA	oris_automationLexer.h	/^     (*mCOMMA)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mCOMMAND	oris_automationLexer.c	/^void mCOMMAND(poris_automationLexer ctx)$/;"	f	file:
mCOMMAND	oris_automationLexer.h	/^     (*mCOMMAND)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mCONNECTION	oris_automationLexer.c	/^void mCONNECTION(poris_automationLexer ctx)$/;"	f	file:
mCONNECTION	oris_automationLexer.h	/^     (*mCONNECTION)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mCURLY_LEFT	oris_automationLexer.c	/^void mCURLY_LEFT(poris_automationLexer ctx)$/;"	f	file:
mCURLY_LEFT	oris_automationLexer.h	/^     (*mCURLY_LEFT)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mCURLY_RIGHT	oris_automationLexer.c	/^void mCURLY_RIGHT(poris_automationLexer ctx)$/;"	f	file:
mCURLY_RIGHT	oris_automationLexer.h	/^     (*mCURLY_RIGHT)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mDIGIT	oris_automationLexer.c	/^void mDIGIT(poris_automationLexer ctx)$/;"	f	file:
mDIGIT	oris_automationLexer.h	/^     (*mDIGIT)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mDIV	oris_automationLexer.c	/^void mDIV(poris_automationLexer ctx)$/;"	f	file:
mDIV	oris_automationLexer.h	/^     (*mDIV)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mDOT	oris_automationLexer.c	/^void mDOT(poris_automationLexer ctx)$/;"	f	file:
mDOT	oris_automationLexer.h	/^     (*mDOT)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mEQUAL	oris_automationLexer.c	/^void mEQUAL(poris_automationLexer ctx)$/;"	f	file:
mEQUAL	oris_automationLexer.h	/^     (*mEQUAL)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mESTABLISHED	oris_automationLexer.c	/^void mESTABLISHED(poris_automationLexer ctx)$/;"	f	file:
mESTABLISHED	oris_automationLexer.h	/^     (*mESTABLISHED)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mGE	oris_automationLexer.c	/^void mGE(poris_automationLexer ctx)$/;"	f	file:
mGE	oris_automationLexer.h	/^     (*mGE)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mGT	oris_automationLexer.c	/^void mGT(poris_automationLexer ctx)$/;"	f	file:
mGT	oris_automationLexer.h	/^     (*mGT)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mHTTP	oris_automationLexer.c	/^void mHTTP(poris_automationLexer ctx)$/;"	f	file:
mHTTP	oris_automationLexer.h	/^     (*mHTTP)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mIDENTIFIER	oris_automationLexer.c	/^void mIDENTIFIER(poris_automationLexer ctx)$/;"	f	file:
mIDENTIFIER	oris_automationLexer.h	/^     (*mIDENTIFIER)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mINTEGER	oris_automationLexer.c	/^void mINTEGER(poris_automationLexer ctx)$/;"	f	file:
mINTEGER	oris_automationLexer.h	/^     (*mINTEGER)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mLE	oris_automationLexer.c	/^void mLE(poris_automationLexer ctx)$/;"	f	file:
mLE	oris_automationLexer.h	/^     (*mLE)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mLETTER	oris_automationLexer.c	/^void mLETTER(poris_automationLexer ctx)$/;"	f	file:
mLETTER	oris_automationLexer.h	/^     (*mLETTER)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mLTH	oris_automationLexer.c	/^void mLTH(poris_automationLexer ctx)$/;"	f	file:
mLTH	oris_automationLexer.h	/^     (*mLTH)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mMINUS	oris_automationLexer.c	/^void mMINUS(poris_automationLexer ctx)$/;"	f	file:
mMINUS	oris_automationLexer.h	/^     (*mMINUS)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mML_COMMENT	oris_automationLexer.c	/^void mML_COMMENT(poris_automationLexer ctx)$/;"	f	file:
mML_COMMENT	oris_automationLexer.h	/^     (*mML_COMMENT)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mMOD	oris_automationLexer.c	/^void mMOD(poris_automationLexer ctx)$/;"	f	file:
mMOD	oris_automationLexer.h	/^     (*mMOD)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mMUL	oris_automationLexer.c	/^void mMUL(poris_automationLexer ctx)$/;"	f	file:
mMUL	oris_automationLexer.h	/^     (*mMUL)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mNEWLINE	oris_automationLexer.c	/^void mNEWLINE(poris_automationLexer ctx)$/;"	f	file:
mNEWLINE	oris_automationLexer.h	/^     (*mNEWLINE)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mNOT_EQUAL	oris_automationLexer.c	/^void mNOT_EQUAL(poris_automationLexer ctx)$/;"	f	file:
mNOT_EQUAL	oris_automationLexer.h	/^     (*mNOT_EQUAL)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mON	oris_automationLexer.c	/^void mON(poris_automationLexer ctx)$/;"	f	file:
mON	oris_automationLexer.h	/^     (*mON)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mOR	oris_automationLexer.c	/^void mOR(poris_automationLexer ctx)$/;"	f	file:
mOR	oris_automationLexer.h	/^     (*mOR)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mPLUS	oris_automationLexer.c	/^void mPLUS(poris_automationLexer ctx)$/;"	f	file:
mPLUS	oris_automationLexer.h	/^     (*mPLUS)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mREQUEST	oris_automationLexer.c	/^void mREQUEST(poris_automationLexer ctx)$/;"	f	file:
mREQUEST	oris_automationLexer.h	/^     (*mREQUEST)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mSEMICOLON	oris_automationLexer.c	/^void mSEMICOLON(poris_automationLexer ctx)$/;"	f	file:
mSEMICOLON	oris_automationLexer.h	/^     (*mSEMICOLON)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mSL_COMMENT	oris_automationLexer.c	/^void mSL_COMMENT(poris_automationLexer ctx)$/;"	f	file:
mSL_COMMENT	oris_automationLexer.h	/^     (*mSL_COMMENT)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mSTRING	oris_automationLexer.c	/^void mSTRING(poris_automationLexer ctx)$/;"	f	file:
mSTRING	oris_automationLexer.h	/^     (*mSTRING)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mTABLE	oris_automationLexer.c	/^void mTABLE(poris_automationLexer ctx)$/;"	f	file:
mTABLE	oris_automationLexer.h	/^     (*mTABLE)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mTEMPLATE	oris_automationLexer.c	/^void mTEMPLATE(poris_automationLexer ctx)$/;"	f	file:
mTEMPLATE	oris_automationLexer.h	/^     (*mTEMPLATE)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mT__47	oris_automationLexer.c	/^void mT__47(poris_automationLexer ctx)$/;"	f	file:
mT__47	oris_automationLexer.h	/^     (*mT__47)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mT__48	oris_automationLexer.c	/^void mT__48(poris_automationLexer ctx)$/;"	f	file:
mT__48	oris_automationLexer.h	/^     (*mT__48)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mT__49	oris_automationLexer.c	/^void mT__49(poris_automationLexer ctx)$/;"	f	file:
mT__49	oris_automationLexer.h	/^     (*mT__49)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mT__50	oris_automationLexer.c	/^void mT__50(poris_automationLexer ctx)$/;"	f	file:
mT__50	oris_automationLexer.h	/^     (*mT__50)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mT__51	oris_automationLexer.c	/^void mT__51(poris_automationLexer ctx)$/;"	f	file:
mT__51	oris_automationLexer.h	/^     (*mT__51)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mT__52	oris_automationLexer.c	/^void mT__52(poris_automationLexer ctx)$/;"	f	file:
mT__52	oris_automationLexer.h	/^     (*mT__52)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mT__53	oris_automationLexer.c	/^void mT__53(poris_automationLexer ctx)$/;"	f	file:
mT__53	oris_automationLexer.h	/^     (*mT__53)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mT__54	oris_automationLexer.c	/^void mT__54(poris_automationLexer ctx)$/;"	f	file:
mT__54	oris_automationLexer.h	/^     (*mT__54)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mT__55	oris_automationLexer.c	/^void mT__55(poris_automationLexer ctx)$/;"	f	file:
mT__55	oris_automationLexer.h	/^     (*mT__55)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mTokens	/home/steffen/include/antlr3lexer.h	/^    void	        (*mTokens)		    (void * ctx);$/;"	m	struct:ANTLR3_LEXER_struct
mTokens	oris_automationLexer.c	/^mTokens(poris_automationLexer ctx)$/;"	f	file:
mTokens	oris_automationLexer.h	/^     (*mTokens)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mUNDERSCORE	oris_automationLexer.c	/^void mUNDERSCORE(poris_automationLexer ctx)$/;"	f	file:
mUNDERSCORE	oris_automationLexer.h	/^     (*mUNDERSCORE)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
mWS	oris_automationLexer.c	/^void mWS(poris_automationLexer ctx)$/;"	f	file:
mWS	oris_automationLexer.h	/^     (*mWS)	(struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
main	gtest.c	/^ main   (int argc, char *argv[])$/;"	f
makeDot	/home/steffen/include/antlr3basetreeadaptor.h	/^	pANTLR3_STRING			(*makeDot)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * theTree);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
mark	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*mark)				(pANTLR3_DEBUG_EVENT_LISTENER delboy, ANTLR3_MARKER marker);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
mark	/home/steffen/include/antlr3intstream.h	/^    ANTLR3_MARKER	    (*mark)	    (struct ANTLR3_INT_STREAM_struct * intStream);$/;"	m	struct:ANTLR3_INT_STREAM_struct
markDepth	/home/steffen/include/antlr3input.h	/^    ANTLR3_UINT32	markDepth;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
markers	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_VECTOR				markers;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
markers	/home/steffen/include/antlr3input.h	/^    pANTLR3_VECTOR	markers;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
match	/home/steffen/include/antlr3baserecognizer.h	/^    void *		(*match)	(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer,$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
matchAny	/home/steffen/include/antlr3baserecognizer.h	/^    void		(*matchAny)	(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
matchAny	/home/steffen/include/antlr3lexer.h	/^    void		(*matchAny)	    (struct ANTLR3_LEXER_struct * lexer);$/;"	m	struct:ANTLR3_LEXER_struct
matchRange	/home/steffen/include/antlr3lexer.h	/^    ANTLR3_BOOLEAN	(*matchRange)	    (struct ANTLR3_LEXER_struct * lexer, ANTLR3_UCHAR low, ANTLR3_UCHAR high);$/;"	m	struct:ANTLR3_LEXER_struct
matchc	/home/steffen/include/antlr3lexer.h	/^    ANTLR3_BOOLEAN	(*matchc)	    (struct ANTLR3_LEXER_struct * lexer, ANTLR3_UCHAR c);$/;"	m	struct:ANTLR3_LEXER_struct
matchs	/home/steffen/include/antlr3lexer.h	/^    ANTLR3_BOOLEAN	(*matchs)	    (struct ANTLR3_LEXER_struct * lexer, ANTLR3_UCHAR * string);$/;"	m	struct:ANTLR3_LEXER_struct
max	/home/steffen/include/antlr3cyclicdfa.h	/^    const ANTLR3_INT32		    * const max;$/;"	m	struct:ANTLR3_CYCLIC_DFA_struct
maxPool	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_INT32            maxPool;$/;"	m	struct:ANTLR3_TOKEN_FACTORY_struct
memoize	/home/steffen/include/antlr3baserecognizer.h	/^    void		(*memoize)			(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer,$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
message	/home/steffen/include/antlr3exception.h	/^    void    *	    message;$/;"	m	struct:ANTLR3_EXCEPTION_struct
min	/home/steffen/include/antlr3cyclicdfa.h	/^    const ANTLR3_INT32		    * const min;$/;"	m	struct:ANTLR3_CYCLIC_DFA_struct
mismatch	/home/steffen/include/antlr3baserecognizer.h	/^    void		(*mismatch)	(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer,$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
mismatchIsMissingToken	/home/steffen/include/antlr3baserecognizer.h	/^				(*mismatchIsMissingToken)	(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer, pANTLR3_INT_STREAM input, pANTLR3_BITSET_LIST follow);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
mismatchIsUnwantedToken	/home/steffen/include/antlr3baserecognizer.h	/^				(*mismatchIsUnwantedToken)	(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer, pANTLR3_INT_STREAM input, ANTLR3_UINT32 ttype);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
modulo	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32		modulo;$/;"	m	struct:ANTLR3_HASH_TABLE_struct
name	/home/steffen/include/antlr3exception.h	/^    void    *	    name;$/;"	m	struct:ANTLR3_EXCEPTION_struct
newDownNode	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE	(*newDownNode)				(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
newFromToken	/home/steffen/include/antlr3commontree.h	/^    pANTLR3_BASE_TREE	    (*newFromToken)	(struct ANTLR3_ARBORETUM_struct * factory, pANTLR3_COMMON_TOKEN token);$/;"	m	struct:ANTLR3_ARBORETUM_struct
newFromTree	/home/steffen/include/antlr3commontree.h	/^    pANTLR3_BASE_TREE	    (*newFromTree)	(struct ANTLR3_ARBORETUM_struct * factory, pANTLR3_COMMON_TREE tree);$/;"	m	struct:ANTLR3_ARBORETUM_struct
newPtr	/home/steffen/include/antlr3string.h	/^    pANTLR3_STRING  (*newPtr)	(struct ANTLR3_STRING_FACTORY_struct * factory, pANTLR3_UINT8 string, ANTLR3_UINT32 size);$/;"	m	struct:ANTLR3_STRING_FACTORY_struct
newPtr8	/home/steffen/include/antlr3string.h	/^    pANTLR3_STRING  (*newPtr8)	(struct ANTLR3_STRING_FACTORY_struct * factory, pANTLR3_UINT8 string, ANTLR3_UINT32 size);$/;"	m	struct:ANTLR3_STRING_FACTORY_struct
newRaw	/home/steffen/include/antlr3string.h	/^    pANTLR3_STRING  (*newRaw)	(struct ANTLR3_STRING_FACTORY_struct * factory);$/;"	m	struct:ANTLR3_STRING_FACTORY_struct
newSize	/home/steffen/include/antlr3string.h	/^    pANTLR3_STRING  (*newSize)	(struct ANTLR3_STRING_FACTORY_struct * factory, ANTLR3_UINT32 size);$/;"	m	struct:ANTLR3_STRING_FACTORY_struct
newStr	/home/steffen/include/antlr3string.h	/^    pANTLR3_STRING  (*newStr)	(struct ANTLR3_STRING_FACTORY_struct * factory, pANTLR3_UINT8 string);$/;"	m	struct:ANTLR3_STRING_FACTORY_struct
newStr8	/home/steffen/include/antlr3string.h	/^    pANTLR3_STRING  (*newStr8)	(struct ANTLR3_STRING_FACTORY_struct * factory, pANTLR3_UINT8 string);$/;"	m	struct:ANTLR3_STRING_FACTORY_struct
newToken	/home/steffen/include/antlr3commontoken.h	/^    pANTLR3_COMMON_TOKEN    (*newToken)	    (struct ANTLR3_TOKEN_FACTORY_struct * factory);$/;"	m	struct:ANTLR3_TOKEN_FACTORY_struct
newTree	/home/steffen/include/antlr3commontree.h	/^    pANTLR3_BASE_TREE	    (*newTree)		(struct ANTLR3_ARBORETUM_struct * factory);$/;"	m	struct:ANTLR3_ARBORETUM_struct
newUpNode	/home/steffen/include/antlr3commontreenodestream.h	/^	pANTLR3_BASE_TREE	(*newUpNode)				(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
newVector	/home/steffen/include/antlr3collections.h	/^	pANTLR3_VECTOR      (*newVector)    (struct ANTLR3_VECTOR_FACTORY_struct * factory);$/;"	m	struct:ANTLR3_VECTOR_FACTORY_struct
newlineChar	/home/steffen/include/antlr3input.h	/^    ANTLR3_UCHAR	newlineChar;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
next	/home/steffen/include/antlr3collections.h	/^	struct ANTLR3_TRIE_ENTRY_struct	* next;	    \/* Allows duplicate entries for same key in insertion order	*\/$/;"	m	struct:ANTLR3_TRIE_ENTRY_struct	typeref:struct:ANTLR3_TRIE_ENTRY_struct::ANTLR3_TRIE_ENTRY_struct
next	/home/steffen/include/antlr3collections.h	/^    int		(*next)	    (struct ANTLR3_HASH_ENUM_struct * en, pANTLR3_HASH_KEY *key, void ** data);$/;"	m	struct:ANTLR3_HASH_ENUM_struct
next	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE	(*next)						(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
next	/home/steffen/include/antlr3rewritestreams.h	/^	void *					(*next)					(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream);$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
nextChar	/home/steffen/include/antlr3input.h	/^    void	      * nextChar;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
nextChar	/home/steffen/include/antlr3input.h	/^    void	      * nextChar;$/;"	m	struct:ANTLR3_LEX_STATE_struct
nextEntry	/home/steffen/include/antlr3collections.h	/^    struct	ANTLR3_HASH_ENTRY_struct * nextEntry;$/;"	m	struct:ANTLR3_HASH_ENTRY_struct	typeref:struct:ANTLR3_HASH_ENTRY_struct::ANTLR3_HASH_ENTRY_struct
nextException	/home/steffen/include/antlr3exception.h	/^    struct ANTLR3_EXCEPTION_struct * nextException;$/;"	m	struct:ANTLR3_EXCEPTION_struct	typeref:struct:ANTLR3_EXCEPTION_struct::ANTLR3_EXCEPTION_struct
nextNode	/home/steffen/include/antlr3rewritestreams.h	/^    pANTLR3_BASE_TREE	(*nextNode)		(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream);$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
nextToken	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_UINT32	    nextToken;$/;"	m	struct:ANTLR3_TOKEN_FACTORY_struct
nextToken	/home/steffen/include/antlr3rewritestreams.h	/^    void *					(*nextToken)			(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream);$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
nextToken	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_COMMON_TOKEN    (*nextToken)(struct ANTLR3_TOKEN_SOURCE_struct * tokenSource);$/;"	m	struct:ANTLR3_TOKEN_SOURCE_struct
nextTree	/home/steffen/include/antlr3commontree.h	/^    ANTLR3_UINT32			nextTree;$/;"	m	struct:ANTLR3_ARBORETUM_struct
nextTree	/home/steffen/include/antlr3rewritestreams.h	/^    pANTLR3_BASE_TREE		(*nextTree)				(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream);$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
nextVector	/home/steffen/include/antlr3collections.h	/^        ANTLR3_UINT32        nextVector;$/;"	m	struct:ANTLR3_VECTOR_FACTORY_struct
nilNode	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *	   		 		(*nilNode)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
nilNode	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*nilNode)				(pANTLR3_DEBUG_EVENT_LISTENER delboy, pANTLR3_BASE_TREE t);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
nilStack	/home/steffen/include/antlr3commontree.h	/^    pANTLR3_STACK           nilStack;$/;"	m	struct:ANTLR3_ARBORETUM_struct
node	/home/steffen/include/antlr3exception.h	/^    void	* node;$/;"	m	struct:ANTLR3_EXCEPTION_struct
nodeStack	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_STACK				nodeStack;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
nodeStackSize	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_UINT32			  nodeStackSize;$/;"	m	struct:ANTLR3_TREE_WALK_STATE_struct
nodes	/home/steffen/include/antlr3commontreenodestream.h	/^	pANTLR3_VECTOR				nodes;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
numBits	/home/steffen/include/antlr3bitset.h	/^    ANTLR3_UINT32					(*numBits)	    (struct ANTLR3_BITSET_struct  * bitset);$/;"	m	struct:ANTLR3_BITSET_struct
object	oris_automationParser.c	/^object(poris_automationParser ctx)$/;"	f	file:
object	oris_automationParser.h	/^     (*object)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
oris_automationLexer	oris_automationLexer.h	/^typedef struct oris_automationLexer_Ctx_struct oris_automationLexer, * poris_automationLexer;$/;"	t	typeref:struct:oris_automationLexer_Ctx_struct
oris_automationLexerFree	oris_automationLexer.c	/^oris_automationLexerFree  (poris_automationLexer ctx)$/;"	f	file:
oris_automationLexerNew	oris_automationLexer.c	/^ANTLR3_API poris_automationLexer oris_automationLexerNew$/;"	f
oris_automationLexerNewSSD	oris_automationLexer.c	/^ANTLR3_API poris_automationLexer oris_automationLexerNewSSD$/;"	f
oris_automationLexerReset	oris_automationLexer.c	/^oris_automationLexerReset (poris_automationLexer ctx)$/;"	f	file:
oris_automationLexer_Ctx_struct	oris_automationLexer.h	/^struct oris_automationLexer_Ctx_struct$/;"	s
oris_automationParser	oris_automationParser.h	/^typedef struct oris_automationParser_Ctx_struct oris_automationParser, * poris_automationParser;$/;"	t	typeref:struct:oris_automationParser_Ctx_struct
oris_automationParserFree	oris_automationParser.c	/^ oris_automationParserFree(poris_automationParser ctx)$/;"	f	file:
oris_automationParserNew	oris_automationParser.c	/^oris_automationParserNew   (pANTLR3_COMMON_TOKEN_STREAM instream)$/;"	f
oris_automationParserNewSSD	oris_automationParser.c	/^oris_automationParserNewSSD   (pANTLR3_COMMON_TOKEN_STREAM instream, pANTLR3_RECOGNIZER_SHARED_STATE state)$/;"	f
oris_automationParserReset	oris_automationParser.c	/^oris_automationParserReset (poris_automationParser ctx)$/;"	f	file:
oris_automationParserTokenNames	oris_automationParser.c	/^pANTLR3_UINT8   oris_automationParserTokenNames[52+4]$/;"	v
oris_automationParser_Ctx_struct	oris_automationParser.h	/^struct oris_automationParser_Ctx_struct$/;"	s
oris_automationParser_action_return	oris_automationParser.h	/^    oris_automationParser_action_return;$/;"	t	typeref:struct:oris_automationParser_action_return_struct
oris_automationParser_action_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_action_return_struct$/;"	s
oris_automationParser_command_return	oris_automationParser.h	/^    oris_automationParser_command_return;$/;"	t	typeref:struct:oris_automationParser_command_return_struct
oris_automationParser_command_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_command_return_struct$/;"	s
oris_automationParser_configuration_return	oris_automationParser.h	/^    oris_automationParser_configuration_return;$/;"	t	typeref:struct:oris_automationParser_configuration_return_struct
oris_automationParser_configuration_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_configuration_return_struct$/;"	s
oris_automationParser_connection_return	oris_automationParser.h	/^    oris_automationParser_connection_return;$/;"	t	typeref:struct:oris_automationParser_connection_return_struct
oris_automationParser_connection_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_connection_return_struct$/;"	s
oris_automationParser_connection_state_return	oris_automationParser.h	/^    oris_automationParser_connection_state_return;$/;"	t	typeref:struct:oris_automationParser_connection_state_return_struct
oris_automationParser_connection_state_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_connection_state_return_struct$/;"	s
oris_automationParser_constant_return	oris_automationParser.h	/^    oris_automationParser_constant_return;$/;"	t	typeref:struct:oris_automationParser_constant_return_struct
oris_automationParser_constant_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_constant_return_struct$/;"	s
oris_automationParser_event_return	oris_automationParser.h	/^    oris_automationParser_event_return;$/;"	t	typeref:struct:oris_automationParser_event_return_struct
oris_automationParser_event_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_event_return_struct$/;"	s
oris_automationParser_expr_return	oris_automationParser.h	/^    oris_automationParser_expr_return;$/;"	t	typeref:struct:oris_automationParser_expr_return_struct
oris_automationParser_expr_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_expr_return_struct$/;"	s
oris_automationParser_factor_return	oris_automationParser.h	/^    oris_automationParser_factor_return;$/;"	t	typeref:struct:oris_automationParser_factor_return_struct
oris_automationParser_factor_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_factor_return_struct$/;"	s
oris_automationParser_function_return	oris_automationParser.h	/^    oris_automationParser_function_return;$/;"	t	typeref:struct:oris_automationParser_function_return_struct
oris_automationParser_function_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_function_return_struct$/;"	s
oris_automationParser_object_return	oris_automationParser.h	/^    oris_automationParser_object_return;$/;"	t	typeref:struct:oris_automationParser_object_return_struct
oris_automationParser_object_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_object_return_struct$/;"	s
oris_automationParser_record_return	oris_automationParser.h	/^    oris_automationParser_record_return;$/;"	t	typeref:struct:oris_automationParser_record_return_struct
oris_automationParser_record_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_record_return_struct$/;"	s
oris_automationParser_request_definition_return	oris_automationParser.h	/^    oris_automationParser_request_definition_return;$/;"	t	typeref:struct:oris_automationParser_request_definition_return_struct
oris_automationParser_request_definition_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_request_definition_return_struct$/;"	s
oris_automationParser_signedFactor_return	oris_automationParser.h	/^    oris_automationParser_signedFactor_return;$/;"	t	typeref:struct:oris_automationParser_signedFactor_return_struct
oris_automationParser_signedFactor_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_signedFactor_return_struct$/;"	s
oris_automationParser_simpleExpr_return	oris_automationParser.h	/^    oris_automationParser_simpleExpr_return;$/;"	t	typeref:struct:oris_automationParser_simpleExpr_return_struct
oris_automationParser_simpleExpr_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_simpleExpr_return_struct$/;"	s
oris_automationParser_statement_return	oris_automationParser.h	/^    oris_automationParser_statement_return;$/;"	t	typeref:struct:oris_automationParser_statement_return_struct
oris_automationParser_statement_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_statement_return_struct$/;"	s
oris_automationParser_table_ref_return	oris_automationParser.h	/^    oris_automationParser_table_ref_return;$/;"	t	typeref:struct:oris_automationParser_table_ref_return_struct
oris_automationParser_table_ref_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_table_ref_return_struct$/;"	s
oris_automationParser_template_definition_return	oris_automationParser.h	/^    oris_automationParser_template_definition_return;$/;"	t	typeref:struct:oris_automationParser_template_definition_return_struct
oris_automationParser_template_definition_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_template_definition_return_struct$/;"	s
oris_automationParser_term_return	oris_automationParser.h	/^    oris_automationParser_term_return;$/;"	t	typeref:struct:oris_automationParser_term_return_struct
oris_automationParser_term_return_struct	oris_automationParser.h	/^typedef struct oris_automationParser_term_return_struct$/;"	s
p	/home/steffen/include/antlr3commontreenodestream.h	/^	ANTLR3_INT32				p;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
p	/home/steffen/include/antlr3tokenstream.h	/^    ANTLR3_INT32	    p;$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
pANTLR3_ARBORETUM	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_ARBORETUM_struct						*pANTLR3_ARBORETUM;$/;"	t	typeref:struct:ANTLR3_ARBORETUM_struct
pANTLR3_BASE_RECOGNIZER	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_BASE_RECOGNIZER_struct				*pANTLR3_BASE_RECOGNIZER;$/;"	t	typeref:struct:ANTLR3_BASE_RECOGNIZER_struct
pANTLR3_BASE_TREE	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_BASE_TREE_struct						*pANTLR3_BASE_TREE;$/;"	t	typeref:struct:ANTLR3_BASE_TREE_struct
pANTLR3_BASE_TREE_ADAPTOR	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_BASE_TREE_ADAPTOR_struct				*pANTLR3_BASE_TREE_ADAPTOR;$/;"	t	typeref:struct:ANTLR3_BASE_TREE_ADAPTOR_struct
pANTLR3_BITSET	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_BITSET_struct							*pANTLR3_BITSET;$/;"	t	typeref:struct:ANTLR3_BITSET_struct
pANTLR3_BITSET_LIST	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_BITSET_LIST_struct					*pANTLR3_BITSET_LIST;$/;"	t	typeref:struct:ANTLR3_BITSET_LIST_struct
pANTLR3_BITWORD	/home/steffen/include/antlr3defs.h	/^typedef UINT64  ANTLR3_BITWORD, *pANTLR3_BITWORD;$/;"	t
pANTLR3_BITWORD	/home/steffen/include/antlr3defs.h	/^typedef uint64_t    ANTLR3_BITWORD, *pANTLR3_BITWORD;$/;"	t
pANTLR3_BOOLEAN	/home/steffen/include/antlr3defs.h	/^typedef	UINT8	ANTLR3_BOOLEAN, *pANTLR3_BOOLEAN;$/;"	t
pANTLR3_BOOLEAN	/home/steffen/include/antlr3defs.h	/^typedef	uint8_t	    ANTLR3_BOOLEAN, *pANTLR3_BOOLEAN;$/;"	t
pANTLR3_BOOLEAN	/home/steffen/include/antlr3defs.h	/^typedef uint32_t    ANTLR3_BOOLEAN, *pANTLR3_BOOLEAN;$/;"	t
pANTLR3_CHAR	/home/steffen/include/antlr3defs.h	/^typedef	INT32	ANTLR3_CHAR,	*pANTLR3_CHAR;$/;"	t
pANTLR3_CHAR	/home/steffen/include/antlr3defs.h	/^typedef int32_t	    ANTLR3_CHAR,    *pANTLR3_CHAR;$/;"	t
pANTLR3_CHAR	/home/steffen/include/antlr3defs.h	/^typedef int32_t     ANTLR3_CHAR,    *pANTLR3_CHAR;$/;"	t
pANTLR3_COMMON_TOKEN	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_COMMON_TOKEN_struct					*pANTLR3_COMMON_TOKEN;$/;"	t	typeref:struct:ANTLR3_COMMON_TOKEN_struct
pANTLR3_COMMON_TOKEN_STREAM	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_COMMON_TOKEN_STREAM_struct			*pANTLR3_COMMON_TOKEN_STREAM;$/;"	t	typeref:struct:ANTLR3_COMMON_TOKEN_STREAM_struct
pANTLR3_COMMON_TREE	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_COMMON_TREE_struct					*pANTLR3_COMMON_TREE;$/;"	t	typeref:struct:ANTLR3_COMMON_TREE_struct
pANTLR3_COMMON_TREE_ADAPTOR	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_COMMON_TREE_ADAPTOR_struct			*pANTLR3_COMMON_TREE_ADAPTOR;$/;"	t	typeref:struct:ANTLR3_COMMON_TREE_ADAPTOR_struct
pANTLR3_COMMON_TREE_NODE_STREAM	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_COMMON_TREE_NODE_STREAM_struct		*pANTLR3_COMMON_TREE_NODE_STREAM;$/;"	t	typeref:struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
pANTLR3_CYCLIC_DFA	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_CYCLIC_DFA_struct						*pANTLR3_CYCLIC_DFA;$/;"	t	typeref:struct:ANTLR3_CYCLIC_DFA_struct
pANTLR3_DEBUG_EVENT_LISTENER	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_DEBUG_EVENT_LISTENER_struct			*pANTLR3_DEBUG_EVENT_LISTENER;$/;"	t	typeref:struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
pANTLR3_EXCEPTION	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_EXCEPTION_struct						*pANTLR3_EXCEPTION;$/;"	t	typeref:struct:ANTLR3_EXCEPTION_struct
pANTLR3_HASH_BUCKET	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_HASH_BUCKET_struct					*pANTLR3_HASH_BUCKET;$/;"	t	typeref:struct:ANTLR3_HASH_BUCKET_struct
pANTLR3_HASH_ENTRY	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_HASH_ENTRY_struct						*pANTLR3_HASH_ENTRY;$/;"	t	typeref:struct:ANTLR3_HASH_ENTRY_struct
pANTLR3_HASH_ENUM	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_HASH_ENUM_struct						*pANTLR3_HASH_ENUM;$/;"	t	typeref:struct:ANTLR3_HASH_ENUM_struct
pANTLR3_HASH_KEY	/home/steffen/include/antlr3collections.h	/^} ANTLR3_HASH_KEY, *pANTLR3_HASH_KEY;$/;"	t	typeref:struct:ANTLR3_HASH_KEY_struct
pANTLR3_HASH_TABLE	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_HASH_TABLE_struct						*pANTLR3_HASH_TABLE;$/;"	t	typeref:struct:ANTLR3_HASH_TABLE_struct
pANTLR3_INPUT_STREAM	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_INPUT_STREAM_struct					*pANTLR3_INPUT_STREAM;$/;"	t	typeref:struct:ANTLR3_INPUT_STREAM_struct
pANTLR3_INT16	/home/steffen/include/antlr3defs.h	/^typedef	INT16	ANTLR3_INT16,	*pANTLR3_INT16;$/;"	t
pANTLR3_INT16	/home/steffen/include/antlr3defs.h	/^typedef int16_t	    ANTLR3_INT16,   *pANTLR3_INT16;$/;"	t
pANTLR3_INT32	/home/steffen/include/antlr3defs.h	/^typedef	INT32	ANTLR3_INT32,	*pANTLR3_INT32;$/;"	t
pANTLR3_INT32	/home/steffen/include/antlr3defs.h	/^typedef int32_t	    ANTLR3_INT32,   *pANTLR3_INT32;$/;"	t
pANTLR3_INT64	/home/steffen/include/antlr3defs.h	/^typedef	INT64	ANTLR3_INT64,	*pANTLR3_INT64;$/;"	t
pANTLR3_INT64	/home/steffen/include/antlr3defs.h	/^typedef int64_t	    ANTLR3_INT64,   *pANTLR3_INT64;$/;"	t
pANTLR3_INT8	/home/steffen/include/antlr3defs.h	/^typedef	INT8	ANTLR3_INT8,	*pANTLR3_INT8;$/;"	t
pANTLR3_INT8	/home/steffen/include/antlr3defs.h	/^typedef int8_t	    ANTLR3_INT8,    *pANTLR3_INT8;$/;"	t
pANTLR3_INT_STREAM	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_INT_STREAM_struct						*pANTLR3_INT_STREAM;$/;"	t	typeref:struct:ANTLR3_INT_STREAM_struct
pANTLR3_INT_TRIE	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_INT_TRIE_struct						*pANTLR3_INT_TRIE;$/;"	t	typeref:struct:ANTLR3_INT_TRIE_struct
pANTLR3_INT_TRIE_NODE	/home/steffen/include/antlr3collections.h	/^    ANTLR3_INT_TRIE_NODE, * pANTLR3_INT_TRIE_NODE;$/;"	t	typeref:struct:ANTLR3_INT_TRIE_NODE_struct
pANTLR3_LEXER	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_LEXER_struct							*pANTLR3_LEXER;$/;"	t	typeref:struct:ANTLR3_LEXER_struct
pANTLR3_LEX_STATE	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_LEX_STATE_struct						*pANTLR3_LEX_STATE;$/;"	t	typeref:struct:ANTLR3_LEX_STATE_struct
pANTLR3_LIST	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_LIST_struct							*pANTLR3_LIST;$/;"	t	typeref:struct:ANTLR3_LIST_struct
pANTLR3_PARSER	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_PARSER_struct							*pANTLR3_PARSER;$/;"	t	typeref:struct:ANTLR3_PARSER_struct
pANTLR3_PARSE_TREE	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_PARSE_TREE_struct						*pANTLR3_PARSE_TREE;$/;"	t	typeref:struct:ANTLR3_PARSE_TREE_struct
pANTLR3_RECOGNIZER_SHARED_STATE	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_RECOGNIZER_SHARED_STATE_struct		*pANTLR3_RECOGNIZER_SHARED_STATE;$/;"	t	typeref:struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
pANTLR3_REWRITE_RULE_ELEMENT_STREAM	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct	*pANTLR3_REWRITE_RULE_ELEMENT_STREAM;$/;"	t	typeref:struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
pANTLR3_REWRITE_RULE_NODE_STREAM	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct	*pANTLR3_REWRITE_RULE_NODE_STREAM;$/;"	t	typeref:struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
pANTLR3_REWRITE_RULE_SUBTREE_STREAM	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct	*pANTLR3_REWRITE_RULE_SUBTREE_STREAM;$/;"	t	typeref:struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
pANTLR3_REWRITE_RULE_TOKEN_STREAM	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct	*pANTLR3_REWRITE_RULE_TOKEN_STREAM;$/;"	t	typeref:struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
pANTLR3_SOCKADDRC	/home/steffen/include/antlr3defs.h	/^   typedef struct sockaddr	* pANTLR3_SOCKADDRC;                    \/\/ Type used for cast on accept()$/;"	t	typeref:struct:sockaddr
pANTLR3_SOCKADDRC	/home/steffen/include/antlr3defs.h	/^ typedef void *		    pANTLR3_SOCKADDRC;				\/\/ Type used for cast on accept()$/;"	t
pANTLR3_SOCKADDRC	/home/steffen/include/antlr3defs.h	/^typedef struct sockaddr		ANTLR3_SOCKADDRC, * pANTLR3_SOCKADDRC;	\/\/ Type used for cast on accept()$/;"	t	typeref:struct:
pANTLR3_SOCKADDRT	/home/steffen/include/antlr3defs.h	/^   typedef struct sockaddr_in   ANTLR3_SOCKADDRT, * pANTLR3_SOCKADDRT;	\/\/ Type used for socket address declaration$/;"	t	typeref:struct:
pANTLR3_SOCKADDRT	/home/steffen/include/antlr3defs.h	/^ typedef struct sockaddr_in ANTLR3_SOCKADDRT, * pANTLR3_SOCKADDRT;	\/\/ Type used for socket address declaration$/;"	t	typeref:struct:
pANTLR3_SOCKADDRT	/home/steffen/include/antlr3defs.h	/^typedef struct sockaddr_in	ANTLR3_SOCKADDRT, * pANTLR3_SOCKADDRT;	\/\/ Type used for socket address declaration$/;"	t	typeref:struct:
pANTLR3_STACK	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_STACK_struct							*pANTLR3_STACK;$/;"	t	typeref:struct:ANTLR3_STACK_struct
pANTLR3_STRING	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_STRING_struct							*pANTLR3_STRING;$/;"	t	typeref:struct:ANTLR3_STRING_struct
pANTLR3_STRING_FACTORY	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_STRING_FACTORY_struct					*pANTLR3_STRING_FACTORY;$/;"	t	typeref:struct:ANTLR3_STRING_FACTORY_struct
pANTLR3_TOKEN_FACTORY	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_TOKEN_FACTORY_struct					*pANTLR3_TOKEN_FACTORY;$/;"	t	typeref:struct:ANTLR3_TOKEN_FACTORY_struct
pANTLR3_TOKEN_SOURCE	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_TOKEN_SOURCE_struct					*pANTLR3_TOKEN_SOURCE;$/;"	t	typeref:struct:ANTLR3_TOKEN_SOURCE_struct
pANTLR3_TOKEN_STREAM	/home/steffen/include/antlr3interfaces.h	/^typedef	struct ANTLR3_TOKEN_STREAM_struct					*pANTLR3_TOKEN_STREAM;$/;"	t	typeref:struct:ANTLR3_TOKEN_STREAM_struct
pANTLR3_TOPO	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_TOPO_struct                                               *pANTLR3_TOPO;$/;"	t	typeref:struct:ANTLR3_TOPO_struct
pANTLR3_TREE_ADAPTOR	/home/steffen/include/antlr3basetreeadaptor.h	/^    ANTLR3_TREE_ADAPTOR, *pANTLR3_TREE_ADAPTOR;$/;"	t	typeref:struct:ANTLR3_BASE_TREE_ADAPTOR_struct
pANTLR3_TREE_NODE_STREAM	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_TREE_NODE_STREAM_struct				*pANTLR3_TREE_NODE_STREAM;$/;"	t	typeref:struct:ANTLR3_TREE_NODE_STREAM_struct
pANTLR3_TREE_PARSER	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_TREE_PARSER_struct					*pANTLR3_TREE_PARSER;$/;"	t	typeref:struct:ANTLR3_TREE_PARSER_struct
pANTLR3_TREE_WALK_STATE	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_TREE_WALK_STATE_struct				*pANTLR3_TREE_WALK_STATE;$/;"	t	typeref:struct:ANTLR3_TREE_WALK_STATE_struct
pANTLR3_TRIE_ENTRY	/home/steffen/include/antlr3collections.h	/^ANTLR3_TRIE_ENTRY, * pANTLR3_TRIE_ENTRY;$/;"	t	typeref:struct:ANTLR3_TRIE_ENTRY_struct
pANTLR3_UCHAR	/home/steffen/include/antlr3defs.h	/^typedef	UINT32	ANTLR3_UCHAR,	*pANTLR3_UCHAR;$/;"	t
pANTLR3_UCHAR	/home/steffen/include/antlr3defs.h	/^typedef uint32_t    ANTLR3_UCHAR,   *pANTLR3_UCHAR;$/;"	t
pANTLR3_UINT16	/home/steffen/include/antlr3defs.h	/^typedef	UINT16	ANTLR3_UINT16,	*pANTLR3_UINT16;$/;"	t
pANTLR3_UINT16	/home/steffen/include/antlr3defs.h	/^typedef uint16_t    ANTLR3_UINT16,  *pANTLR3_UINT16;$/;"	t
pANTLR3_UINT32	/home/steffen/include/antlr3defs.h	/^typedef	UINT32	ANTLR3_UINT32,	*pANTLR3_UINT32;$/;"	t
pANTLR3_UINT32	/home/steffen/include/antlr3defs.h	/^typedef uint32_t    ANTLR3_UINT32,  *pANTLR3_UINT32;$/;"	t
pANTLR3_UINT64	/home/steffen/include/antlr3defs.h	/^typedef	UINT64	ANTLR3_UINT64,	*pANTLR3_UINT64;$/;"	t
pANTLR3_UINT64	/home/steffen/include/antlr3defs.h	/^typedef uint64_t    ANTLR3_UINT64,  *pANTLR3_UINT64;$/;"	t
pANTLR3_UINT8	/home/steffen/include/antlr3defs.h	/^typedef	UINT8	ANTLR3_UINT8,	*pANTLR3_UINT8;$/;"	t
pANTLR3_UINT8	/home/steffen/include/antlr3defs.h	/^typedef uint8_t	    ANTLR3_UINT8,   *pANTLR3_UINT8;$/;"	t
pANTLR3_VECTOR	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_VECTOR_struct							*pANTLR3_VECTOR;$/;"	t	typeref:struct:ANTLR3_VECTOR_struct
pANTLR3_VECTOR_ELEMENT	/home/steffen/include/antlr3collections.h	/^    ANTLR3_VECTOR_ELEMENT, *pANTLR3_VECTOR_ELEMENT;$/;"	t	typeref:struct:ANTLR3_VECTOR_ELEMENT_struct
pANTLR3_VECTOR_FACTORY	/home/steffen/include/antlr3interfaces.h	/^typedef struct ANTLR3_VECTOR_FACTORY_struct					*pANTLR3_VECTOR_FACTORY;$/;"	t	typeref:struct:ANTLR3_VECTOR_FACTORY_struct
pLexer	oris_automationLexer.h	/^    pANTLR3_LEXER    pLexer;$/;"	m	struct:oris_automationLexer_Ctx_struct
pParser	oris_automationParser.h	/^    pANTLR3_PARSER   pParser;$/;"	m	struct:oris_automationParser_Ctx_struct
parent	/home/steffen/include/antlr3commontree.h	/^	pANTLR3_COMMON_TREE		  parent;$/;"	m	struct:ANTLR3_COMMON_TREE_struct
payload	/home/steffen/include/antlr3parsetree.h	/^    void    * payload;$/;"	m	struct:ANTLR3_PARSE_TREE_struct
peek	/home/steffen/include/antlr3collections.h	/^    void *			(*peek)	(struct ANTLR3_STACK_struct * stack);$/;"	m	struct:ANTLR3_STACK_struct
pools	/home/steffen/include/antlr3collections.h	/^        pANTLR3_VECTOR      *pools;$/;"	m	struct:ANTLR3_VECTOR_FACTORY_struct
pools	/home/steffen/include/antlr3commontoken.h	/^    pANTLR3_COMMON_TOKEN    *pools;$/;"	m	struct:ANTLR3_TOKEN_FACTORY_struct
pools	/home/steffen/include/antlr3commontree.h	/^    pANTLR3_COMMON_TREE    *pools;$/;"	m	struct:ANTLR3_ARBORETUM_struct
pop	/home/steffen/include/antlr3collections.h	/^    void *			(*pop)	(struct ANTLR3_STACK_struct * stack);$/;"	m	struct:ANTLR3_STACK_struct
pop	/home/steffen/include/antlr3commontreenodestream.h	/^	ANTLR3_INT32		(*pop)						(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
popCharStream	/home/steffen/include/antlr3lexer.h	/^    void			(*popCharStream)    (struct ANTLR3_LEXER_struct * lexer);$/;"	m	struct:ANTLR3_LEXER_struct
poris_automationLexer	oris_automationLexer.h	/^typedef struct oris_automationLexer_Ctx_struct oris_automationLexer, * poris_automationLexer;$/;"	t	typeref:struct:
poris_automationParser	oris_automationParser.h	/^typedef struct oris_automationParser_Ctx_struct oris_automationParser, * poris_automationParser;$/;"	t	typeref:struct:
port	/home/steffen/include/antlr3debugeventlistener.h	/^	ANTLR3_UINT32		port;$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
predict	/home/steffen/include/antlr3cyclicdfa.h	/^    ANTLR3_INT32			(*predict)					(void * ctx, pANTLR3_BASE_RECOGNIZER recognizer, pANTLR3_INT_STREAM is, struct ANTLR3_CYCLIC_DFA_struct * dfa);$/;"	m	struct:ANTLR3_CYCLIC_DFA_struct
previousNode	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE			previousNode;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
previousNode	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE		  previousNode;$/;"	m	struct:ANTLR3_TREE_WALK_STATE_struct
print	/home/steffen/include/antlr3exception.h	/^    void	    (*print)	    (struct ANTLR3_EXCEPTION_struct * ex);$/;"	m	struct:ANTLR3_EXCEPTION_struct
printable	/home/steffen/include/antlr3string.h	/^    pANTLR3_STRING  (*printable)(struct ANTLR3_STRING_FACTORY_struct * factory, pANTLR3_STRING string);$/;"	m	struct:ANTLR3_STRING_FACTORY_struct
ptr	/home/steffen/include/antlr3collections.h	/^		void		* ptr;$/;"	m	union:ANTLR3_TRIE_ENTRY_struct::__anon2
push	/home/steffen/include/antlr3collections.h	/^    ANTLR3_BOOLEAN  (*push)	(struct ANTLR3_STACK_struct * stack, void * element, void (ANTLR3_CDECL *freeptr)(void *));$/;"	m	struct:ANTLR3_STACK_struct
push	/home/steffen/include/antlr3commontreenodestream.h	/^	void				(*push)						(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns, ANTLR3_INT32 index);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
pushCharStream	/home/steffen/include/antlr3lexer.h	/^    void			(*pushCharStream)   (struct ANTLR3_LEXER_struct * lexer, pANTLR3_INPUT_STREAM input);$/;"	m	struct:ANTLR3_LEXER_struct
put	/home/steffen/include/antlr3collections.h	/^    ANTLR3_INT32		(*put)	    (struct ANTLR3_HASH_TABLE_struct * table, void * key, void * element, void (ANTLR3_CDECL *freeptr)(void *));$/;"	m	struct:ANTLR3_HASH_TABLE_struct
put	/home/steffen/include/antlr3collections.h	/^    ANTLR3_INT32    (*put)		(struct ANTLR3_LIST_struct * list, ANTLR3_INTKEY key, void * element, void (ANTLR3_CDECL *freeptr)(void *));$/;"	m	struct:ANTLR3_LIST_struct
putI	/home/steffen/include/antlr3collections.h	/^    ANTLR3_INT32		(*putI)	    (struct ANTLR3_HASH_TABLE_struct * table, ANTLR3_INTKEY key, void * element, void (ANTLR3_CDECL *freeptr)(void *));$/;"	m	struct:ANTLR3_HASH_TABLE_struct
rStreams	/home/steffen/include/antlr3recognizersharedstate.h	/^	pANTLR3_VECTOR		rStreams;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
rec	/home/steffen/include/antlr3lexer.h	/^    pANTLR3_BASE_RECOGNIZER	rec;$/;"	m	struct:ANTLR3_LEXER_struct
rec	/home/steffen/include/antlr3parser.h	/^    pANTLR3_BASE_RECOGNIZER			rec;$/;"	m	struct:ANTLR3_PARSER_struct
rec	/home/steffen/include/antlr3rewritestreams.h	/^	pANTLR3_BASE_RECOGNIZER		rec;$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
rec	/home/steffen/include/antlr3treeparser.h	/^    pANTLR3_BASE_RECOGNIZER		rec;$/;"	m	struct:ANTLR3_TREE_PARSER_struct
recognitionException	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*recognitionException)	(pANTLR3_DEBUG_EVENT_LISTENER delboy, pANTLR3_EXCEPTION e);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
record	oris_automationParser.c	/^record(poris_automationParser ctx)$/;"	f	file:
record	oris_automationParser.h	/^     (*record)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
recover	/home/steffen/include/antlr3baserecognizer.h	/^    void		(*recover)		    (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
recover	/home/steffen/include/antlr3lexer.h	/^    void		(*recover)	    (struct ANTLR3_LEXER_struct * lexer);$/;"	m	struct:ANTLR3_LEXER_struct
recoverFromMismatchedElement	/home/steffen/include/antlr3baserecognizer.h	/^    ANTLR3_BOOLEAN	(*recoverFromMismatchedElement)$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
recoverFromMismatchedSet	/home/steffen/include/antlr3baserecognizer.h	/^    void		* (*recoverFromMismatchedSet) (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer,$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
recoverFromMismatchedToken	/home/steffen/include/antlr3baserecognizer.h	/^    void		* (*recoverFromMismatchedToken)$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
release	/home/steffen/include/antlr3intstream.h	/^    void		    (*release)	    (struct ANTLR3_INT_STREAM_struct * intStream, ANTLR3_MARKER mark);$/;"	m	struct:ANTLR3_INT_STREAM_struct
remove	/home/steffen/include/antlr3bitset.h	/^    void							(*remove)	    (struct ANTLR3_BITSET_struct  * bitset, ANTLR3_UINT32 bit);$/;"	m	struct:ANTLR3_BITSET_struct
remove	/home/steffen/include/antlr3collections.h	/^    pANTLR3_HASH_ENTRY	(*remove)   (struct ANTLR3_HASH_TABLE_struct * table, void * key);$/;"	m	struct:ANTLR3_HASH_TABLE_struct
remove	/home/steffen/include/antlr3collections.h	/^    void *			(*remove)				(struct ANTLR3_VECTOR_struct * vector, ANTLR3_UINT32 entry);$/;"	m	struct:ANTLR3_VECTOR_struct
remove	/home/steffen/include/antlr3collections.h	/^    void *			(*remove)	(struct ANTLR3_LIST_struct * list, ANTLR3_INTKEY key);$/;"	m	struct:ANTLR3_LIST_struct
removeI	/home/steffen/include/antlr3collections.h	/^    pANTLR3_HASH_ENTRY	(*removeI)  (struct ANTLR3_HASH_TABLE_struct * table, ANTLR3_INTKEY key);$/;"	m	struct:ANTLR3_HASH_TABLE_struct
replaceChildren	/home/steffen/include/antlr3basetree.h	/^    void				(*replaceChildren)		(struct ANTLR3_BASE_TREE_struct * parent, ANTLR3_INT32 startChildIndex, ANTLR3_INT32 stopChildIndex, struct ANTLR3_BASE_TREE_struct * t);$/;"	m	struct:ANTLR3_BASE_TREE_struct
replaceChildren	/home/steffen/include/antlr3basetreeadaptor.h	/^	void					(*replaceChildren)		(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * parent, ANTLR3_INT32 startChildIndex, ANTLR3_INT32 stopChildIndex, void * t);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
replaceChildren	/home/steffen/include/antlr3commontreenodestream.h	/^	void						(*replaceChildren)				(struct ANTLR3_TREE_NODE_STREAM_struct * tns, pANTLR3_BASE_TREE parent, ANTLR3_INT32 startChildIndex, ANTLR3_INT32 stopChildIndex, pANTLR3_BASE_TREE t);$/;"	m	struct:ANTLR3_TREE_NODE_STREAM_struct
reportError	/home/steffen/include/antlr3baserecognizer.h	/^    void		(*reportError)		    (struct ANTLR3_BASE_RECOGNIZER_struct * recognizer);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
request_definition	oris_automationParser.c	/^request_definition(poris_automationParser ctx)$/;"	f	file:
request_definition	oris_automationParser.h	/^     (*request_definition)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
reset	/home/steffen/include/antlr3baserecognizer.h	/^    void		    (*reset)			(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer);$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
reset	/home/steffen/include/antlr3commontoken.h	/^    void                    (*reset)	    (struct ANTLR3_TOKEN_FACTORY_struct * factory);$/;"	m	struct:ANTLR3_TOKEN_FACTORY_struct
reset	/home/steffen/include/antlr3commontreenodestream.h	/^    void				(*reset)					(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
reset	/home/steffen/include/antlr3input.h	/^    void		(*reset)	(struct	ANTLR3_INPUT_STREAM_struct * input);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
reset	/home/steffen/include/antlr3rewritestreams.h	/^    void		(*reset)				(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream); $/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
reset	/home/steffen/include/antlr3tokenstream.h	/^    void                    (*reset)            (struct ANTLR3_COMMON_TOKEN_STREAM_struct * tokenStream);$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
reset	oris_automationLexer.h	/^    void            (*reset)  (struct oris_automationLexer_Ctx_struct * ctx);$/;"	m	struct:oris_automationLexer_Ctx_struct
reset	oris_automationParser.h	/^    void            (*reset)  (struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
returnVector	/home/steffen/include/antlr3collections.h	/^	void				(*returnVector)	(struct ANTLR3_VECTOR_FACTORY_struct * factory, pANTLR3_VECTOR vector);$/;"	m	struct:ANTLR3_VECTOR_FACTORY_struct
reuse	/home/steffen/include/antlr3basetree.h	/^    void                                (*reuse)                        (struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
reuse	/home/steffen/include/antlr3input.h	/^    void                (*reuse)        (struct	ANTLR3_INPUT_STREAM_struct * input, pANTLR3_UINT8 inString, ANTLR3_UINT32 size, pANTLR3_UINT8 name);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
rewind	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*rewind)			(pANTLR3_DEBUG_EVENT_LISTENER delboy, ANTLR3_MARKER marker);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
rewind	/home/steffen/include/antlr3intstream.h	/^    void		    (*rewind)	    (struct ANTLR3_INT_STREAM_struct * intStream, ANTLR3_MARKER marker);$/;"	m	struct:ANTLR3_INT_STREAM_struct
rewindLast	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*rewindLast)		(pANTLR3_DEBUG_EVENT_LISTENER delboy);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
rewindLast	/home/steffen/include/antlr3intstream.h	/^    void		    (*rewindLast)   (struct ANTLR3_INT_STREAM_struct * intStream);$/;"	m	struct:ANTLR3_INT_STREAM_struct
rightN	/home/steffen/include/antlr3collections.h	/^    struct ANTLR3_INT_TRIE_NODE_struct	    * rightN;	\/**< Pointer to the right node from here when sKey & bitNum, = 1				*\/$/;"	m	struct:ANTLR3_INT_TRIE_NODE_struct	typeref:struct:ANTLR3_INT_TRIE_NODE_struct::ANTLR3_INT_TRIE_NODE_struct
root	/home/steffen/include/antlr3collections.h	/^    pANTLR3_INT_TRIE_NODE   root;			\/* Root node of this integer trie					*\/$/;"	m	struct:ANTLR3_INT_TRIE_struct
root	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE			root;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
ruleMemo	/home/steffen/include/antlr3recognizersharedstate.h	/^    pANTLR3_INT_TRIE	ruleMemo;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
ruleName	/home/steffen/include/antlr3exception.h	/^    void	    * ruleName;$/;"	m	struct:ANTLR3_EXCEPTION_struct
rulePostProcessing	/home/steffen/include/antlr3basetreeadaptor.h	/^    void *	   			 	(*rulePostProcessing)	(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * root);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
sKey	/home/steffen/include/antlr3collections.h	/^		pANTLR3_UINT8   sKey;	\/**< Used if type is ANTLR3_HASH_TYPE_STR			*\/$/;"	m	union:ANTLR3_HASH_KEY_struct::__anon1
savedIndex	/home/steffen/include/antlr3basetree.h	/^    ANTLR3_MARKER   savedIndex;$/;"	m	struct:ANTLR3_BASE_TREE_struct
seek	/home/steffen/include/antlr3intstream.h	/^    void		    (*seek)	    (struct ANTLR3_INT_STREAM_struct * intStream, ANTLR3_MARKER index);$/;"	m	struct:ANTLR3_INT_STREAM_struct
semanticPredicate	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*semanticPredicate)	(pANTLR3_DEBUG_EVENT_LISTENER delboy, ANTLR3_BOOLEAN result, const char * predicate);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
set	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32   (*set)					(struct ANTLR3_VECTOR_struct * vector, ANTLR3_UINT32 entry, void * element, void (ANTLR3_CDECL *freeptr)(void *), ANTLR3_BOOLEAN freeExisting);$/;"	m	struct:ANTLR3_VECTOR_struct
set	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8   (*set)	(struct ANTLR3_STRING_struct * string, const char * chars);$/;"	m	struct:ANTLR3_STRING_struct
set8	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8   (*set8)	(struct ANTLR3_STRING_struct * string, const char * chars);$/;"	m	struct:ANTLR3_STRING_struct
setChannel	/home/steffen/include/antlr3commontoken.h	/^    void	    (*setChannel)	(struct ANTLR3_COMMON_TOKEN_struct * token, ANTLR3_UINT32 channel);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
setCharPositionInLine	/home/steffen/include/antlr3commontoken.h	/^    void	    (*setCharPositionInLine)	(struct ANTLR3_COMMON_TOKEN_struct * token, ANTLR3_INT32 pos);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
setCharPositionInLine	/home/steffen/include/antlr3input.h	/^    void		(*setCharPositionInLine)  (struct ANTLR3_INPUT_STREAM_struct * input, ANTLR3_UINT32 position);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
setCharStream	/home/steffen/include/antlr3lexer.h	/^    void			(*setCharStream)    (struct ANTLR3_LEXER_struct * lexer, pANTLR3_INPUT_STREAM input);$/;"	m	struct:ANTLR3_LEXER_struct
setChild	/home/steffen/include/antlr3basetree.h	/^    void				(*setChild)			(struct ANTLR3_BASE_TREE_struct * tree, ANTLR3_UINT32 i, void * child);$/;"	m	struct:ANTLR3_BASE_TREE_struct
setChild	/home/steffen/include/antlr3basetreeadaptor.h	/^    void					(*setChild)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t, ANTLR3_UINT32 i, void * child);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
setChildIndex	/home/steffen/include/antlr3basetree.h	/^    void    				(*setChildIndex)		(struct ANTLR3_BASE_TREE_struct * tree, ANTLR3_INT32 );$/;"	m	struct:ANTLR3_BASE_TREE_struct
setChildIndex	/home/steffen/include/antlr3basetreeadaptor.h	/^    void				    (*setChildIndex)		(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t, ANTLR3_UINT32 i);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
setDebugEventListener	/home/steffen/include/antlr3basetreeadaptor.h	/^	void					(*setDebugEventListener)(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, pANTLR3_DEBUG_EVENT_LISTENER debugger);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
setDebugListener	/home/steffen/include/antlr3parser.h	/^	void					(*setDebugListener)	(struct ANTLR3_PARSER_struct	* parser, pANTLR3_DEBUG_EVENT_LISTENER dbg);$/;"	m	struct:ANTLR3_PARSER_struct
setDebugListener	/home/steffen/include/antlr3tokenstream.h	/^    void		    (*setDebugListener)	    (struct ANTLR3_TOKEN_STREAM_struct * tokenStream, pANTLR3_DEBUG_EVENT_LISTENER debugger);$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
setInputStream	/home/steffen/include/antlr3commontoken.h	/^    void		    (*setInputStream)	(struct ANTLR3_TOKEN_FACTORY_struct * factory, pANTLR3_INPUT_STREAM input);$/;"	m	struct:ANTLR3_TOKEN_FACTORY_struct
setLine	/home/steffen/include/antlr3commontoken.h	/^    void	    (*setLine)(struct ANTLR3_COMMON_TOKEN_struct * token, ANTLR3_UINT32 line);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
setLine	/home/steffen/include/antlr3input.h	/^    void		(*setLine)		  (struct ANTLR3_INPUT_STREAM_struct * input, ANTLR3_UINT32 line);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
setParent	/home/steffen/include/antlr3basetree.h	/^    void    				(*setParent)			(struct ANTLR3_BASE_TREE_struct * tree, struct ANTLR3_BASE_TREE_struct * parent);$/;"	m	struct:ANTLR3_BASE_TREE_struct
setParent	/home/steffen/include/antlr3basetreeadaptor.h	/^    void					(*setParent)			(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * child, void * parent);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
setS	/home/steffen/include/antlr3string.h	/^    pANTLR3_UINT8   (*setS)	(struct ANTLR3_STRING_struct * string, struct ANTLR3_STRING_struct * chars);$/;"	m	struct:ANTLR3_STRING_struct
setStartIndex	/home/steffen/include/antlr3commontoken.h	/^    void			(*setStartIndex)	(struct ANTLR3_COMMON_TOKEN_struct * token, ANTLR3_MARKER index);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
setStopIndex	/home/steffen/include/antlr3commontoken.h	/^    void			(*setStopIndex)	(struct ANTLR3_COMMON_TOKEN_struct * token, ANTLR3_MARKER index);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
setText	/home/steffen/include/antlr3basetreeadaptor.h	/^    void					(*setText)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, pANTLR3_STRING t);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
setText	/home/steffen/include/antlr3commontoken.h	/^    void	    (*setText)(struct ANTLR3_COMMON_TOKEN_struct * token, pANTLR3_STRING text);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
setText8	/home/steffen/include/antlr3basetreeadaptor.h	/^    void					(*setText8)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, pANTLR3_UINT8 t);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
setText8	/home/steffen/include/antlr3commontoken.h	/^    void	    (*setText8)(struct ANTLR3_COMMON_TOKEN_struct * token, pANTLR3_UINT8 text);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
setTokenBoundaries	/home/steffen/include/antlr3basetreeadaptor.h	/^    void					(*setTokenBoundaries)	(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t, pANTLR3_COMMON_TOKEN startToken, pANTLR3_COMMON_TOKEN stopToken);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
setTokenBoundaries	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*setTokenBoundaries)	(pANTLR3_DEBUG_EVENT_LISTENER delboy, pANTLR3_BASE_TREE t, ANTLR3_MARKER tokenStartIndex, ANTLR3_MARKER tokenStopIndex);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
setTokenIndex	/home/steffen/include/antlr3commontoken.h	/^    void			(*setTokenIndex)	(struct ANTLR3_COMMON_TOKEN_struct * token, ANTLR3_MARKER);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
setTokenSource	/home/steffen/include/antlr3tokenstream.h	/^    void		    (*setTokenSource)	(struct ANTLR3_TOKEN_STREAM_struct * tokenStream,$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
setTokenStream	/home/steffen/include/antlr3parser.h	/^    void					(*setTokenStream)	(struct ANTLR3_PARSER_struct	* parser, pANTLR3_TOKEN_STREAM);$/;"	m	struct:ANTLR3_PARSER_struct
setTokenTypeChannel	/home/steffen/include/antlr3tokenstream.h	/^    void		    (*setTokenTypeChannel)  (struct ANTLR3_COMMON_TOKEN_STREAM_struct * tokenStream, $/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
setTreeNodeStream	/home/steffen/include/antlr3treeparser.h	/^    void			    (*setTreeNodeStream)    (struct ANTLR3_TREE_PARSER_struct * parser, pANTLR3_COMMON_TREE_NODE_STREAM input);$/;"	m	struct:ANTLR3_TREE_PARSER_struct
setType	/home/steffen/include/antlr3basetreeadaptor.h	/^    void					(*setType)				(struct ANTLR3_BASE_TREE_ADAPTOR_struct * adaptor, void * t, ANTLR3_UINT32 type);$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
setType	/home/steffen/include/antlr3commontoken.h	/^    void	    (*setType)(struct ANTLR3_COMMON_TOKEN_struct * token, ANTLR3_UINT32 ttype);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
setUcaseLA	/home/steffen/include/antlr3input.h	/^    void		(*setUcaseLA)		(pANTLR3_INPUT_STREAM input, ANTLR3_BOOLEAN flag);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
setUniqueNavigationNodes	/home/steffen/include/antlr3commontreenodestream.h	/^    void						(*setUniqueNavigationNodes)		(struct ANTLR3_TREE_NODE_STREAM_struct * tns, ANTLR3_BOOLEAN uniqueNavigationNodes);$/;"	m	struct:ANTLR3_TREE_NODE_STREAM_struct
signedFactor	oris_automationParser.c	/^signedFactor(poris_automationParser ctx)$/;"	f	file:
signedFactor	oris_automationParser.h	/^     (*signedFactor)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
simpleExpr	oris_automationParser.c	/^simpleExpr(poris_automationParser ctx)$/;"	f	file:
simpleExpr	oris_automationParser.h	/^     (*simpleExpr)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
singleElement	/home/steffen/include/antlr3rewritestreams.h	/^    void			* singleElement;$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
size	/home/steffen/include/antlr3bitset.h	/^    ANTLR3_UINT32					(*size)			(struct ANTLR3_BITSET_struct  * bitset);$/;"	m	struct:ANTLR3_BITSET_struct
size	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32		(*size)	    (struct ANTLR3_HASH_TABLE_struct * table);$/;"	m	struct:ANTLR3_HASH_TABLE_struct
size	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32   (*size)					(struct ANTLR3_VECTOR_struct * vector);$/;"	m	struct:ANTLR3_VECTOR_struct
size	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32   (*size)		(struct ANTLR3_LIST_struct * list);$/;"	m	struct:ANTLR3_LIST_struct
size	/home/steffen/include/antlr3collections.h	/^    ANTLR3_UINT32   (*size)	(struct ANTLR3_STACK_struct * stack);$/;"	m	struct:ANTLR3_STACK_struct
size	/home/steffen/include/antlr3input.h	/^    ANTLR3_UINT32	(*size)		(struct ANTLR3_INPUT_STREAM_struct * input);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
size	/home/steffen/include/antlr3intstream.h	/^    ANTLR3_UINT32	    (*size)	    (struct ANTLR3_INT_STREAM_struct * intStream);$/;"	m	struct:ANTLR3_INT_STREAM_struct
size	/home/steffen/include/antlr3rewritestreams.h	/^    ANTLR3_UINT32	(*size)				(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream);$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
size	/home/steffen/include/antlr3string.h	/^    ANTLR3_UINT32		size;$/;"	m	struct:ANTLR3_STRING_struct
sizeBuf	/home/steffen/include/antlr3input.h	/^    ANTLR3_UINT32	sizeBuf;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
sizeHint	/home/steffen/include/antlr3recognizersharedstate.h	/^    ANTLR3_UINT32	sizeHint;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
skipToken	/home/steffen/include/antlr3tokenstream.h	/^	ANTLR3_COMMON_TOKEN		skipToken;$/;"	m	struct:ANTLR3_TOKEN_SOURCE_struct
socket	/home/steffen/include/antlr3debugeventlistener.h	/^	SOCKET				socket;$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
sortToArray	/home/steffen/include/antlr3collections.h	/^    pANTLR3_UINT32  (*sortToArray)      (struct ANTLR3_TOPO_struct * topo);$/;"	m	struct:ANTLR3_TOPO_struct
sortVector	/home/steffen/include/antlr3collections.h	/^    void            (*sortVector)       (struct ANTLR3_TOPO_struct * topo, pANTLR3_VECTOR v);$/;"	m	struct:ANTLR3_TOPO_struct
sorted	/home/steffen/include/antlr3collections.h	/^    pANTLR3_UINT32    sorted;$/;"	m	struct:ANTLR3_TOPO_struct
sourceExhausted	/home/steffen/include/antlr3convertutf.h	/^	sourceExhausted,	\/* partial character in source, but hit end *\/$/;"	e	enum:__anon4
sourceIllegal	/home/steffen/include/antlr3convertutf.h	/^	sourceIllegal		\/* source sequence is illegal\/malformed *\/$/;"	e	enum:__anon4
special	/home/steffen/include/antlr3cyclicdfa.h	/^    const ANTLR3_INT32		    * const special;$/;"	m	struct:ANTLR3_CYCLIC_DFA_struct
specialStateTransition	/home/steffen/include/antlr3cyclicdfa.h	/^    ANTLR3_INT32			(*specialStateTransition)   (void * ctx, pANTLR3_BASE_RECOGNIZER recognizer, pANTLR3_INT_STREAM is, struct ANTLR3_CYCLIC_DFA_struct * dfa, ANTLR3_INT32 s);$/;"	m	struct:ANTLR3_CYCLIC_DFA_struct
specialTransition	/home/steffen/include/antlr3cyclicdfa.h	/^    ANTLR3_INT32			(*specialTransition)	    (void * ctx, pANTLR3_BASE_RECOGNIZER recognizer, pANTLR3_INT_STREAM is, struct ANTLR3_CYCLIC_DFA_struct * dfa, ANTLR3_INT32 s);$/;"	m	struct:ANTLR3_CYCLIC_DFA_struct
start	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_MARKER   start;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_action_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_command_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_configuration_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_connection_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_connection_state_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_constant_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_event_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_expr_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_factor_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_function_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_object_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_record_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_request_definition_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_signedFactor_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_simpleExpr_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_statement_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_table_ref_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_template_definition_return_struct
start	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    start;$/;"	m	struct:oris_automationParser_term_return_struct
startIndex	/home/steffen/include/antlr3commontree.h	/^    ANTLR3_MARKER			  startIndex;$/;"	m	struct:ANTLR3_COMMON_TREE_struct
state	/home/steffen/include/antlr3baserecognizer.h	/^	pANTLR3_RECOGNIZER_SHARED_STATE	state;$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
state	/home/steffen/include/antlr3exception.h	/^    ANTLR3_UINT32   state;$/;"	m	struct:ANTLR3_EXCEPTION_struct
statement	oris_automationParser.c	/^statement(poris_automationParser ctx)$/;"	f	file:
statement	oris_automationParser.h	/^     (*statement)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
stop	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_MARKER   stop;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_action_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_command_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_configuration_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_connection_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_connection_state_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_constant_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_event_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_expr_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_factor_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_function_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_object_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_record_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_request_definition_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_signedFactor_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_simpleExpr_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_statement_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_table_ref_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_template_definition_return_struct
stop	oris_automationParser.h	/^    pANTLR3_COMMON_TOKEN    stop;$/;"	m	struct:oris_automationParser_term_return_struct
stopIndex	/home/steffen/include/antlr3commontree.h	/^    ANTLR3_MARKER			  stopIndex;$/;"	m	struct:ANTLR3_COMMON_TREE_struct
strFactory	/home/steffen/include/antlr3basetree.h	/^    pANTLR3_STRING_FACTORY strFactory;$/;"	m	struct:ANTLR3_BASE_TREE_struct
strFactory	/home/steffen/include/antlr3basetreeadaptor.h	/^    pANTLR3_STRING_FACTORY			strFactory;$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
strFactory	/home/steffen/include/antlr3commontoken.h	/^	pANTLR3_STRING_FACTORY	strFactory;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
strFactory	/home/steffen/include/antlr3input.h	/^    pANTLR3_STRING_FACTORY  strFactory;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
strFactory	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_STRING_FACTORY  strFactory;$/;"	m	struct:ANTLR3_TOKEN_SOURCE_struct
streamName	/home/steffen/include/antlr3exception.h	/^    pANTLR3_STRING streamName;$/;"	m	struct:ANTLR3_EXCEPTION_struct
streamName	/home/steffen/include/antlr3intstream.h	/^    pANTLR3_STRING	      streamName;$/;"	m	struct:ANTLR3_INT_STREAM_struct
streams	/home/steffen/include/antlr3recognizersharedstate.h	/^    pANTLR3_STACK		streams;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
strictConversion	/home/steffen/include/antlr3convertutf.h	/^	strictConversion = 0,$/;"	e	enum:__anon5
stringFactory	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_STRING_FACTORY		stringFactory;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
strings	/home/steffen/include/antlr3string.h	/^    pANTLR3_VECTOR    strings;$/;"	m	struct:ANTLR3_STRING_FACTORY_struct
subString	/home/steffen/include/antlr3string.h	/^					(*subString)    (struct ANTLR3_STRING_struct * string, ANTLR3_UINT32 startIndex, ANTLR3_UINT32 endIndex);$/;"	m	struct:ANTLR3_STRING_struct	typeref:struct:ANTLR3_STRING_struct::subString
substr	/home/steffen/include/antlr3input.h	/^    pANTLR3_STRING	(*substr)	(struct ANTLR3_INPUT_STREAM_struct * input, ANTLR3_MARKER start, ANTLR3_MARKER stop);$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
super	/home/steffen/include/antlr3baserecognizer.h	/^    void	      * super;$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
super	/home/steffen/include/antlr3basetree.h	/^    void    *	    super;$/;"	m	struct:ANTLR3_BASE_TREE_struct
super	/home/steffen/include/antlr3basetreeadaptor.h	/^    void							* super;$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
super	/home/steffen/include/antlr3commontree.h	/^    void					* super;$/;"	m	struct:ANTLR3_COMMON_TREE_struct
super	/home/steffen/include/antlr3commontreeadaptor.h	/^    void    * super;$/;"	m	struct:ANTLR3_COMMON_TREE_ADAPTOR_struct
super	/home/steffen/include/antlr3commontreenodestream.h	/^    void						* super;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
super	/home/steffen/include/antlr3input.h	/^    void	      * super;$/;"	m	struct:ANTLR3_INPUT_STREAM_struct
super	/home/steffen/include/antlr3intstream.h	/^    void		    * super;$/;"	m	struct:ANTLR3_INT_STREAM_struct
super	/home/steffen/include/antlr3lexer.h	/^    void	* super;$/;"	m	struct:ANTLR3_LEXER_struct
super	/home/steffen/include/antlr3parser.h	/^    void			* super;$/;"	m	struct:ANTLR3_PARSER_struct
super	/home/steffen/include/antlr3parsetree.h	/^    void    * super;$/;"	m	struct:ANTLR3_PARSE_TREE_struct
super	/home/steffen/include/antlr3tokenstream.h	/^    void		    * super;$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
super	/home/steffen/include/antlr3tokenstream.h	/^    void		    * super;$/;"	m	struct:ANTLR3_TOKEN_SOURCE_struct
super	/home/steffen/include/antlr3tokenstream.h	/^    void	      * super;$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
super	/home/steffen/include/antlr3treeparser.h	/^    void    * super;$/;"	m	struct:ANTLR3_TREE_PARSER_struct
swap	/home/steffen/include/antlr3collections.h	/^    ANTLR3_BOOLEAN              (*swap)                 (struct ANTLR3_VECTOR_struct *, ANTLR3_UINT32 entry1, ANTLR3_UINT32 entry2);$/;"	m	struct:ANTLR3_VECTOR_struct
synpred	/home/steffen/include/antlr3baserecognizer.h	/^    ANTLR3_BOOLEAN	(*synpred)			(	struct ANTLR3_BASE_RECOGNIZER_struct * recognizer,  void * ctx,$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
table	/home/steffen/include/antlr3collections.h	/^    pANTLR3_HASH_TABLE	table;$/;"	m	struct:ANTLR3_HASH_ENUM_struct
table	/home/steffen/include/antlr3collections.h	/^    pANTLR3_HASH_TABLE	table;$/;"	m	struct:ANTLR3_LIST_struct
table_ref	oris_automationParser.c	/^table_ref(poris_automationParser ctx)$/;"	f	file:
table_ref	oris_automationParser.h	/^     (*table_ref)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
tail	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_UINT32				tail;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
tail	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_UINT32			  tail;$/;"	m	struct:ANTLR3_TREE_WALK_STATE_struct
targetExhausted	/home/steffen/include/antlr3convertutf.h	/^	targetExhausted,	\/* insuff. room in target for conversion *\/$/;"	e	enum:__anon4
template_definition	oris_automationParser.c	/^template_definition(poris_automationParser ctx)$/;"	f	file:
template_definition	oris_automationParser.h	/^     (*template_definition)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
term	oris_automationParser.c	/^term(poris_automationParser ctx)$/;"	f	file:
term	oris_automationParser.h	/^     (*term)	(struct oris_automationParser_Ctx_struct * ctx);$/;"	m	struct:oris_automationParser_Ctx_struct
terminate	/home/steffen/include/antlr3debugeventlistener.h	/^	void			(*terminate)			(pANTLR3_DEBUG_EVENT_LISTENER delboy);$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
text	/home/steffen/include/antlr3commontoken.h	/^		pANTLR3_STRING	text;$/;"	m	union:ANTLR3_COMMON_TOKEN_struct::__anon3
text	/home/steffen/include/antlr3recognizersharedstate.h	/^    pANTLR3_STRING		text;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
textState	/home/steffen/include/antlr3commontoken.h	/^	ANTLR3_UINT32	textState;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
thisPool	/home/steffen/include/antlr3collections.h	/^        ANTLR3_INT32         thisPool;$/;"	m	struct:ANTLR3_VECTOR_FACTORY_struct
thisPool	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_INT32	    thisPool;$/;"	m	struct:ANTLR3_TOKEN_FACTORY_struct
thisPool	/home/steffen/include/antlr3commontree.h	/^    ANTLR3_INT32			thisPool;$/;"	m	struct:ANTLR3_ARBORETUM_struct
tnstream	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_TREE_NODE_STREAM	tnstream;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
to8	/home/steffen/include/antlr3string.h	/^					(*to8)	    (struct ANTLR3_STRING_struct * string);$/;"	m	struct:ANTLR3_STRING_struct	typeref:struct:ANTLR3_STRING_struct::to8
toInt32	/home/steffen/include/antlr3string.h	/^    ANTLR3_INT32	(*toInt32)	    (struct ANTLR3_STRING_struct * string);$/;"	m	struct:ANTLR3_STRING_struct
toIntList	/home/steffen/include/antlr3bitset.h	/^    pANTLR3_INT32					(*toIntList)    (struct ANTLR3_BITSET_struct  * bitset);$/;"	m	struct:ANTLR3_BITSET_struct
toString	/home/steffen/include/antlr3basetree.h	/^    pANTLR3_STRING			(*toString)			(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
toString	/home/steffen/include/antlr3commontoken.h	/^    pANTLR3_STRING  (*toString)		(struct ANTLR3_COMMON_TOKEN_struct * token);$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
toString	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_STRING				(*toString)						(struct ANTLR3_TREE_NODE_STREAM_struct * tns);$/;"	m	struct:ANTLR3_TREE_NODE_STREAM_struct
toString	/home/steffen/include/antlr3parsetree.h	/^    pANTLR3_STRING	    (*toString)	(struct ANTLR3_PARSE_TREE_struct * payload);$/;"	m	struct:ANTLR3_PARSE_TREE_struct
toString	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_STRING	    (*toString)		(struct ANTLR3_TOKEN_STREAM_struct * tokenStream);$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
toStringSS	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_STRING				(*toStringSS)					(struct ANTLR3_TREE_NODE_STREAM_struct * tns, pANTLR3_BASE_TREE start, pANTLR3_BASE_TREE stop);$/;"	m	struct:ANTLR3_TREE_NODE_STREAM_struct
toStringSS	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_STRING	    (*toStringSS)	(struct ANTLR3_TOKEN_STREAM_struct * tokenStream, ANTLR3_UINT32 start, ANTLR3_UINT32 stop);$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
toStringTT	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_STRING	    (*toStringTT)	(struct ANTLR3_TOKEN_STREAM_struct * tokenStream, pANTLR3_COMMON_TOKEN start, pANTLR3_COMMON_TOKEN stop);$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
toStringTree	/home/steffen/include/antlr3basetree.h	/^    pANTLR3_STRING			(*toStringTree)			(struct ANTLR3_BASE_TREE_struct * tree);$/;"	m	struct:ANTLR3_BASE_TREE_struct
toStringWork	/home/steffen/include/antlr3commontreenodestream.h	/^    void						(*toStringWork)					(struct ANTLR3_TREE_NODE_STREAM_struct * tns, pANTLR3_BASE_TREE start, pANTLR3_BASE_TREE stop, pANTLR3_STRING buf);$/;"	m	struct:ANTLR3_TREE_NODE_STREAM_struct
toStrings	/home/steffen/include/antlr3baserecognizer.h	/^    pANTLR3_HASH_TABLE	(*toStrings)			(struct ANTLR3_BASE_RECOGNIZER_struct * recognizer,$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
toTree	/home/steffen/include/antlr3rewritestreams.h	/^    pANTLR3_BASE_TREE	(*toTree)		(struct ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct * stream, void * el);$/;"	m	struct:ANTLR3_REWRITE_RULE_ELEMENT_STREAM_struct
toUTF8	/home/steffen/include/antlr3string.h	/^					(*toUTF8)	(struct ANTLR3_STRING_struct * string);$/;"	m	struct:ANTLR3_STRING_struct	typeref:struct:ANTLR3_STRING_struct::toUTF8
tokFactory	/home/steffen/include/antlr3recognizersharedstate.h	/^    pANTLR3_TOKEN_FACTORY	tokFactory;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
tokSource	/home/steffen/include/antlr3recognizersharedstate.h	/^    pANTLR3_TOKEN_SOURCE	tokSource;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
tokText	/home/steffen/include/antlr3commontoken.h	/^		tokText;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct	typeref:union:ANTLR3_COMMON_TOKEN_struct::__anon3
token	/home/steffen/include/antlr3commontree.h	/^    pANTLR3_COMMON_TOKEN      token;$/;"	m	struct:ANTLR3_COMMON_TREE_struct
token	/home/steffen/include/antlr3exception.h	/^    void	* token;$/;"	m	struct:ANTLR3_EXCEPTION_struct
token	/home/steffen/include/antlr3recognizersharedstate.h	/^    pANTLR3_COMMON_TOKEN	token;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
tokenFactory	/home/steffen/include/antlr3basetreeadaptor.h	/^    pANTLR3_TOKEN_FACTORY			tokenFactory;$/;"	m	struct:ANTLR3_BASE_TREE_ADAPTOR_struct
tokenNames	/home/steffen/include/antlr3recognizersharedstate.h	/^    pANTLR3_UINT8	* tokenNames;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
tokenSource	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_TOKEN_SOURCE    tokenSource;$/;"	m	struct:ANTLR3_TOKEN_STREAM_struct
tokenStartCharIndex	/home/steffen/include/antlr3recognizersharedstate.h	/^    ANTLR3_MARKER		tokenStartCharIndex;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
tokenStartCharPositionInLine	/home/steffen/include/antlr3recognizersharedstate.h	/^    ANTLR3_INT32		tokenStartCharPositionInLine;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
tokenStartLine	/home/steffen/include/antlr3recognizersharedstate.h	/^    ANTLR3_INT32		tokenStartLine;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
tokenString	/home/steffen/include/antlr3debugeventlistener.h	/^	pANTLR3_STRING		tokenString;$/;"	m	struct:ANTLR3_DEBUG_EVENT_LISTENER_struct
tokens	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_VECTOR	    tokens;$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
top	/home/steffen/include/antlr3collections.h	/^    void *	    top;$/;"	m	struct:ANTLR3_STACK_struct
transition	/home/steffen/include/antlr3cyclicdfa.h	/^    const ANTLR3_INT32			* const * const transition;$/;"	m	struct:ANTLR3_CYCLIC_DFA_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_action_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_command_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_configuration_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_connection_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_connection_state_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_constant_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_event_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_expr_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_factor_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_function_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_object_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_record_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_request_definition_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_signedFactor_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_simpleExpr_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_statement_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_table_ref_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_template_definition_return_struct
tree	oris_automationParser.h	/^    pANTLR3_BASE_TREE	tree;$/;"	m	struct:oris_automationParser_term_return_struct
true	/home/steffen/include/antlr3convertutf.h	122;"	d
tstream	/home/steffen/include/antlr3parser.h	/^    pANTLR3_TOKEN_STREAM			tstream;$/;"	m	struct:ANTLR3_PARSER_struct
tstream	/home/steffen/include/antlr3tokenstream.h	/^    pANTLR3_TOKEN_STREAM    tstream;$/;"	m	struct:ANTLR3_COMMON_TOKEN_STREAM_struct
type	/home/steffen/include/antlr3baserecognizer.h	/^    ANTLR3_UINT32	type;$/;"	m	struct:ANTLR3_BASE_RECOGNIZER_struct
type	/home/steffen/include/antlr3collections.h	/^	ANTLR3_UINT32   type;$/;"	m	struct:ANTLR3_TRIE_ENTRY_struct
type	/home/steffen/include/antlr3collections.h	/^	ANTLR3_UINT8	type;	\/**< One of ##ANTLR3_HASH_TYPE_INT or ##ANTLR3_HASH_TYPE_STR	*\/$/;"	m	struct:ANTLR3_HASH_KEY_struct
type	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_UINT32   type;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
type	/home/steffen/include/antlr3exception.h	/^    ANTLR3_UINT32   type;$/;"	m	struct:ANTLR3_EXCEPTION_struct
type	/home/steffen/include/antlr3intstream.h	/^    ANTLR3_UINT32	    type;$/;"	m	struct:ANTLR3_INT_STREAM_struct
type	/home/steffen/include/antlr3recognizersharedstate.h	/^    ANTLR3_UINT32		type;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
u	/home/steffen/include/antlr3basetree.h	/^    void    *	    u;$/;"	m	struct:ANTLR3_BASE_TREE_struct
unTruc	/home/steffen/include/antlr3collections.h	/^        ANTLR3_VECTOR        unTruc;$/;"	m	struct:ANTLR3_VECTOR_FACTORY_struct
unTruc	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_COMMON_TOKEN	    unTruc;$/;"	m	struct:ANTLR3_TOKEN_FACTORY_struct
unTruc	/home/steffen/include/antlr3commontree.h	/^    ANTLR3_COMMON_TREE	    unTruc;$/;"	m	struct:ANTLR3_ARBORETUM_struct
uniqueNavigationNodes	/home/steffen/include/antlr3commontreenodestream.h	/^    ANTLR3_BOOLEAN				uniqueNavigationNodes;$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
user1	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_UINT32   user1;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
user1	/home/steffen/include/antlr3recognizersharedstate.h	/^	ANTLR3_UINT32		user1, user2, user3;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
user2	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_UINT32   user2;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
user2	/home/steffen/include/antlr3recognizersharedstate.h	/^	ANTLR3_UINT32		user1, user2, user3;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
user3	/home/steffen/include/antlr3commontoken.h	/^    ANTLR3_UINT32   user3;$/;"	m	struct:ANTLR3_COMMON_TOKEN_struct
user3	/home/steffen/include/antlr3recognizersharedstate.h	/^	ANTLR3_UINT32		user1, user2, user3;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
userp	/home/steffen/include/antlr3recognizersharedstate.h	/^    void		* userp;$/;"	m	struct:ANTLR3_RECOGNIZER_SHARED_STATE_struct
vFactory	/home/steffen/include/antlr3commontree.h	/^    pANTLR3_VECTOR_FACTORY   vFactory;$/;"	m	struct:ANTLR3_ARBORETUM_struct
vector	/home/steffen/include/antlr3collections.h	/^    pANTLR3_VECTOR  vector;$/;"	m	struct:ANTLR3_STACK_struct
vectors	oris_automationParser.h	/^pANTLR3_VECTOR_FACTORY		vectors;$/;"	m	struct:oris_automationParser_Ctx_struct
visitChild	/home/steffen/include/antlr3commontreenodestream.h	/^    pANTLR3_BASE_TREE	(*visitChild)				(struct ANTLR3_COMMON_TREE_NODE_STREAM_struct * ctns, ANTLR3_UINT32 child);$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
visited	/home/steffen/include/antlr3collections.h	/^    pANTLR3_BITSET    visited;$/;"	m	struct:ANTLR3_TOPO_struct
walkBackToMostRecentNodeWithUnvisitedChildren	/home/steffen/include/antlr3commontreenodestream.h	/^    void				(*walkBackToMostRecentNodeWithUnvisitedChildren)$/;"	m	struct:ANTLR3_COMMON_TREE_NODE_STREAM_struct
